http://www.biomodels.net/kisao/KISAO#KISAO_0000253	http://www.biomodels.net/kisao/KISAO#KISAO_0000244	coarse-graining factor		The time in each Monte-Carlo iteration of 'binomial tau-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000074] is updated with the time increments tau=f/(a1+a2+...+aM). Here 1/(a1+a2+...+aM) is the averaged microscopic increment of the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] and f is a coarse-graining factor, controlling the speed-up.
http://www.biomodels.net/kisao/KISAO#KISAO_0000428		matrix for clusterization		A matrix to do the clustering in 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417].
http://www.biomodels.net/kisao/KISAO#KISAO_0000289		Adams method		Adams' methods are multi-step methods used for the numerical integration of initial value problems in Ordinary Differential Equations (ODE's). Adams' algorithm consists of two parts: firstly, a starting procedure which provides y1, ... , yk-1 ( approximations to the exact solution at the points x0 + h, ... , x0 + (k - 1)h ) and, secondly, a multistep formula to obtain an approximation to the exact solution y(x0 + kh). This is then applied recursively, based on the numerical approximation of k successive steps, to compute y(x0 + (k + 1)h).
http://www.biomodels.net/kisao/KISAO#KISAO_0000398	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	iterative method for linear system		
http://www.biomodels.net/kisao/KISAO#KISAO_0000303		Zonneveld method		An embedded Runge-Kutta method [http://identifiers.org/biomodels.kisao/KISAO_0000302] of order 4(3), proposed by J.A. Zonneveld in 1964.
http://www.biomodels.net/kisao/KISAO#KISAO_0000331	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	exact R-leaping algorithm	exact accelerated stochastic simulation algorithm	We present a SSA which, similar to R-leap [http://identifiers.org/biomodels.kisao/KISAO_0000330], accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by executing multiple reactions per algorithmic step, but which samples the reactant trajectories from the same probability distribution as the SSA. This 'exact R-leap' or 'ER-leap' algorithm is a modification of the R-leap algorithm which is both exact and capable of substantial speed-up over SSA.
http://www.biomodels.net/kisao/KISAO#KISAO_0000019	http://www.biomodels.net/kisao/KISAO#KISAO_0000433	CVODE	code value ordinary differential equation solver	The CVODE is a package written in C that solves ODE initial value problems, in real N-space, written as y'=f(t,y), y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].
http://www.biomodels.net/kisao/KISAO#KISAO_0000336		D-leaping method		We propose a novel, accelerated algorithm for the approximate stochastic simulation of biochemical systems with delays. The present work extends existing accelerated algorithms by distributing, in a time adaptive fashion, the delayed reactions so as to minimize the computational effort while preserving their accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000347	http://www.biomodels.net/kisao/KISAO#KISAO_0000311	meshless		Most meshless methods require a scattered set of nodal points in the domain of interest. In these methods, there may be no fixed connectivities between the nodes, unlike the finite element or finite difference methods. This feature has significant implications in modeling some physical phenomena that are characterized by a continuous change in the geometry of the domain under analysis. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000278	http://www.biomodels.net/kisao/KISAO#KISAO_0000319	Metropolis Monte Carlo algorithm	Metropolis-Hastings algorithm	A general method, suitable for fast computing machines, for investigating such properties as equations of state for substances consisting of interacting individual molecules is described. The method consists of a modified Monte Carlo integration [http://identifiers.org/biomodels.kisao/KISAO_0000051] over configuration space.
http://www.biomodels.net/kisao/KISAO#KISAO_0000231	http://www.biomodels.net/kisao/KISAO#KISAO_0000352	Pahle hybrid method		The hybrid method combines the stochastic 'Gibson-Bruck's next reaction method' [http://identifiers.org/biomodels.kisao/KISAO_0000027] with different algorithms for the numerical integration of ODEs [http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000374]. The biochemical network is dynamically partitioned into a deterministic and a stochastic subnet depending on the current particle numbers in the system. The user can define limits for when a particle number should be considered low or high. The stochastic subnet contains reactions involving low numbered species as substrate or product. All the other reactions form the deterministic subnet. The two subnets are then simulated in parallel using the stochastic and deterministic solver, respectively. The reaction probabilities in the stochastic subnet are approximated as constant between two stochastic reaction events.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051		Bortz-Kalos-Lebowitz algorithm	n-fold way	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000258	http://www.biomodels.net/kisao/KISAO#KISAO_0000252	neighbour distance		A parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. When a surface-bound molecule diffuses off of one surface panel, it can sometimes diffuse onto the neighbouring surface tile. It does so only if the neighbouring panel is declared to be a neighbour and also the neighbour is within a distance that is set with the neighbour distance statement.
http://www.biomodels.net/kisao/KISAO#KISAO_0000306	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	Lagrangian sliding fluid element algorithm	LSFEA	Because the analytic solutions to the partial differential equations require convolution integration, solutions are obtained relatively efficiently by a fast numerical method. Our approach centers on the use of a sliding fluid element algorithm for capillary convection, with the time step set equal to the length step divided by the fluid velocity. Radial fluxes by permeation between plasma, interstitial fluid, and cells and axial diffusion exchanges within each time step are calculated analytically. The method enforces mass conservation unless there is regional consumption.
http://www.biomodels.net/kisao/KISAO#KISAO_0000068	http://www.biomodels.net/kisao/KISAO#KISAO_0000264	deterministic cellular automata update algorithm		A cellular automaton is a discrete model of a regular grid of cells with a finite number of dimensions. Each cell has a finite number of defined states. The automaton changes its state in a discrete manner, meaning that the state of a cell at time t is determined by a function of the states of its neighbours at time t - 1. These neighbours are a selection of cells relative to the specified cell. Famous examples for deterministic cellular automata are Conway's game of life or Wolfram's elementary cellular automata.
http://www.biomodels.net/kisao/KISAO#KISAO_0000331		exact R-leaping algorithm	exact accelerated stochastic simulation algorithm	We present a SSA which, similar to R-leap [http://identifiers.org/biomodels.kisao/KISAO_0000330], accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by executing multiple reactions per algorithmic step, but which samples the reactant trajectories from the same probability distribution as the SSA. This 'exact R-leap' or 'ER-leap' algorithm is a modification of the R-leap algorithm which is both exact and capable of substantial speed-up over SSA.
http://www.biomodels.net/kisao/KISAO#KISAO_0000095	http://www.biomodels.net/kisao/KISAO#KISAO_0000335	sub-volume stochastic reaction-diffusion algorithm		Stochastic method using a combination of discretisation of compartment volumes into voxels and Gillespie-like algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000241] to simulate the evolution of the system.
http://www.biomodels.net/kisao/KISAO#KISAO_0000427		number of clusters		Parameter specifying the number of clusters used by C-means algorithm.
http://www.biomodels.net/kisao/KISAO#KISAO_0000029		Gillespie direct algorithm	Doob-Gillespie method	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.
http://www.biomodels.net/kisao/KISAO#KISAO_0000425	http://www.biomodels.net/kisao/KISAO#KISAO_0000430	standardising of variables		A boolean parameter of the 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417] specifying whether the variables were standardised (divided by their standard deviations) prior to the regression analysis.
http://www.biomodels.net/kisao/KISAO#KISAO_0000367	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	partitioned Runge-Kutta method	symplectic partitioned Runge-Kutta method	If a Hamiltonian system possesses a natural partitioning, it is possible to integrate its certain components using one Runge-Kutta method and other components using a different Runge-Kutta method. The overall s-stage scheme is called a partitioned Runge-Kutta method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000280	http://www.biomodels.net/kisao/KISAO#KISAO_0000289	Adams-Moulton method	implicit Adams method	The (k-1)-step Adams-Moulton method is an implicit linear multistep method that iteratively approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( b0 f(xk,yk) + b1 f(xk - 1,yk - 1) + . . . + bk - 1 f(x1,y1) ), where b1, . . . , bk - 1 are constants.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418		N-way partial least squares regression method	N-PLS	Requested by Kristin Tøndel on Thursday, October 13, 2011 11:33:06 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000257		surface-bound epsilon		A parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. Molecules that are bound to a surface are given locations that are extremely close to that surface. However, this position does not need to be exactly at the surface, and in fact it usually cannot be exactly at the surface due to round-off error. The tolerance for how far a surface-bound molecule is allowed to be away from the surface can be set with the epsilon statement.
http://www.biomodels.net/kisao/KISAO#KISAO_0000021		StochSim nearest-neighbour algorithm		The nearest-neighbour algorithm allows for the representation of spatial information, by adding a two-dimensional lattice in the form of a probabilistic cellular automata. That way, nearest neighbour interactions do additionally influence reactions taking place in the systems. Reactions between entities are calculated using the agent-based simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000017].
http://www.biomodels.net/kisao/KISAO#KISAO_0000370	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	type of problem		A characteristic describing the type of the problems which can be solved by the algorithm.
http://www.biomodels.net/kisao/KISAO#KISAO_0000318	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	Gauss-Legendre Runge-Kutta method	Open Formula	So called 'Open Formula', two points formula, three points formula, four points formula, five points formula and six points formula of the Runge-Kutta method to solve the initial value problem of the ordinary differential equation. These formulas use the points and weights from the Gauss-Legendre Quadrature formulas for finding the value of the definite integral.
http://www.biomodels.net/kisao/KISAO#KISAO_0000353	http://www.biomodels.net/kisao/KISAO#KISAO_0000354	generalized minimal residual algorithm	GMRES	An iterative method for solving linear systems, which has the property of minimizing at every step the norm of the residual vector over a Krylov subspace. The generalized minimal residual method extends the minimal residual method (MINRES) [http://identifiers.org/biomodels.kisao/KISAO_0000388], which is only applicable to symmetric systems, to non-symmetric systems.
http://www.biomodels.net/kisao/KISAO#KISAO_0000310	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	method of lines	NMOL	The method of lines is a general technique for solving partial differential equations (PDEs) by typically using finite difference relationships for the spatial derivatives and ordinary differential equations for the time derivative.
http://www.biomodels.net/kisao/KISAO#KISAO_0000084		nonnegative Poisson tau-leaping method	modified poisson tau-leaping	The explicit tau-leaping procedure attempts to speed up the stochastic simulation of a chemically reacting system by approximating the number of firings of each reaction channel during a chosen time increment Tau as a Poisson random variable. Since the Poisson random variable can have arbitrarily large sample values, there is always the possibility that this procedure will cause one or more reaction channels to fire so many times during Tau that the population of some reactant species will be driven negative. Two recent papers have shown how that unacceptable occurrence can be avoided by replacing the Poisson random variables with binomial random variables, whose values are naturally bounded. This paper describes a modified Poisson tau-leaping procedure that also avoids negative populations, but is easier to implement than the binomial procedure. The new Poisson procedure also introduces a second control parameter, whose value essentially dials the procedure from the original Poisson tau-leaping at one extreme to the exact stochastic simulation algorithm at the other; therefore, the modified Poisson procedure will generally be more accurate than the original Poisson procedure [http://identifiers.org/biomodels.kisao/KISAO_0000040].
http://www.biomodels.net/kisao/KISAO#KISAO_0000354		Krylov subspace projection method	Krylov subspace method	Krylov subspace method is an iterative linear equation method, which builds up Krylov subspaces and look for good approximations to eigenvectors and invariant subspaces within the Krylov spaces.
http://www.biomodels.net/kisao/KISAO#KISAO_0000030	http://www.biomodels.net/kisao/KISAO#KISAO_0000261	Euler forward method	explicit Euler method	The Euler method is an explicit one-step method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051		Bortz-Kalos-Lebowitz algorithm	kinetic Monte Carlo method	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	N-way partial least squares regression method	N-way partial least squares method	Multivariate regression method that can be used on N-way data. Based on Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416], which is a regression method based on estimated latent variables. PLSR is related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
http://www.biomodels.net/kisao/KISAO#KISAO_0000331	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	exact R-leaping algorithm	ER-leap method	We present a SSA which, similar to R-leap [http://identifiers.org/biomodels.kisao/KISAO_0000330], accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by executing multiple reactions per algorithmic step, but which samples the reactant trajectories from the same probability distribution as the SSA. This 'exact R-leap' or 'ER-leap' algorithm is a modification of the R-leap algorithm which is both exact and capable of substantial speed-up over SSA.
http://www.biomodels.net/kisao/KISAO#KISAO_0000257	http://www.biomodels.net/kisao/KISAO#KISAO_0000252	surface-bound epsilon		A parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. Molecules that are bound to a surface are given locations that are extremely close to that surface. However, this position does not need to be exactly at the surface, and in fact it usually cannot be exactly at the surface due to round-off error. The tolerance for how far a surface-bound molecule is allowed to be away from the surface can be set with the epsilon statement.
http://www.biomodels.net/kisao/KISAO#KISAO_0000315	http://www.biomodels.net/kisao/KISAO#KISAO_0000068	lattice gas automata	lattice gas cellular automata	Lattice gas automata methods are a series of cellular automata methods used to simulate fluid flows. From the LGCA, it is possible to derive the macroscopic Navier-Stokes equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000363		rule-based simulation method		Rule-based models provide a powerful alternative to approaches that require explicit enumeration of all possible molecular species of a system. Such models consist of formal rules governing interactive behaviour. Rule-based simulation methods are methods, used to simulated such models.
http://www.biomodels.net/kisao/KISAO#KISAO_0000419	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	metamodelling method		Deterministic dynamic models of complex biological systems contain a large number of parameters and state variables, related through nonlinear differential equations with various types of feedback. A metamodel of such a dynamic model is a statistical approximation model that maps variation in parameters and initial conditions (inputs) to variation in features of the trajectories of the state variables (outputs) throughout the entire biologically relevant input space.
http://www.biomodels.net/kisao/KISAO#KISAO_0000367	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	partitioned Runge-Kutta method	SPRK	If a Hamiltonian system possesses a natural partitioning, it is possible to integrate its certain components using one Runge-Kutta method and other components using a different Runge-Kutta method. The overall s-stage scheme is called a partitioned Runge-Kutta method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000056	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	Smoluchowski equation based method		Method based on the Smoluchowski equation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000331	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	exact R-leaping algorithm	exact R-leap method	We present a SSA which, similar to R-leap [http://identifiers.org/biomodels.kisao/KISAO_0000330], accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by executing multiple reactions per algorithmic step, but which samples the reactant trajectories from the same probability distribution as the SSA. This 'exact R-leap' or 'ER-leap' algorithm is a modification of the R-leap algorithm which is both exact and capable of substantial speed-up over SSA.
http://www.biomodels.net/kisao/KISAO#KISAO_0000064		Runge-Kutta based method	modified Euler method	A method of numerically integrating ordinary differential equations, which uses a sampling of slopes through an interval and takes a weighted average to determine the right end point. This averaging gives a very accurate approximation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000338	http://www.biomodels.net/kisao/KISAO#KISAO_0000337	h-version of the finite element method	h-method	Classical form of the 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337], in which polynomials of fixed degree p are used and the mesh is refined to increase accuracy. Can be considered as a special case of the h-p version [http://identifiers.org/biomodels.kisao/KISAO_0000340].
http://www.biomodels.net/kisao/KISAO#KISAO_0000416		partial least squares regression method	PLSR method	Requested by Kristin Tøndel on Thursday, October 13, 2011 10:46:04 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000027		Gibson-Bruck next reaction algorithm	Gibson-Bruck's next reaction algorithm	As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.
http://www.biomodels.net/kisao/KISAO#KISAO_0000453	http://www.biomodels.net/kisao/KISAO#KISAO_0000451	ordered updating policy		An updating policy that chooses a transition in a definite way.
http://www.biomodels.net/kisao/KISAO#KISAO_0000378	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	implicit midpoint rule	implicit Gaussian second order Runge-Kutta method	The implicit midpoint rule is a second-order case of the more general implicit s-stage Runge-Kutta methods [http://identifiers.org/biomodels.kisao/KISAO_0000064 and (http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000240)].
http://www.biomodels.net/kisao/KISAO#KISAO_0000051	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Bortz-Kalos-Lebowitz algorithm	dynamic Monte Carlo method	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000306		Lagrangian sliding fluid element algorithm	LSFEA	Because the analytic solutions to the partial differential equations require convolution integration, solutions are obtained relatively efficiently by a fast numerical method. Our approach centers on the use of a sliding fluid element algorithm for capillary convection, with the time step set equal to the length step divided by the fluid velocity. Radial fluxes by permeation between plasma, interstitial fluid, and cells and axial diffusion exchanges within each time step are calculated analytically. The method enforces mass conservation unless there is regional consumption.
http://www.biomodels.net/kisao/KISAO#KISAO_0000322	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	hybridity		The basic idea of hybrid simulation methods is to combine the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time.
http://www.biomodels.net/kisao/KISAO#KISAO_0000358	http://www.biomodels.net/kisao/KISAO#KISAO_0000354	biconjugate gradient method	BiCG	The biconjugate gradient method provides a generalization of conjugate gradient method [http://identifiers.org/biomodels.kisao/KISAO_0000357] to non-symmetric matrices.
http://www.biomodels.net/kisao/KISAO#KISAO_0000447	http://www.biomodels.net/kisao/KISAO#KISAO_0000352	COAST	controllable approximative stochastic reaction algorithm	An approximative algorithm for stochastic simulations of chemical reaction systems based on three different modeling levels: for small numbers of particles an exact [http://identifiers.org/biomodels.kisao/KISAO_0000236] stochastic [http://identifiers.org/biomodels.kisao/KISAO_0000104] model; for intermediate numbers an approximative [http://identifiers.org/biomodels.kisao/KISAO_0000237], but computationally more efficient stochastic [http://identifiers.org/biomodels.kisao/KISAO_0000104] model based on discrete Gaussian distributions; and for large numbers the deterministic [http://identifiers.org/biomodels.kisao/KISAO_0000103] reaction kinetics. In every simulation time step, the subdivision of the reaction channels into the three different modeling levels is done automatically, where all approximations applied can be controlled by a single error parameter for which an appropriate value can easily be found.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Bortz-Kalos-Lebowitz algorithm	KMC	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000106	http://www.biomodels.net/kisao/KISAO#KISAO_0000098	continuous variable		Algorithm, possessing this characteristic, allows the values of a system's variables to change by continuous (non-integral) amounts.
http://www.biomodels.net/kisao/KISAO#KISAO_0000416	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	partial least squares regression method	PLSR	Multivariate regression method based on estimated latent variables. Related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
http://www.biomodels.net/kisao/KISAO#KISAO_0000343		generalized finite element method	GFEM	The GFEM is a generalization of the classical 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] — in its h [http://identifiers.org/biomodels.kisao/KISAO_0000338], p [http://identifiers.org/biomodels.kisao/KISAO_0000339], and h-p versions [http://identifiers.org/biomodels.kisao/KISAO_0000340]— as well as of the various forms of meshless methods used in engineering.
http://www.biomodels.net/kisao/KISAO#KISAO_0000249		critical firing threshold	nonnegative tau-leaping second control parameter	The 'nonnegative Poisson tau-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000084] is based on the fact that negative populations typically arise from multiple firings of reactions that are only a few firings away from consuming all the molecules of one of their reactants. To focus on those reaction channels, the modified tau-leaping algorithm introduces a second control parameter nc, a positive integer that is usually set somewhere between 5 and 20. Any reaction channel with a positive propensity function that is currently within nc firings of exhausting one of its reactants is then classified as a critical reaction. The modified algorithm chooses tau in such a way that no more than one firing of all the critical reactions can occur during the leap.
http://www.biomodels.net/kisao/KISAO#KISAO_0000290	http://www.biomodels.net/kisao/KISAO#KISAO_0000302	Merson method	KM	A five-stage Runge-Kutta method with fourth-order accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000057		Brownian diffusion Smoluchowski method		In the Brownian diffusion Smoluchowski method, ''each molecule is treated as a point-like particle that diffuses freely in three-dimensional space. When a pair of reactive molecules collide, such as an enzyme and its substrate, a reaction occurs and the simulated reactants are replaced by products. [..] Analytic solutions are presented for some simulation parameters while others are calculated using look-up tables''. Supported chemical processes include molecular diffusion, treatment of surfaces, zeroth-order-, unimolecular-, and bimolecular reactions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000372	http://www.biomodels.net/kisao/KISAO#KISAO_0000405	partial differential equation problem	PDE problem	
http://www.biomodels.net/kisao/KISAO#KISAO_0000358		biconjugate gradient method	Bi-CG	The biconjugate gradient method provides a generalization of conjugate gradient method [http://identifiers.org/biomodels.kisao/KISAO_0000357] to non-symmetric matrices.
http://www.biomodels.net/kisao/KISAO#KISAO_0000090	http://www.biomodels.net/kisao/KISAO#KISAO_0000094	LSODI	Livermore solver for ordinary differential equations, implicit version	LSODI solves systems given in linearly implicit form, including differential-algebraic systems.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Bortz-Kalos-Lebowitz algorithm	BKL	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000032	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	explicit fourth-order Runge-Kutta method	ERK4	The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval).
http://www.biomodels.net/kisao/KISAO#KISAO_0000031		Euler backward method	implicit Euler method	The Euler backward method is an implicit one-step method for the numerical integration of ODES with a given initial value. The next state of a system is calculated by solving an equation that considers both, the current state of the system and the later one.
http://www.biomodels.net/kisao/KISAO#KISAO_0000309	http://www.biomodels.net/kisao/KISAO#KISAO_0000307	Crank-Nicolson method		In numerical analysis, the Crank-Nicolson method is a finite difference method [http://identifiers.org/biomodels.kisao/KISAO_0000307] used for numerically solving the heat equation and similar partial differential equations. It is a second-order method in time, implicit in time, and is numerically stable. The method was developed by John Crank and Phyllis Nicolson in the mid 20th century.
http://www.biomodels.net/kisao/KISAO#KISAO_0000455	http://www.biomodels.net/kisao/KISAO#KISAO_0000453	prioritized updating policy		An updating policy that chooses a transition in a prioritized way.
http://www.biomodels.net/kisao/KISAO#KISAO_0000017		multi-state agent-based simulation method	Morton-Firth	The agent-based simulation method instantiates each molecule as an individual software object. The interactions between those objects are determined by interaction probabilities according to experimental data. The probability is depended on the state the molecule is in at that specific time (molecules have multiple-state). Additionally, ''pseudo-molecules'' are introduced to the system in order to simulate unimolecular reactions. For simulation, continuous time is broken down into discrete, independent ''slices''. During each time slice one molecule is selected randomly, a second molecule or pseudo-molecule is selected afterwards (leading to either a unimolecular or a bimolecular reaction). The reaction will only take place if a produced random number exceeds the reaction probability calculated beforehand. In that case, the system is updated after that reaction.
http://www.biomodels.net/kisao/KISAO#KISAO_0000355		DASPK	DDASPK	In DASPK, we have combined the time-stepping methods of DASSL [http://identifiers.org/biomodels.kisao/KISAO_0000255] with preconditioned iterative method GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000386], for solving large-scale systems of DAEs of the form F(t, y, y') = 0, where F, y, y' are N-dimensional vectors, and a consistent set of initial conditions y(t0) = y0, y'(t0) = y'0 is given. DASPK is written in Fortran.
http://www.biomodels.net/kisao/KISAO#KISAO_0000339	http://www.biomodels.net/kisao/KISAO#KISAO_0000337	p-version of the finite element method	p-FEM	The p version of 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] uses a fixed mesh but increases the polynomial degree p to increase accuracy. Can be considered as a special case of the h-p version [http://identifiers.org/biomodels.kisao/KISAO_0000340].
http://www.biomodels.net/kisao/KISAO#KISAO_0000071	http://www.biomodels.net/kisao/KISAO#KISAO_0000094	LSODE	Livermore solver for ordinary differential equations	LSODE solves stiff and nonstiff systems of the form dy/dt = f. In the stiff case, it treats the Jacobian matrix sf/dy as either a dense (full) or a banded matrix, and as either user-supplied or internally approximated by difference quotients. It uses Adams methods (predictor-corrector) [http://identifiers.org/biomodels.kisao/KISAO_0000364] in the nonstiff case, and Backward Differentiation Formula (BDF) methods (the Gear methods) [http://identifiers.org/biomodels.kisao/KISAO_0000288] in the stiff case.
http://www.biomodels.net/kisao/KISAO#KISAO_0000327	http://www.biomodels.net/kisao/KISAO#KISAO_0000252	maximum discrete number		Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which controls the maximum number of molecules of some reactant species in order for the reaction to be considered discrete.
http://www.biomodels.net/kisao/KISAO#KISAO_0000415		maximum number of steps		Maximum number of steps the 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] algorithm is allowed to take.
http://www.biomodels.net/kisao/KISAO#KISAO_0000285		finite volume method	FVM	The finite volume method is a method for representing and evaluating partial differential equations in the form of algebraic equations, which attempts to emulate continuous conservation laws of physics.
http://www.biomodels.net/kisao/KISAO#KISAO_0000340	http://www.biomodels.net/kisao/KISAO#KISAO_0000337	h-p version of the finite element method	hp-method	In h-p version of 'finite difference method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] the two approaches of mesh refinement and degree enchacement are combined.
http://www.biomodels.net/kisao/KISAO#KISAO_0000314		S-System power-law canonical differential equations solver	ESSYNS GMA	Ordinary differential equations can be recast into a nonlinear canonical form called an S-system. Evidence for the generality of this class comes from extensive empirical examples that have been recast and from the discovery that sets of differential equations and functions, recognized as among the most general, are special cases of S-systems. Identification of this nonlinear canonical form suggests a radically different approach to numerical solution of ordinary differential equations. By capitalizing on the regular structure of S-systems, efficient formulas for a variable-order, variable-step Taylor-series method are developed. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000435		embedded Runge-Kutta 5(4) method	RK5(4)	An embedded Runge-Kutta integrator of order 5(4).
http://www.biomodels.net/kisao/KISAO#KISAO_0000328		minimum fast rate		Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which controls the minimum rate of the reaction in order for it to be considered fast.
http://www.biomodels.net/kisao/KISAO#KISAO_0000219		LSODA maximum non-stiff order	Adams max order	This parameter is a positive integer value specifying the maximal order the non-stiff Adams integration method [http://identifiers.org/biomodels.kisao/KISAO_0000289] shall attempt before switching to the stiff BDF method [http://identifiers.org/biomodels.kisao/KISAO_0000288].
http://www.biomodels.net/kisao/KISAO#KISAO_0000248		tau-leaping delta		Tau-leaping delta specifies how close two symmetric transition rates must be before we classify them as in partial-equilibrium. Only applies to the implicit tau routine [http://identifiers.org/biomodels.kisao/KISAO_0000045].
http://www.biomodels.net/kisao/KISAO#KISAO_0000382		modified midpoint method	Gragg's modified midpoint method	The modified midpoint method is globally a second order method for approximating the solution of the initial value problem y' = f(x, y), y(x0) = y0, which advances a vector of dependent variables y(x) from a point x to a point x + H by a sequence of n substeps each of size h, h = H/n. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000045	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	implicit tau-leaping method		Contrary to the explicit tau-leaping [http://identifiers.org/biomodels.kisao/KISAO_0000039 and http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000239] , the implicit tau-leaping allows for much larger time-steps when simulating stiff systems.
http://www.biomodels.net/kisao/KISAO#KISAO_0000030	http://www.biomodels.net/kisao/KISAO#KISAO_0000261	Euler forward method	explicit Gaussian first order Runge-Kutta	The Euler method is an explicit one-step method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t.
http://www.biomodels.net/kisao/KISAO#KISAO_0000408		Newton-type method		Requested by Frank T. Bergmann on Sunday, November 27, 2011 4:45:30 PM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000351	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	multinomial tau-leaping method	MtauL	The multinomial tau-leaping method is an extension of the binomial tau-leaping method [http://identifiers.org/biomodels.kisao/KISAO_0000074] to networks with arbitrary multiple-channel reactant dependencies. Improvements were achieved by a combination of three factors: First, tau-leaping steps are determined simply and efficiently using a-priori information and Poisson distribution based estimates of expectation values for reaction numbers. Second, networks are partitioned into closed groups of reactions and corresponding reactants in which no group reactant set is found in any other group. Third, product formation is factored into upper bound estimation of the number of times a particular reaction occurs.
http://www.biomodels.net/kisao/KISAO#KISAO_0000316	http://www.biomodels.net/kisao/KISAO#KISAO_0000056	enhanced Greens function reaction dynamics	enhanced Greens function reaction dynamics	GFRD [http://identifiers.org/biomodels.kisao/KISAO_0000058] decomposes the multi­body reaction diffusion problem to a set of single and two body problems. Analytical solutions for two body reaction diffusion are available via Smoluchowski equation. eGFRD allows to solve each sub­problem asynchronously by introducing the concept of first passage processes.
http://www.biomodels.net/kisao/KISAO#KISAO_0000408	http://www.biomodels.net/kisao/KISAO#KISAO_0000407	Newton-type method		A method which attacks the solution of a nonlinear problem F(x) = 0 by solving a sequence of liner problems of the same kind. The solution of the system F(x)=0 can be interpreted as a steady state of a dynamic system x'(t)=F(x(t)). The Newton approach will only work if the fixed point [http://identifiers.org/biomodels.teddy/TEDDY_0000086] of the dinamic system is attractive [http://identifiers.org/biomodels.teddy/TEDDY_0000094].
http://www.biomodels.net/kisao/KISAO#KISAO_0000102	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	spatial description		Algorithm, possessing this characteristic, takes into account the location of the reacting components.
http://www.biomodels.net/kisao/KISAO#KISAO_0000307		finite difference method	FDM	The finite difference method is based on local approximations of the partial derivatives in a Partial Differential Equation, which are derived by low order Taylor series expansions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000336	http://www.biomodels.net/kisao/KISAO#KISAO_0000335	D-leaping method		We propose a novel, accelerated algorithm for the approximate stochastic simulation of biochemical systems with delays. The present work extends existing accelerated algorithms by distributing, in a time adaptive fashion, the delayed reactions so as to minimize the computational effort while preserving their accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000086	http://www.biomodels.net/kisao/KISAO#KISAO_0000435	Fehlberg method	Runge-Kutta-Fehlberg method	The method was developed by the German mathematician Erwin Fehlberg and is based on the class of Runge-Kutta methods. The Runge-Kutta-Fehlberg method uses an O(h4) method together with an O(h5) method that uses all of the points of the O(h4) method, and hence is often referred to as an RKF45 method. Similar schemes with different orders have since been developed. By performing one extra calculation that would be required for an RK5 method, the error in the solution can be estimated and controlled and an appropriate step size can be determined automatically, making this method efficient for ordinary problems of automated numerical integration of ordinary differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Bortz-Kalos-Lebowitz algorithm	kinetic Monte Carlo	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000396	http://www.biomodels.net/kisao/KISAO#KISAO_0000389	transpose-free quasi-minimal residual algorithm	TFQMR	A version of CGS [http://identifiers.org/biomodels.kisao/KISAO_0000393] which 'quasi-minimizes' the residual in the space spanned by the vectors generated by the CGS iteration. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000233	http://www.biomodels.net/kisao/KISAO#KISAO_0000094	LSODES	Livermore solver for ordinary differential equations with general sparse Jacobian matrix	LSODES solves systems dy/dt = f and in the stiff case treats the Jacobian matrix in general sparse form. It determines the sparsity structure on its own, or optionally accepts this information from the user. It then uses parts of the Yale Sparse Matrix Package (YSMP) to solve the linear systems that arise, by a sparse (direct) LU factorization/backsolve method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000381		midpoint method		The midpoint method is an explicit method for approximating the solution of the initial value problem y' = f(x,y); y(x0) = y0 at x for a given step size h. For the midpoint method the derivative of y(x) is approximated by the symmetric difference y'(x) = ( y(x+h) - y(x-h) ) / 2h + O(h2).
http://www.biomodels.net/kisao/KISAO#KISAO_0000040		Poisson tau-leaping method	explicit tau-leaping method with basic pre-leap check	Explicit tau-leaping method with basic pre leap check.
http://www.biomodels.net/kisao/KISAO#KISAO_0000075		Gillespie multi-particle method	Gillespie's multi-particle method	Combination of the multiparticle method for diffusion [http://identifiers.org/biomodels.kisao/KISAO_0000334] and the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029].
http://www.biomodels.net/kisao/KISAO#KISAO_0000299	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	Butcher-Kuntzmann method	Gauss method	From a theoretical point of view, the Butcher-Kuntzmann Runge-Kutta methods belong to the best step-by-step methods for nonstiff problems. These methods integrate first-order initial-value problems by means of formulas based on Gauss-Legendre quadrature, and combine excellent stability features with the property of superconvergence at the step points.
http://www.biomodels.net/kisao/KISAO#KISAO_0000384		semi-implicit midpoint rule		A semi-implicit version of the midpoint method that has an even error series [http://identifiers.org/biomodels.kisao/KISAO_0000381].
http://www.biomodels.net/kisao/KISAO#KISAO_0000421		type of validation		Parameter of 'partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000416] describing how validation is performed. Possible values include cross-validation and test set validation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000282		KINSOL	NKSOL	KINSOL solves algebraic systems in real N-space, written as F(u)=0, F:RN->RN, given an initial guess u0. The basic method is either a modified or an inexact Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408]. The linear systems that arise are solved with either a direct (dense or banded) solver (serial version only), or one of the Krylov iterative solvers [http://identifiers.org/biomodels.kisao/KISAO_0000354]. In the Krylov case, the user can (optionally) supply a right preconditioner.
http://www.biomodels.net/kisao/KISAO#KISAO_0000276		Gill method	Runge-Kutta-Gill method	Gill's fourth order method is a Runge-Kutta method for approximating the solution of the initial value problem y'(x) = f(x,y); y(x0) = y0 which evaluates the integrand,f(x,y), four times per step. This method is a fourth order procedure for which Richardson extrapolation can be used.
http://www.biomodels.net/kisao/KISAO#KISAO_0000084	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	nonnegative Poisson tau-leaping method	modified poisson tau-leaping	The explicit tau-leaping procedure attempts to speed up the stochastic simulation of a chemically reacting system by approximating the number of firings of each reaction channel during a chosen time increment Tau as a Poisson random variable. Since the Poisson random variable can have arbitrarily large sample values, there is always the possibility that this procedure will cause one or more reaction channels to fire so many times during Tau that the population of some reactant species will be driven negative. Two recent papers have shown how that unacceptable occurrence can be avoided by replacing the Poisson random variables with binomial random variables, whose values are naturally bounded. This paper describes a modified Poisson tau-leaping procedure that also avoids negative populations, but is easier to implement than the binomial procedure. The new Poisson procedure also introduces a second control parameter, whose value essentially dials the procedure from the original Poisson tau-leaping at one extreme to the exact stochastic simulation algorithm at the other; therefore, the modified Poisson procedure will generally be more accurate than the original Poisson procedure [http://identifiers.org/biomodels.kisao/KISAO_0000040].
http://www.biomodels.net/kisao/KISAO#KISAO_0000244	http://www.biomodels.net/kisao/KISAO#KISAO_0000201	granularity control parameter		Parameter controlling granularity.
http://www.biomodels.net/kisao/KISAO#KISAO_0000086	http://www.biomodels.net/kisao/KISAO#KISAO_0000435	Fehlberg method	RKF45	The method was developed by the German mathematician Erwin Fehlberg and is based on the class of Runge-Kutta methods. The Runge-Kutta-Fehlberg method uses an O(h4) method together with an O(h5) method that uses all of the points of the O(h4) method, and hence is often referred to as an RKF45 method. Similar schemes with different orders have since been developed. By performing one extra calculation that would be required for an RK5 method, the error in the solution can be estimated and controlled and an appropriate step size can be determined automatically, making this method efficient for ordinary problems of automated numerical integration of ordinary differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000022		Elf and Ehrenberg method	next-subvolume method	Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [http://identifiers.org/biomodels.kisao/KISAO_0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s).
http://www.biomodels.net/kisao/KISAO#KISAO_0000432	http://www.biomodels.net/kisao/KISAO#KISAO_0000408	IDA-like method		Solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0, y(t0)=y0, y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396]).
http://www.biomodels.net/kisao/KISAO#KISAO_0000315		lattice gas automata	LGCA	Lattice gas automata methods are a series of cellular automata methods used to simulate fluid flows. From the LGCA, it is possible to derive the macroscopic Navier-Stokes equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000416		partial least squares regression method	PLSR method	Multivariate regression method based on estimated latent variables. Related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
http://www.biomodels.net/kisao/KISAO#KISAO_0000447		COAST	controllable approximative stochastic reaction algorithm	An approximative algorithm for stochastic simulations of chemical reaction systems based on three different modeling levels: for small numbers of particles an exact [http://identifiers.org/biomodels.kisao/KISAO_0000236] stochastic [http://identifiers.org/biomodels.kisao/KISAO_0000104] model; for intermediate numbers an approximative [http://identifiers.org/biomodels.kisao/KISAO_0000237], but computationally more efficient stochastic [http://identifiers.org/biomodels.kisao/KISAO_0000104] model based on discrete Gaussian distributions; and for large numbers the deterministic [http://identifiers.org/biomodels.kisao/KISAO_0000103] reaction kinetics. In every simulation time step, the subdivision of the reaction channels into the three different modeling levels is done automatically, where all approximations applied can be controlled by a single error parameter for which an appropriate value can easily be found.
http://www.biomodels.net/kisao/KISAO#KISAO_0000411	http://www.biomodels.net/kisao/KISAO#KISAO_0000408	Newton-like method		A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which is characterized by the fact that, in finite dimension, the Jacodian matrices are either replaced by some fixed 'close by' Jacobian F'(z) with z not equal to the initial guess x[0], or by some approximation so that: M'(x[0])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,...
http://www.biomodels.net/kisao/KISAO#KISAO_0000340		h-p version of the finite element method	hp-method	In h-p version of 'finite difference method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] the two approaches of mesh refinement and degree enchacement are combined.
http://www.biomodels.net/kisao/KISAO#KISAO_0000355	http://www.biomodels.net/kisao/KISAO#KISAO_0000432	DASPK	SDASPK	In DASPK, we have combined the time-stepping methods of DASSL [http://identifiers.org/biomodels.kisao/KISAO_0000255] with preconditioned iterative method GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000386], for solving large-scale systems of DAEs of the form F(t, y, y') = 0, where F, y, y' are N-dimensional vectors, and a consistent set of initial conditions y(t0) = y0, y'(t0) = y'0 is given. DASPK is written in Fortran.
http://www.biomodels.net/kisao/KISAO#KISAO_0000290	http://www.biomodels.net/kisao/KISAO#KISAO_0000302	Merson method	Runge-Kutta-Merson method	A five-stage Runge-Kutta method with fourth-order accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000310		method of lines	NUMOL	The method of lines is a general technique for solving partial differential equations (PDEs) by typically using finite difference relationships for the spatial derivatives and ordinary differential equations for the time derivative.
http://www.biomodels.net/kisao/KISAO#KISAO_0000345		h-p cloud method	method of clouds	A meshless method, which uses a partition of unity to construct the family of h-p cloud functions. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000356	http://www.biomodels.net/kisao/KISAO#KISAO_0000432	DASSL	SDASSL	DASSL is designed for the numerical solution of implicit systems of differential/algebraic equations written in the form F(t,y,y')=0, where F, y, and y' are vectors, and initial values for y and y' are given.
http://www.biomodels.net/kisao/KISAO#KISAO_0000276		Gill method	Gill's method	Gill's fourth order method is a Runge-Kutta method for approximating the solution of the initial value problem y'(x) = f(x,y); y(x0) = y0 which evaluates the integrand,f(x,y), four times per step. This method is a fourth order procedure for which Richardson extrapolation can be used.
http://www.biomodels.net/kisao/KISAO#KISAO_0000306		Lagrangian sliding fluid element algorithm	BTEX	Because the analytic solutions to the partial differential equations require convolution integration, solutions are obtained relatively efficiently by a fast numerical method. Our approach centers on the use of a sliding fluid element algorithm for capillary convection, with the time step set equal to the length step divided by the fluid velocity. Radial fluxes by permeation between plasma, interstitial fluid, and cells and axial diffusion exchanges within each time step are calculated analytically. The method enforces mass conservation unless there is regional consumption.
http://www.biomodels.net/kisao/KISAO#KISAO_0000033		Rosenbrock method	Kaps-Rentrop method	Some general implicit processes are given for the solution of simultaneous first-order differential equations. These processes, which use successive substitution, are implicit analogues of the (explicit) Runge-Kutta processes. They require the solution in each time step of one or more set of simultaneous linear equations, usually of a special and simple form. Processes of any required order can be devised, and they can be made to have a wide margin of stability when applied to a linear problem.
http://www.biomodels.net/kisao/KISAO#KISAO_0000286		Euler-Maruyama method	stochastic Euler scheme	The Euler-Maruyama method is a method for the approximate numerical solution of a stochastic differential equation, which truncates the Ito and Stratonovich Taylor series of the exact solution after the first order stochastic terms. This converges to the Ito solution with strong global order accuracy 1/2 or weak global order accuracy 1. It is a simple generalization of the Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261] for ordinary differential equations to stochastic differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000091	http://www.biomodels.net/kisao/KISAO#KISAO_0000094	LSODIS	Livermore solver for ordinary differential equations, implicit sparse version	LSODIS is a set of general-purpose FORTRAN routines solver for the initial value problem for ordinary differential equation systems. It is suitable for both stiff and nonstiff systems. LSODIS treat systems in the linearly implicit form A(t,y) dy/dt = g(t,y), A = a square matrix, i.e. with the derivative dy/dt implicit, but linearly so.
http://www.biomodels.net/kisao/KISAO#KISAO_0000386	http://www.biomodels.net/kisao/KISAO#KISAO_0000353	scaled preconditioned generalized minimal residual method	SPGMR	A scaled preconditioned version of 'generalized minimal residual algorithm' [http://identifiers.org/biomodels.kisao/KISAO_0000353]. For linear system Ax = b a preconditioner matrix P that approximates A is sought, for which linear system Px = b can be solved easily. Preconditioning is applied on the left only. Scaling is done using diagonal matrix D whose diagonal elements are weights w^i = rtol|y^i| +atol^i, where rtol is 'relative tolerance' [http://identifiers.org/biomodels.kisao/KISAO_0000209] and atol is 'absolute tolerance' [http://identifiers.org/biomodels.kisao/KISAO_0000211].
http://www.biomodels.net/kisao/KISAO#KISAO_0000310		method of lines	MOL	The method of lines is a general technique for solving partial differential equations (PDEs) by typically using finite difference relationships for the spatial derivatives and ordinary differential equations for the time derivative.
http://www.biomodels.net/kisao/KISAO#KISAO_0000231		Pahle hybrid method		The hybrid method combines the stochastic 'Gibson-Bruck's next reaction method' [http://identifiers.org/biomodels.kisao/KISAO_0000027] with different algorithms for the numerical integration of ODEs [http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000374]. The biochemical network is dynamically partitioned into a deterministic and a stochastic subnet depending on the current particle numbers in the system. The user can define limits for when a particle number should be considered low or high. The stochastic subnet contains reactions involving low numbered species as substrate or product. All the other reactions form the deterministic subnet. The two subnets are then simulated in parallel using the stochastic and deterministic solver, respectively. The reaction probabilities in the stochastic subnet are approximated as constant between two stochastic reaction events.
http://www.biomodels.net/kisao/KISAO#KISAO_0000029	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Gillespie direct algorithm	Gillespie's direct method	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.
http://www.biomodels.net/kisao/KISAO#KISAO_0000323		equation-free probabilistic steady-state approximation		We present a probabilistic steady-state approximation that separates the time scales of an arbitrary reaction network, detects the convergence of a marginal distribution to a quasi-steady-state, directly samples the underlying distribution, and uses those samples to accurately predict the state of the system, including the effects of the slow dynamics, at future times. The numerical method produces an accurate solution of both the fast and slow reaction dynamics while, for stiff systems, reducing the computational time by orders of magnitude. The developed theory makes no approximations on the shape or form of the underlying steady-state distribution and only assumes that it is ergodic. <...> The developed theory may be applied to any type of kinetic Monte Carlo simulation to more efficiently simulate dynamically stiff systems, including existing exact, approximate, or hybrid stochastic simulation techniques. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000017	http://www.biomodels.net/kisao/KISAO#KISAO_0000363	multi-state agent-based simulation method	Morton-Firth	The agent-based simulation method instantiates each molecule as an individual software object. The interactions between those objects are determined by interaction probabilities according to experimental data. The probability is depended on the state the molecule is in at that specific time (molecules have multiple-state). Additionally, ''pseudo-molecules'' are introduced to the system in order to simulate unimolecular reactions. For simulation, continuous time is broken down into discrete, independent ''slices''. During each time slice one molecule is selected randomly, a second molecule or pseudo-molecule is selected afterwards (leading to either a unimolecular or a bimolecular reaction). The reaction will only take place if a produced random number exceeds the reaction probability calculated beforehand. In that case, the system is updated after that reaction.
http://www.biomodels.net/kisao/KISAO#KISAO_0000320	http://www.biomodels.net/kisao/KISAO#KISAO_0000352	BioRica hybrid method		The simulation schema for a given BioRica node is given by a hybrid algorithm that deals with continuous time and allows for discrete events that roll back the time according to these discrete interruptions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000029	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Gillespie direct algorithm	SSA	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.
http://www.biomodels.net/kisao/KISAO#KISAO_0000309		Crank-Nicolson method		In numerical analysis, the Crank-Nicolson method is a finite difference method [http://identifiers.org/biomodels.kisao/KISAO_0000307] used for numerically solving the heat equation and similar partial differential equations. It is a second-order method in time, implicit in time, and is numerically stable. The method was developed by John Crank and Phyllis Nicolson in the mid 20th century.
http://www.biomodels.net/kisao/KISAO#KISAO_0000421	http://www.biomodels.net/kisao/KISAO#KISAO_0000201	type of validation		Parameter of 'partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000416] describing how validation is performed. Possible values include cross-validation and test set validation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051		Bortz-Kalos-Lebowitz algorithm	DMC	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000315	http://www.biomodels.net/kisao/KISAO#KISAO_0000068	lattice gas automata	LGCA	Lattice gas automata methods are a series of cellular automata methods used to simulate fluid flows. From the LGCA, it is possible to derive the macroscopic Navier-Stokes equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000413		exact Newton method	direct Newton method	Any of the finite dimensional Newton-type methods [http://identifiers.org/biomodels.kisao/KISAO_0000408] requires the numerical solution of the linear equations F'(x[k])deltax[k]=-F(x[k]). Whenever direct elimination methods are applicable, we speak of exact Newton methods.
http://www.biomodels.net/kisao/KISAO#KISAO_0000239	http://www.biomodels.net/kisao/KISAO#KISAO_0000238	explicit method type		Explicit methods calculate the state of a system at a later time from the state of the system at the current time. Mathematically, if Y(t) is the current system state and Y((t+delta t) is the state at the later time (delta t is a small time step), then, for an explicit method Y(t+delta t) = F(Y(t)), to find Y(t+delta t).
http://www.biomodels.net/kisao/KISAO#KISAO_0000241		Gillespie-like method		Stochastic simulation algorithm using an approach alike the one described in Gillespie's papers of 1976 and 1977.
http://www.biomodels.net/kisao/KISAO#KISAO_0000395		improved biconjugate gradient method		An 'improved biconjugate gradient method' branch contains algorithms which can be viewed as improvements over some of drawbacks of BCG [http://identifiers.org/biomodels.kisao/KISAO_0000358], such as (1) the need for matrix-vector multiplications with A^T (which can be inconvenient as well as doubling the number of matrix-vector multiplications compared to CG [http://identifiers.org/biomodels.kisao/KISAO_0000357] for each increase in the degree of the underlying Krylov subspace), (2) the possibility of breakdowns and (3) erratic convergence behavior. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000236	http://www.biomodels.net/kisao/KISAO#KISAO_0000235	exact solution		Algorithm, possessing this characteristic, provides an exact solution to the initial problem.
http://www.biomodels.net/kisao/KISAO#KISAO_0000330	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	R-leaping algorithm	R-leap method	A novel algorithm is proposed for the acceleration of the exact stochastic simulation algorithm by a predefined number of reaction firings (R-leaping) that may occur across several reaction channels. In the present approach, the numbers of reaction firings are correlated binomial distributions and the sampling procedure is independent of any permutation of the reaction channels. This enables the algorithm to efficiently handle large systems with disparate rates, providing substantial computational savings in certain cases.
http://www.biomodels.net/kisao/KISAO#KISAO_0000029	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Gillespie direct algorithm	stochastic simulation algorithm	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.
http://www.biomodels.net/kisao/KISAO#KISAO_0000335	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	generalized stochastic simulation algorithm		Gillespie direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029] follows unit-by-unit changes in the total numbers of each reactant species, it is especially well suited to the study of systems in which reactant densities are low and the application of methods based on continuum approximations, such as the traditional ordinary differential equations of chemical kinetics, is questionable. The 'generalized stochastic simulation algorithm' branch presents methods, which extend Gillespie direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029] to suit to systems with other characteristics.
http://www.biomodels.net/kisao/KISAO#KISAO_0000367		partitioned Runge-Kutta method	PRK	If a Hamiltonian system possesses a natural partitioning, it is possible to integrate its certain components using one Runge-Kutta method and other components using a different Runge-Kutta method. The overall s-stage scheme is called a partitioned Runge-Kutta method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000021	http://www.biomodels.net/kisao/KISAO#KISAO_0000363	StochSim nearest-neighbour algorithm		The nearest-neighbour algorithm allows for the representation of spatial information, by adding a two-dimensional lattice in the form of a probabilistic cellular automata. That way, nearest neighbour interactions do additionally influence reactions taking place in the systems. Reactions between entities are calculated using the agent-based simulation algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000017].
http://www.biomodels.net/kisao/KISAO#KISAO_0000264		cellular automata update method	CA	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000033	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	Rosenbrock method	generalized fourth order Runge-Kutta method	Some general implicit processes are given for the solution of simultaneous first-order differential equations. These processes, which use successive substitution, are implicit analogues of the (explicit) Runge-Kutta processes. They require the solution in each time step of one or more set of simultaneous linear equations, usually of a special and simple form. Processes of any required order can be devised, and they can be made to have a wide margin of stability when applied to a linear problem.
http://www.biomodels.net/kisao/KISAO#KISAO_0000349	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	method of finite spheres	MFS	Method of finite spheres is truly meshless in the sense that the nodes are placed and the numerical integration is performed without a mesh. Some of the novel features of the method of finite spheres are the numerical integration scheme and the way in which the Dirichlet boundary conditions are incorporated.
http://www.biomodels.net/kisao/KISAO#KISAO_0000038		sorting stochastic simulation algorithm	sorting SSA	In order to overcome the problem of high complexity of the Stochastic Simulation Algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] when simulating large systems, the sorting direct method maintains a loosely sorted order of the reactions as the simulation executes.
http://www.biomodels.net/kisao/KISAO#KISAO_0000040	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	Poisson tau-leaping method	explicit tau-leaping method with basic pre-leap check	Explicit tau-leaping method with basic pre leap check.
http://www.biomodels.net/kisao/KISAO#KISAO_0000325		minimum fast/discrete reaction occurrences number		Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which describes the minimum number of fast/discrete reaction occurrences before their effects cause convergence to a quasi-steady-state distribution.
http://www.biomodels.net/kisao/KISAO#KISAO_0000433		CVODE-like method		Solves ODE initial value problems, in real N-space, written as y'=f(t,y), y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].
http://www.biomodels.net/kisao/KISAO#KISAO_0000030		Euler forward method	explicit Gaussian first order Runge-Kutta	The Euler method is an explicit one-step method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t.
http://www.biomodels.net/kisao/KISAO#KISAO_0000354	http://www.biomodels.net/kisao/KISAO#KISAO_0000398	Krylov subspace projection method	Krylov subspace method	Krylov subspace method is an iterative linear equation method, which builds up Krylov subspaces and look for good approximations to eigenvectors and invariant subspaces within the Krylov spaces.
http://www.biomodels.net/kisao/KISAO#KISAO_0000220	http://www.biomodels.net/kisao/KISAO#KISAO_0000243	LSODA maximum stiff order	BDF max order	This parameter is a positive integer value specifying the maximal order the stiff BDF integration method [http://identifiers.org/biomodels.kisao/KISAO_0000288] shall attempt before switching to smaller internal step sizes.
http://www.biomodels.net/kisao/KISAO#KISAO_0000369		partial differential equation discretization method		A method which solves partial differential equations by discretizing them, i.e. approximating them by equations that involve a finite number of unknowns.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264	http://www.biomodels.net/kisao/KISAO#KISAO_0000363	cellular automata update method	CA	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000032		explicit fourth-order Runge-Kutta method	Runge-Kutta method	The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval).
http://www.biomodels.net/kisao/KISAO#KISAO_0000413	http://www.biomodels.net/kisao/KISAO#KISAO_0000408	exact Newton method	direct Newton method	Any of the finite dimensional Newton-type methods [http://identifiers.org/biomodels.kisao/KISAO_0000408] requires the numerical solution of the linear equations F'(x[k])deltax[k]=-F(x[k]). Whenever direct elimination methods are applicable, we speak of exact Newton methods.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264	http://www.biomodels.net/kisao/KISAO#KISAO_0000363	cellular automata update method	tessellation structures	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000204		particle number upper limit		This parameter of 'Pahle hybrid method' [http://identifiers.org/biomodels.kisao/KISAO_0000231] is a double value specifying the upper limit for particle numbers. Species with a particle number above this value are considered as having a high particle number. The 'particle number upper limit' cannot be lower than the 'particle number lower limit' [http://identifiers.org/biomodels.kisao/KISAO_0000203].
http://www.biomodels.net/kisao/KISAO#KISAO_0000082		k-alpha leaping method		Alternative to the tau-leaping [http://identifiers.org/biomodels.kisao/KISAO_0000039], where one leaps a fixed number of reaction-events.
http://www.biomodels.net/kisao/KISAO#KISAO_0000094		Livermore solver		Method to solve ordinary differential equations developed at the Lawrence Livermore National Laboratory.
http://www.biomodels.net/kisao/KISAO#KISAO_0000040		Poisson tau-leaping method	explicit tau-leaping method with basic preleap check	Explicit tau-leaping method with basic pre leap check.
http://www.biomodels.net/kisao/KISAO#KISAO_0000424	http://www.biomodels.net/kisao/KISAO#KISAO_0000430	mean-centring of variables		A boolean parameter of the 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417] specifying whether the variables were mean-centred prior to the regression analysis.
http://www.biomodels.net/kisao/KISAO#KISAO_0000328	http://www.biomodels.net/kisao/KISAO#KISAO_0000252	minimum fast rate		Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which controls the minimum rate of the reaction in order for it to be considered fast.
http://www.biomodels.net/kisao/KISAO#KISAO_0000417		hierarchical cluster-based partial least squares regression method	HC-PLSR	Requested by Kristin Tøndel on Thursday, October 13, 2011 11:13:17 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000392	http://www.biomodels.net/kisao/KISAO#KISAO_0000395	biconjugate gradient stabilized method	Bi-CGSTAB	An iterative method for the numerical solution of nonsymmetric linear systems. It is a variant of the biconjugate gradient method (BiCG) [http://identifiers.org/biomodels.kisao/KISAO_0000358] and has faster and smoother convergence than the original BiCG.
http://www.biomodels.net/kisao/KISAO#KISAO_0000316		enhanced Greens function reaction dynamics	eGFRD	GFRD [http://identifiers.org/biomodels.kisao/KISAO_0000058] decomposes the multi­body reaction diffusion problem to a set of single and two body problems. Analytical solutions for two body reaction diffusion are available via Smoluchowski equation. eGFRD allows to solve each sub­problem asynchronously by introducing the concept of first passage processes.
http://www.biomodels.net/kisao/KISAO#KISAO_0000307	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	finite difference method	FDM	The finite difference method is based on local approximations of the partial derivatives in a Partial Differential Equation, which are derived by low order Taylor series expansions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000261	http://www.biomodels.net/kisao/KISAO#KISAO_0000377	Euler method		The Euler method, named after Leonhard Euler, is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value.
http://www.biomodels.net/kisao/KISAO#KISAO_0000241	http://www.biomodels.net/kisao/KISAO#KISAO_0000319	Gillespie-like method		Stochastic simulation algorithm using an approach alike the one described in Gillespie's papers of 1976 and 1977.
http://www.biomodels.net/kisao/KISAO#KISAO_0000283		IDA	implicit differential-algebraic solver	IDA solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0, y(t0)=y0, y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396]). IDA is written in C, but derived from the package DASPK [http://identifiers.org/biomodels.kisao/KISAO_0000355] which is written in Fortran.
http://www.biomodels.net/kisao/KISAO#KISAO_0000019		CVODE	VODE	The CVODE is a package written in C that solves ODE initial value problems, in real N-space, written as y'=f(t,y), y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].
http://www.biomodels.net/kisao/KISAO#KISAO_0000297	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	Lobatto method	implicit Runge-Kutta method based on Lobatto quadrature	There are three families of Lobatto methods, called IIIA, IIIB and IIIC. These are named after Rehuel Lobatto. All are implicit Runge-Kutta methods, have order 2s − 2 and they all have c1 = 0 and cs = 1.
http://www.biomodels.net/kisao/KISAO#KISAO_0000364		Adams predictor-corrector method		The combination of evaluating a single explicit integration method ('Adams-Bashforth method' [http://identifiers.org/biomodels.kisao/KISAO_0000279]) (the predictor step) in order to provide a good initial guess for the successive evaluation of an implicit method ('Adams-Moulton method' [http://identifiers.org/biomodels.kisao/KISAO_0000280]) (the corrector step) using iteration.
http://www.biomodels.net/kisao/KISAO#KISAO_0000019		CVODE	code value ordinary differential equation solver	The CVODE is a package written in C that solves ODE initial value problems, in real N-space, written as y'=f(t,y), y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].
http://www.biomodels.net/kisao/KISAO#KISAO_0000367		partitioned Runge-Kutta method	SPRK	If a Hamiltonian system possesses a natural partitioning, it is possible to integrate its certain components using one Runge-Kutta method and other components using a different Runge-Kutta method. The overall s-stage scheme is called a partitioned Runge-Kutta method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000027		Gibson-Bruck next reaction algorithm	next reaction method	As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.
http://www.biomodels.net/kisao/KISAO#KISAO_0000337	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	finite element method	finite element analysis	A numerical technique for finding approximate solutions of partial differential equations (PDE) as well as of integral equations. The solution approach is based either on eliminating the differential equation completely (steady state problems), or rendering the PDE into an approximating system of ordinary differential equations, which are then numerically integrated using standard techniques such as Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261], Runge-Kutta [http://identifiers.org/biomodels.kisao/KISAO_0000064], etc.
http://www.biomodels.net/kisao/KISAO#KISAO_0000290	http://www.biomodels.net/kisao/KISAO#KISAO_0000302	Merson method	Merson's method	A five-stage Runge-Kutta method with fourth-order accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000003	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	weighted stochastic simulation algorithm	weighted SSA	The weighted Stochastic Simulation Algorithm manipulates the probabilities measure of biochemical systems by sampling, in order to increase the fraction of simulation runs exhibiting rare events.
http://www.biomodels.net/kisao/KISAO#KISAO_0000335		generalized stochastic simulation algorithm		Gillespie direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029] follows unit-by-unit changes in the total numbers of each reactant species, it is especially well suited to the study of systems in which reactant densities are low and the application of methods based on continuum approximations, such as the traditional ordinary differential equations of chemical kinetics, is questionable. The 'generalized stochastic simulation algorithm' branch presents methods, which extend Gillespie direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029] to suit to systems with other characteristics.
http://www.biomodels.net/kisao/KISAO#KISAO_0000039		tau-leaping method	tauL	Approximate acceleration procedure of the Stochastic Simulation Algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] that divides the time into subintervals and ''leaps'' from one to another, firing all the reaction events in each subinterval.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264		cellular automata update method	iterative arrays	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000358		biconjugate gradient method	BiCG	The biconjugate gradient method provides a generalization of conjugate gradient method [http://identifiers.org/biomodels.kisao/KISAO_0000357] to non-symmetric matrices.
http://www.biomodels.net/kisao/KISAO#KISAO_0000027	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	Gibson-Bruck next reaction algorithm	SSA-GB	As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.
http://www.biomodels.net/kisao/KISAO#KISAO_0000219	http://www.biomodels.net/kisao/KISAO#KISAO_0000243	LSODA maximum non-stiff order	Adams max order	This parameter is a positive integer value specifying the maximal order the non-stiff Adams integration method [http://identifiers.org/biomodels.kisao/KISAO_0000289] shall attempt before switching to the stiff BDF method [http://identifiers.org/biomodels.kisao/KISAO_0000288].
http://www.biomodels.net/kisao/KISAO#KISAO_0000407	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	steady state method		A method looking for a steady state of a dynamic system.
http://www.biomodels.net/kisao/KISAO#KISAO_0000376	http://www.biomodels.net/kisao/KISAO#KISAO_0000370	linearity of equation		Linear differential equations are of the form Ly = f, where the differential operator L is a linear operator, y is the unknown function, and the right hand side f is a given function of the same nature as y.
http://www.biomodels.net/kisao/KISAO#KISAO_0000314	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	S-System power-law canonical differential equations solver	ESSYNS GMA	Ordinary differential equations can be recast into a nonlinear canonical form called an S-system. Evidence for the generality of this class comes from extensive empirical examples that have been recast and from the discovery that sets of differential equations and functions, recognized as among the most general, are special cases of S-systems. Identification of this nonlinear canonical form suggests a radically different approach to numerical solution of ordinary differential equations. By capitalizing on the regular structure of S-systems, efficient formulas for a variable-order, variable-step Taylor-series method are developed. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000051	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Bortz-Kalos-Lebowitz algorithm	n-fold way	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000315		lattice gas automata	LGA	Lattice gas automata methods are a series of cellular automata methods used to simulate fluid flows. From the LGCA, it is possible to derive the macroscopic Navier-Stokes equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000345		h-p cloud method	h-p clouds	A meshless method, which uses a partition of unity to construct the family of h-p cloud functions. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000308	http://www.biomodels.net/kisao/KISAO#KISAO_0000307	MacCormack method		In computational fluid dynamics, the MacCormack method is a widely used discretization scheme for the numerical solution of hyperbolic partial differential equations. This second-order finite difference method [http://identifiers.org/biomodels.kisao/KISAO_0000307] is introduced by R. W. MacCormack in 1969.
http://www.biomodels.net/kisao/KISAO#KISAO_0000451		type of updating policy		A rule to guide the choice of a unique transition at each step used by an 'asynchronous logical model simulation method' [http://identifiers.org/biomodels.kisao/KISAO_0000450].
http://www.biomodels.net/kisao/KISAO#KISAO_0000278		Metropolis Monte Carlo algorithm	Metropolis-Hastings algorithm	A general method, suitable for fast computing machines, for investigating such properties as equations of state for substances consisting of interacting individual molecules is described. The method consists of a modified Monte Carlo integration [http://identifiers.org/biomodels.kisao/KISAO_0000051] over configuration space.
http://www.biomodels.net/kisao/KISAO#KISAO_0000422	http://www.biomodels.net/kisao/KISAO#KISAO_0000201	number of N-way partial least squares regression factors	number of factors	Parameter of 'N-way partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000369] describing the number of factors to compute.
http://www.biomodels.net/kisao/KISAO#KISAO_0000437	http://www.biomodels.net/kisao/KISAO#KISAO_0000407	flux balance analysis	FBA	Requested by Frank T. Bergmann on Thursday, November 29, 2012 9:51:58 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000398		iterative method for linear system		
http://www.biomodels.net/kisao/KISAO#KISAO_0000417		hierarchical cluster-based partial least squares regression method	Multivariate regression method based on separating the observations into clusters and generating Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416] models within each cluster. This local regression analysis is suitable for very non-linear systems. PLSR is a regression method based on estimated latent variables, related to Principal Component Analysis (PCA) and Principal Component Regression (PCR). Hierarchical cluster-based partial least squares regression method uses fuzzy C-means clustering, PLSR and Linear Discriminant Analysis (LDA), Quadratic Discriminant Analysis (QDA) or Naive Bayes for classification of new observations to be predicted.	Requested by Kristin Tøndel on Thursday, October 13, 2011 11:13:17 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000201		modeling and simulation algorithm parameter		Parameter that can be used in the simulation experiment settings.
http://www.biomodels.net/kisao/KISAO#KISAO_0000342		level set method	level-set method	An algorithm for moving surfaces under their curvature. This algorithm rely on numerically solving Hamilton-Jacobi equations with viscous terms, using approximation techniques from hyperbolic conservation laws.
http://www.biomodels.net/kisao/KISAO#KISAO_0000337		finite element method	finite element analysis	A numerical technique for finding approximate solutions of partial differential equations (PDE) as well as of integral equations. The solution approach is based either on eliminating the differential equation completely (steady state problems), or rendering the PDE into an approximating system of ordinary differential equations, which are then numerically integrated using standard techniques such as Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261], Runge-Kutta [http://identifiers.org/biomodels.kisao/KISAO_0000064], etc.
http://www.biomodels.net/kisao/KISAO#KISAO_0000258		neighbour distance		A parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. When a surface-bound molecule diffuses off of one surface panel, it can sometimes diffuse onto the neighbouring surface tile. It does so only if the neighbouring panel is declared to be a neighbour and also the neighbour is within a distance that is set with the neighbour distance statement.
http://www.biomodels.net/kisao/KISAO#KISAO_0000038		sorting stochastic simulation algorithm	sorting direct method	In order to overcome the problem of high complexity of the Stochastic Simulation Algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] when simulating large systems, the sorting direct method maintains a loosely sorted order of the reactions as the simulation executes.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	N-way partial least squares regression method	N-way PLSR	Multivariate regression method that can be used on N-way data. Based on Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416], which is a regression method based on estimated latent variables. PLSR is related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
http://www.biomodels.net/kisao/KISAO#KISAO_0000345	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	h-p cloud method	method of clouds	A meshless method, which uses a partition of unity to construct the family of h-p cloud functions. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000305	http://www.biomodels.net/kisao/KISAO#KISAO_0000302	Verner method	Verner's method	The first high order (6(5)) embedded Runge-Kutta formulas that avoid the drawback of giving identically zero error estimates for quadrature problems y' = f(x) were constructed by Verner in 1978.
http://www.biomodels.net/kisao/KISAO#KISAO_0000046	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	trapezoidal tau-leaping method	trapezoidal implicit tau-leaping method	Formula for accelerated discrete efficient stochastic simulation of chemically reacting system [which] has better accuracy and stiff stability properties than the explicit and implicit [http://identifiers.org/biomodels.kisao/KISAO_0000045] tau-leaping formulas for discrete stochastic systems, and it limits to the trapezoidal rule in the deterministic regime.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264	http://www.biomodels.net/kisao/KISAO#KISAO_0000363	cellular automata update method	cellular automata	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000355	http://www.biomodels.net/kisao/KISAO#KISAO_0000432	DASPK	DDASPK	In DASPK, we have combined the time-stepping methods of DASSL [http://identifiers.org/biomodels.kisao/KISAO_0000255] with preconditioned iterative method GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000386], for solving large-scale systems of DAEs of the form F(t, y, y') = 0, where F, y, y' are N-dimensional vectors, and a consistent set of initial conditions y(t0) = y0, y'(t0) = y'0 is given. DASPK is written in Fortran.
http://www.biomodels.net/kisao/KISAO#KISAO_0000397		preconditioning technique		Preconditioning is simply a means of transforming the original linear system into one which has the same solution, but which is likely to be easier to solve with an iterative solver.
http://www.biomodels.net/kisao/KISAO#KISAO_0000342	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	level set method	LSM	An algorithm for moving surfaces under their curvature. This algorithm rely on numerically solving Hamilton-Jacobi equations with viscous terms, using approximation techniques from hyperbolic conservation laws.
http://www.biomodels.net/kisao/KISAO#KISAO_0000407	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	steady state method		Requested by Frank T. Bergmann on Sunday, November 27, 2011 4:45:30 PM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000234	http://www.biomodels.net/kisao/KISAO#KISAO_0000094	LSODKR	Livermore solver for ordinary differential equations, with preconditioned Krylov iteration methods for the Newton correction linear systems, and with root finding.	LSODKR is an initial value ODE solver for stiff and nonstiff systems. It is a variant of the LSODPK [http://identifiers.org/biomodels.kisao/KISAO_0000093] and LSODE [http://identifiers.org/biomodels.kisao/KISAO_0000071] solvers, intended mainly for large stiff systems. The main differences between LSODKR and LSODE [http://identifiers.org/biomodels.kisao/KISAO_0000071] are the following: a) for stiff systems, LSODKR uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods. The user must supply routines for the preconditioning operations, b) within the corrector iteration, LSODKR does automatic switching between functional (fixpoint) iteration and modified Newton iteration, c) LSODKR includes the ability to find roots of given functions of the solution during the integration.
http://www.biomodels.net/kisao/KISAO#KISAO_0000223	http://www.biomodels.net/kisao/KISAO#KISAO_0000244	number of history bins		The 'number of history bins' is only enabled for models that contain delayed or multistep reactions for specifying the granularity with which the delayed reaction solver should retain the history of species values, for species that participate in delayed reactions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000032		explicit fourth-order Runge-Kutta method	ERK4	The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval).
http://www.biomodels.net/kisao/KISAO#KISAO_0000451	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	type of updating policy		A rule to guide the choice of a unique transition at each step used by an 'asynchronous logical model simulation method' [http://identifiers.org/biomodels.kisao/KISAO_0000450].
http://www.biomodels.net/kisao/KISAO#KISAO_0000203		particle number lower limit		This parameter of 'Pahle hybrid method' [http://identifiers.org/biomodels.kisao/KISAO_0000231] is a double value specifying the lower limit for particle numbers. Species with a particle number below this value are considered as having a low particle number. The 'particle number lower limit' cannot be higher than the 'particle number upper limit' [http://identifiers.org/biomodels.kisao/KISAO_0000204].
http://www.biomodels.net/kisao/KISAO#KISAO_0000343	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	generalized finite element method	GFEM	The GFEM is a generalization of the classical 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] — in its h [http://identifiers.org/biomodels.kisao/KISAO_0000338], p [http://identifiers.org/biomodels.kisao/KISAO_0000339], and h-p versions [http://identifiers.org/biomodels.kisao/KISAO_0000340]— as well as of the various forms of meshless methods used in engineering.
http://www.biomodels.net/kisao/KISAO#KISAO_0000331		exact R-leaping algorithm	exact R-leap method	We present a SSA which, similar to R-leap [http://identifiers.org/biomodels.kisao/KISAO_0000330], accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by executing multiple reactions per algorithmic step, but which samples the reactant trajectories from the same probability distribution as the SSA. This 'exact R-leap' or 'ER-leap' algorithm is a modification of the R-leap algorithm which is both exact and capable of substantial speed-up over SSA.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051		Bortz-Kalos-Lebowitz algorithm	BKL	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000211	http://www.biomodels.net/kisao/KISAO#KISAO_0000242	absolute tolerance	ATOL	This parameter is a positive numeric value specifying the desired absolute tolerance the user wants to achieve.
http://www.biomodels.net/kisao/KISAO#KISAO_0000274	http://www.biomodels.net/kisao/KISAO#KISAO_0000319	first-passage Monte Carlo algorithm	asynchronous event-driven diffusion Monte Carlo	We present a novel Monte Carlo algorithm for N diffusing finite particles that react on collisions. Using the theory of first-passage processes and time dependent Green's functions, we break the difficult N-body problem into independent single- and two-body propagations circumventing numerous diffusion hops used in standard Monte Carlo simulations. The new algorithm is exact, extremely efficient, and applicable to many important physical situations in arbitrary integer dimensions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000075	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Gillespie multi-particle method	Gillespie's multi-particle method	Combination of the multiparticle method for diffusion [http://identifiers.org/biomodels.kisao/KISAO_0000334] and the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029].
http://www.biomodels.net/kisao/KISAO#KISAO_0000089		LSODAR	ordinary differential equation solver for stiff or non-stiff systems with root finding	LSODAR is a variant of LSODA [http://identifiers.org/biomodels.kisao/KISAO_0000088] with a root finding capability added. Thus it solves problems dy/dt = f with dense or banded Jacobian and automatic method selection, and at the same time, it finds the roots of any of a set of given functions of the form g(t,y). This is often useful for finding stop conditions, or for finding points at which a switch is to be made in the function f.
http://www.biomodels.net/kisao/KISAO#KISAO_0000341	http://www.biomodels.net/kisao/KISAO#KISAO_0000337	mixed finite element method		A 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] in which both stress and displacement fields are approximated as primary variables.
http://www.biomodels.net/kisao/KISAO#KISAO_0000392	http://www.biomodels.net/kisao/KISAO#KISAO_0000395	biconjugate gradient stabilized method	BiCGSTAB	An iterative method for the numerical solution of nonsymmetric linear systems. It is a variant of the biconjugate gradient method (BiCG) [http://identifiers.org/biomodels.kisao/KISAO_0000358] and has faster and smoother convergence than the original BiCG.
http://www.biomodels.net/kisao/KISAO#KISAO_0000408	http://www.biomodels.net/kisao/KISAO#KISAO_0000407	Newton-type method		Requested by Frank T. Bergmann on Sunday, November 27, 2011 4:45:30 PM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000452		random updating policy		An updating policy that chooses a transition randomly.
http://www.biomodels.net/kisao/KISAO#KISAO_0000310		method of lines	NMOL	The method of lines is a general technique for solving partial differential equations (PDEs) by typically using finite difference relationships for the spatial derivatives and ordinary differential equations for the time derivative.
http://www.biomodels.net/kisao/KISAO#KISAO_0000075		Gillespie multi-particle method	GMP	Combination of the multiparticle method for diffusion [http://identifiers.org/biomodels.kisao/KISAO_0000334] and the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029].
http://www.biomodels.net/kisao/KISAO#KISAO_0000003		weighted stochastic simulation algorithm	weighted SSA	The weighted Stochastic Simulation Algorithm manipulates the probabilities measure of biochemical systems by sampling, in order to increase the fraction of simulation runs exhibiting rare events.
http://www.biomodels.net/kisao/KISAO#KISAO_0000068		deterministic cellular automata update algorithm		A cellular automaton is a discrete model of a regular grid of cells with a finite number of dimensions. Each cell has a finite number of defined states. The automaton changes its state in a discrete manner, meaning that the state of a cell at time t is determined by a function of the states of its neighbours at time t - 1. These neighbours are a selection of cells relative to the specified cell. Famous examples for deterministic cellular automata are Conway's game of life or Wolfram's elementary cellular automata.
http://www.biomodels.net/kisao/KISAO#KISAO_0000356	http://www.biomodels.net/kisao/KISAO#KISAO_0000432	DASSL	DDASSL	DASSL is designed for the numerical solution of implicit systems of differential/algebraic equations written in the form F(t,y,y')=0, where F, y, and y' are vectors, and initial values for y and y' are given.
http://www.biomodels.net/kisao/KISAO#KISAO_0000260		virtual box size		Target size of virtual boxes for 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057].
http://www.biomodels.net/kisao/KISAO#KISAO_0000264	http://www.biomodels.net/kisao/KISAO#KISAO_0000363	cellular automata update method	homogeneous structures	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000095		sub-volume stochastic reaction-diffusion algorithm		Stochastic method using a combination of discretisation of compartment volumes into voxels and Gillespie-like algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000241] to simulate the evolution of the system.
http://www.biomodels.net/kisao/KISAO#KISAO_0000022	http://www.biomodels.net/kisao/KISAO#KISAO_0000095	Elf and Ehrenberg method	Elf algorithm	Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [http://identifiers.org/biomodels.kisao/KISAO_0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s).
http://www.biomodels.net/kisao/KISAO#KISAO_0000299		Butcher-Kuntzmann method	Gauss method	From a theoretical point of view, the Butcher-Kuntzmann Runge-Kutta methods belong to the best step-by-step methods for nonstiff problems. These methods integrate first-order initial-value problems by means of formulas based on Gauss-Legendre quadrature, and combine excellent stability features with the property of superconvergence at the step points.
http://www.biomodels.net/kisao/KISAO#KISAO_0000417	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	hierarchical cluster-based partial least squares regression method	Multivariate regression method based on separating the observations into clusters and generating Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416] models within each cluster. This local regression analysis is suitable for very non-linear systems. PLSR is a regression method based on estimated latent variables, related to Principal Component Analysis (PCA) and Principal Component Regression (PCR). Hierarchical cluster-based partial least squares regression method uses fuzzy C-means clustering, PLSR and Linear Discriminant Analysis (LDA), Quadratic Discriminant Analysis (QDA) or Naive Bayes for classification of new observations to be predicted.	Requested by Kristin Tøndel on Thursday, October 13, 2011 11:13:17 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000048	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	adaptive explicit-implicit tau-leaping method		Modification of the original tau-selection strategy [http://identifiers.org/biomodels.kisao/KISAO_0000040], designed for explicit tau-leaping, is modified to apply to implicit tau-leaping, allowing for longer steps when the system is stiff. Further, an adaptive strategy is proposed that identifies stiffness and automatically chooses between the explicit and the (new) implicit tau-selection methods to achieve better efficiency.
http://www.biomodels.net/kisao/KISAO#KISAO_0000029		Gillespie direct algorithm	DM	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.
http://www.biomodels.net/kisao/KISAO#KISAO_0000351		multinomial tau-leaping method	MtauL	The multinomial tau-leaping method is an extension of the binomial tau-leaping method [http://identifiers.org/biomodels.kisao/KISAO_0000074] to networks with arbitrary multiple-channel reactant dependencies. Improvements were achieved by a combination of three factors: First, tau-leaping steps are determined simply and efficiently using a-priori information and Poisson distribution based estimates of expectation values for reaction numbers. Second, networks are partitioned into closed groups of reactions and corresponding reactants in which no group reactant set is found in any other group. Third, product formation is factored into upper bound estimation of the number of times a particular reaction occurs.
http://www.biomodels.net/kisao/KISAO#KISAO_0000379		Bulirsch-Stoer algorithm	Gragg-Bulirsch-Stoer algorithm	The Bulirsch-Stoer method is an adaptive method which uses Gragg's modified midpoint method [http://identifiers.org/biomodels.kisao/KISAO_0000382] to estimate the solution of an initial value problem for various step sizes. The estimates are fit to a "diagonal" rational function or a polynomial as a function of the step size and the limit as the step size tends to zero is taken as the final estimate.
http://www.biomodels.net/kisao/KISAO#KISAO_0000290	http://www.biomodels.net/kisao/KISAO#KISAO_0000302	Merson method	Kutta-Merson method	A five-stage Runge-Kutta method with fourth-order accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000015		Gillespie first reaction algorithm	Gillespie's first reaction method	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm calculates a tentative reaction time for each reaction and then select the smallest.
http://www.biomodels.net/kisao/KISAO#KISAO_0000332		ER-leap initial leap	L	L (initial step) is a parameter of 'exact R-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000331]. ''We will assume that the reaction event to be bounded occurs within a run of L events in the SSA algorithm[http://identifiers.org/biomodels.kisao/KISAO_0000029], in order to execute L reactions at once in the manner of the R-leap algorithm[http://identifiers.org/biomodels.kisao/KISAO_0000230]''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000405	http://www.biomodels.net/kisao/KISAO#KISAO_0000370	type of differential equation		
http://www.biomodels.net/kisao/KISAO#KISAO_0000228	http://www.biomodels.net/kisao/KISAO#KISAO_0000242	tau-leaping epsilon	epsilon	The leap condition is chosen such that the expected change in the propensity function aj(x) is bounded by Epsilon * a0 where Epsilon is an error control parameter between 0 and 1. This parameter is the basic error control mechanism for the Tau-Leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039]. As Epsilon decreases the leaps become shorter and the simulation is more accurate.
http://www.biomodels.net/kisao/KISAO#KISAO_0000107	http://www.biomodels.net/kisao/KISAO#KISAO_0000100	progression with adaptive time step		Algorithm, possessing this characteristic, does not use fixed time steps to update the state of a system during the whole simulation, but on the contrary adapts the length of the time steps to the local situation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418		N-way partial least squares regression method	N-way partial least squares method	Multivariate regression method that can be used on N-way data. Based on Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416], which is a regression method based on estimated latent variables. PLSR is related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
http://www.biomodels.net/kisao/KISAO#KISAO_0000211		absolute tolerance	ATOL	This parameter is a positive numeric value specifying the desired absolute tolerance the user wants to achieve.
http://www.biomodels.net/kisao/KISAO#KISAO_0000415	http://www.biomodels.net/kisao/KISAO#KISAO_0000244	maximum number of steps		Maximum number of steps the 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] algorithm is allowed to take.
http://www.biomodels.net/kisao/KISAO#KISAO_0000038	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	sorting stochastic simulation algorithm	sorting SSA	In order to overcome the problem of high complexity of the Stochastic Simulation Algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] when simulating large systems, the sorting direct method maintains a loosely sorted order of the reactions as the simulation executes.
http://www.biomodels.net/kisao/KISAO#KISAO_0000384	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	semi-implicit midpoint rule		A semi-implicit version of the midpoint method that has an even error series [http://identifiers.org/biomodels.kisao/KISAO_0000381].
http://www.biomodels.net/kisao/KISAO#KISAO_0000029		Gillespie direct algorithm	stochastic simulation algorithm	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418		N-way partial least squares regression method	N-PLS	Multivariate regression method that can be used on N-way data. Based on Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416], which is a regression method based on estimated latent variables. PLSR is related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
http://www.biomodels.net/kisao/KISAO#KISAO_0000032	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	explicit fourth-order Runge-Kutta method	RK4	The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval).
http://www.biomodels.net/kisao/KISAO#KISAO_0000105	http://www.biomodels.net/kisao/KISAO#KISAO_0000098	discrete variable		Algorithm, possessing this characteristic, allows values of system's variables to change by discrete (integral) amounts.
http://www.biomodels.net/kisao/KISAO#KISAO_0000108	http://www.biomodels.net/kisao/KISAO#KISAO_0000100	progression with fixed time step		Algorithm, possessing this characteristic, uses time steps of constant length to update the state of a system during the whole simulation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000407		steady state method		Requested by Frank T. Bergmann on Sunday, November 27, 2011 4:45:30 PM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000394	http://www.biomodels.net/kisao/KISAO#KISAO_0000392	quasi-minimal residual variant of biconjugate gradient stabilized method	QMRCGSTAB	QMRCGSTAB is a quasi-minimal residual (QMR) variant of the Bi-CGSTAB algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000394] of van der Vorst for solving nonsymmetric linear systems. The motivation for the QMR variant is to obtain smoother convergence behavior of the underlying method. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000386		scaled preconditioned generalized minimal residual method	SPGMR	A scaled preconditioned version of 'generalized minimal residual algorithm' [http://identifiers.org/biomodels.kisao/KISAO_0000353]. For linear system Ax = b a preconditioner matrix P that approximates A is sought, for which linear system Px = b can be solved easily. Preconditioning is applied on the left only. Scaling is done using diagonal matrix D whose diagonal elements are weights w^i = rtol|y^i| +atol^i, where rtol is 'relative tolerance' [http://identifiers.org/biomodels.kisao/KISAO_0000209] and atol is 'absolute tolerance' [http://identifiers.org/biomodels.kisao/KISAO_0000211].
http://www.biomodels.net/kisao/KISAO#KISAO_0000378		implicit midpoint rule	implicit Gaussian second order Runge-Kutta method	The implicit midpoint rule is a second-order case of the more general implicit s-stage Runge-Kutta methods [http://identifiers.org/biomodels.kisao/KISAO_0000064 and (http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000240)].
http://www.biomodels.net/kisao/KISAO#KISAO_0000039	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	tau-leaping method	tauL	Approximate acceleration procedure of the Stochastic Simulation Algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] that divides the time into subintervals and ''leaps'' from one to another, firing all the reaction events in each subinterval.
http://www.biomodels.net/kisao/KISAO#KISAO_0000076	http://www.biomodels.net/kisao/KISAO#KISAO_0000095	Stundzia and Lumsden method	reaction-diffusion stochastic simulation algorithm	Sub-volume stochastic reaction-diffusion method that using Green's function to link the bulk diffusion coefficient D in Fick's differential law to the corresponding transition rate probability for diffusion of a particle between finite volume elements. This generalized stochastic algorithm enables to numerically calculate the time evolution of a spatially inhomogeneous mixture of reaction-diffusion species in a finite volume. The time step is stochastic and is generated by a probability distribution determined by the intrinsic reaction kinetics and diffusion dynamics.
http://www.biomodels.net/kisao/KISAO#KISAO_0000228		tau-leaping epsilon	tolerance	The leap condition is chosen such that the expected change in the propensity function aj(x) is bounded by Epsilon * a0 where Epsilon is an error control parameter between 0 and 1. This parameter is the basic error control mechanism for the Tau-Leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039]. As Epsilon decreases the leaps become shorter and the simulation is more accurate.
http://www.biomodels.net/kisao/KISAO#KISAO_0000040	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	Poisson tau-leaping method	explicit tau-leaping method with basic preleap check	Explicit tau-leaping method with basic pre leap check.
http://www.biomodels.net/kisao/KISAO#KISAO_0000319	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	Monte Carlo method	MC	Monte Carlo methods (or Monte Carlo experiments) are a class of computational algorithms that rely on repeated random sampling to compute their results.
http://www.biomodels.net/kisao/KISAO#KISAO_0000040	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	Poisson tau-leaping method	poisson tau-leaping	Explicit tau-leaping method with basic pre leap check.
http://www.biomodels.net/kisao/KISAO#KISAO_0000027	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	Gibson-Bruck next reaction algorithm	Gibson-Bruck's next reaction algorithm	As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.
http://www.biomodels.net/kisao/KISAO#KISAO_0000329	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	constant-time kinetic Monte Carlo algorithm	SSA-CR	The computational cost of the original SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] scaled linearly with the number of reactions in the network. Gibson and Bruck developed a logarithmic scaling version of the SSA which uses a priority queue or binary tree for more efficient reaction selection [http://identifiers.org/biomodels.kisao/KISAO_0000027]. More generally, this problem is one of dynamic discrete random variate generation which finds many uses in kinetic Monte Carlo and discrete event simulation. We present here a constant-time algorithm, whose cost is independent of the number of reactions, enabled by a slightly more complex underlying data structure.
http://www.biomodels.net/kisao/KISAO#KISAO_0000081		estimated midpoint tau-leaping method	explicit tau-leaping method with estimated-mid point technique	Estimated-Midpoint tau-Leap Method: For the selected leaping time tau which satisfies the Leap Condition, compute the expected state change lambda' = tau sumj( aj(x)vj ) during [t, t + tau). Then, with x' =x + [lambda'/2], generate for each j = 1,...,M a sample value kj of the Poisson random variable P(aj(x'), tau). Compute the actual state change, lambda = sumj( kjvj ), and effect the leap by replacing t by t + tau and x by x + lambda.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418		N-way partial least squares regression method	N-way PLSR	Multivariate regression method that can be used on N-way data. Based on Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416], which is a regression method based on estimated latent variables. PLSR is related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
http://www.biomodels.net/kisao/KISAO#KISAO_0000345	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	h-p cloud method	h-p clouds	A meshless method, which uses a partition of unity to construct the family of h-p cloud functions. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000450	http://www.biomodels.net/kisao/KISAO#KISAO_0000448	asynchronous logical model simulation method		Qualitative (logical) models specify the evolution rules of their components. It the case of an asynchronous updating all enabled transitions are performed independently: a state has as many successors as the number of transitions enabled in this state. An 'asynchronous logical model simulation method' specifies a rule to guide the choice of a unique transition at each step (for example random).
http://www.biomodels.net/kisao/KISAO#KISAO_0000022	http://www.biomodels.net/kisao/KISAO#KISAO_0000095	Elf and Ehrenberg method	next-subvolume method	Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [http://identifiers.org/biomodels.kisao/KISAO_0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s).
http://www.biomodels.net/kisao/KISAO#KISAO_0000287		Milstein method		The Milstein method is a technique for the approximate numerical solution of a stochastic differential equation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000422		number of N-way partial least squares regression factors	number of factors	Parameter of 'N-way partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000369] describing the number of factors to compute.
http://www.biomodels.net/kisao/KISAO#KISAO_0000098	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	type of variable		Type of variables used for the simulation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000019	http://www.biomodels.net/kisao/KISAO#KISAO_0000433	CVODE	VODE	The CVODE is a package written in C that solves ODE initial value problems, in real N-space, written as y'=f(t,y), y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].
http://www.biomodels.net/kisao/KISAO#KISAO_0000051		Bortz-Kalos-Lebowitz algorithm	kinetic Monte Carlo	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000424		mean-centring of variables		A boolean parameter of the 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417] specifying whether the variables were mean-centred prior to the regression analysis.
http://www.biomodels.net/kisao/KISAO#KISAO_0000357	http://www.biomodels.net/kisao/KISAO#KISAO_0000354	conjugate gradient method	CG	Conjugate gradient method is an algorithm for the numerical solution of particular systems of linear equations, namely those whose matrix is symmetric and positive-definite. The conjugate gradient method is an iterative method, so it can be applied to sparse systems that are too large to be handled by direct methods. Such systems often arise when numerically solving partial differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000412		inexact Newton method	iterative Newton method	For extremely large scale nonlinear problems the arising linear systems for the Newton corrections can no longer be solved directly ('exactly'), but must be solved iterativly ('inexactly) - which gives the name inexact Newton methods. The whole scheme then consists of an inner iteration (at Newton step k): F'(x[k])deltaxi[k]=-F(x[k])+ri[k], k=0,1,... xi[k+1]=x[k]+deltaxi[k], i=0,1,..,imax[k] in terms of residuals ri[k] and an outer iteration where, given x[0], the iterates are defined as x[k+1]=xi[k+1] for i=imax[k], k=0,1,...
http://www.biomodels.net/kisao/KISAO#KISAO_0000377		one-step method		A numerical method for differential equations which uses one starting value at each step.
http://www.biomodels.net/kisao/KISAO#KISAO_0000285	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	finite volume method	FVM	The finite volume method is a method for representing and evaluating partial differential equations in the form of algebraic equations, which attempts to emulate continuous conservation laws of physics.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Bortz-Kalos-Lebowitz algorithm	dynamic Monte Carlo	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000412		inexact Newton method	truncated Newton method	For extremely large scale nonlinear problems the arising linear systems for the Newton corrections can no longer be solved directly ('exactly'), but must be solved iterativly ('inexactly) - which gives the name inexact Newton methods. The whole scheme then consists of an inner iteration (at Newton step k): F'(x[k])deltaxi[k]=-F(x[k])+ri[k], k=0,1,... xi[k+1]=x[k]+deltaxi[k], i=0,1,..,imax[k] in terms of residuals ri[k] and an outer iteration where, given x[0], the iterates are defined as x[k+1]=xi[k+1] for i=imax[k], k=0,1,...
http://www.biomodels.net/kisao/KISAO#KISAO_0000263	http://www.biomodels.net/kisao/KISAO#KISAO_0000017	NFSim agent-based simulation method		A generalization a rule-based version of 'Gillespie's direct method' (SSA) [http://identifiers.org/biomodels.kisao/KISAO_0000029]. The method is guaranteed to produce the same results as the exact SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by cycling over three primary steps. First, NFsim calculates the probability or propensity for each rule to take effect given the current molecular states. Second, it samples the time to the next reaction event and selects the corresponding reaction rule. Finally, NFsim executes the selected reaction by applying the rule and updating the molecular agents accordingly.
http://www.biomodels.net/kisao/KISAO#KISAO_0000240	http://www.biomodels.net/kisao/KISAO#KISAO_0000238	implicit method type		Implicit methods find a solution by solving an equation involving both the current state of the system and the later one. Mathematically, if Y(t) is the current system state and Y((t+delta t) is the state at the later time (delta t is a small time step), then, for an implicit method one solves an equation G(Y(t), Y(t+delta t))=0, to find Y(t+delta t).
http://www.biomodels.net/kisao/KISAO#KISAO_0000301		Heun method	Heun's method	The method is named after Karl L. W. M. Heun and is a numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It can be seen as extension of the Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261] into two-stage second-order Runge-Kutta method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000436	http://www.biomodels.net/kisao/KISAO#KISAO_0000302	Dormand-Prince 8(5,3) method		This method is based on an 8(6) method by Dormand and Prince (i.e. order 8 for the integration and order 6 for error estimation) modified by Hairer and Wanner to use a 5th order error estimator with 3rd order correction.
http://www.biomodels.net/kisao/KISAO#KISAO_0000282		KINSOL	FKINSOL	KINSOL solves algebraic systems in real N-space, written as F(u)=0, F:RN->RN, given an initial guess u0. The basic method is either a modified or an inexact Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408]. The linear systems that arise are solved with either a direct (dense or banded) solver (serial version only), or one of the Krylov iterative solvers [http://identifiers.org/biomodels.kisao/KISAO_0000354]. In the Krylov case, the user can (optionally) supply a right preconditioner.
http://www.biomodels.net/kisao/KISAO#KISAO_0000019		CVODE	VODEPK	The CVODE is a package written in C that solves ODE initial value problems, in real N-space, written as y'=f(t,y), y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].
http://www.biomodels.net/kisao/KISAO#KISAO_0000048		adaptive explicit-implicit tau-leaping method		Modification of the original tau-selection strategy [http://identifiers.org/biomodels.kisao/KISAO_0000040], designed for explicit tau-leaping, is modified to apply to implicit tau-leaping, allowing for longer steps when the system is stiff. Further, an adaptive strategy is proposed that identifies stiffness and automatically chooses between the explicit and the (new) implicit tau-selection methods to achieve better efficiency.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264	http://www.biomodels.net/kisao/KISAO#KISAO_0000363	cellular automata update method	tessellation automata	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000408		Newton-type method		A method which attacks the solution of a nonlinear problem F(x) = 0 by solving a sequence of liner problems of the same kind. The solution of the system F(x)=0 can be interpreted as a steady state of a dynamic system x'(t)=F(x(t)). The Newton approach will only work if the fixed point [http://identifiers.org/biomodels.teddy/TEDDY_0000086] of the dinamic system is attractive [http://identifiers.org/biomodels.teddy/TEDDY_0000094].
http://www.biomodels.net/kisao/KISAO#KISAO_0000288		backward differentiation formula	BDF	The backward differentiation formulas (BDF) are implicit multistep methods based on the numerical differentiation of a given function and are wildly used for integration of stiff differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000352	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	hybrid method		A simulation methods which combines the advantages of complementary simulation approaches: the whole system is subdivided into appropriate parts and different simulation methods operate on these parts at the same time.
http://www.biomodels.net/kisao/KISAO#KISAO_0000323	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	equation-free probabilistic steady-state approximation		We present a probabilistic steady-state approximation that separates the time scales of an arbitrary reaction network, detects the convergence of a marginal distribution to a quasi-steady-state, directly samples the underlying distribution, and uses those samples to accurately predict the state of the system, including the effects of the slow dynamics, at future times. The numerical method produces an accurate solution of both the fast and slow reaction dynamics while, for stiff systems, reducing the computational time by orders of magnitude. The developed theory makes no approximations on the shape or form of the underlying steady-state distribution and only assumes that it is ergodic. <...> The developed theory may be applied to any type of kinetic Monte Carlo simulation to more efficiently simulate dynamically stiff systems, including existing exact, approximate, or hybrid stochastic simulation techniques. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000237	http://www.biomodels.net/kisao/KISAO#KISAO_0000235	approximate solution		Approximation algorithms are algorithms used to find approximate solutions to optimization problems. Approximation algorithms are often associated with NP-hard problems; since it is unlikely that there can ever be efficient polynomial time exact algorithms solving NP-hard problems, one settles for polynomial time sub-optimal solutions. Unlike heuristics, which usually only find reasonably good solutions reasonably fast, one wants provable solution quality and provable run time bounds. Ideally, the approximation is optimal up to a small constant factor (for instance within 5% of the optimal solution). Approximation algorithms are increasingly being used for problems where exact polynomial-time algorithms are known but are too expensive due to the input size.
http://www.biomodels.net/kisao/KISAO#KISAO_0000075		Gillespie multi-particle method	particle-based spatial stochastic method	Combination of the multiparticle method for diffusion [http://identifiers.org/biomodels.kisao/KISAO_0000334] and the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029].
http://www.biomodels.net/kisao/KISAO#KISAO_0000318		Gauss-Legendre Runge-Kutta method	Open Formula	So called 'Open Formula', two points formula, three points formula, four points formula, five points formula and six points formula of the Runge-Kutta method to solve the initial value problem of the ordinary differential equation. These formulas use the points and weights from the Gauss-Legendre Quadrature formulas for finding the value of the definite integral.
http://www.biomodels.net/kisao/KISAO#KISAO_0000216		integrate reduced model		This parameter is a boolean value to determine whether the integration shall be performed using the mass conservation laws (true), i.e., reducing the number of system variables or to use the complete model (false).
http://www.biomodels.net/kisao/KISAO#KISAO_0000261		Euler method		The Euler method, named after Leonhard Euler, is a first-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value.
http://www.biomodels.net/kisao/KISAO#KISAO_0000088	http://www.biomodels.net/kisao/KISAO#KISAO_0000094	LSODA	Livermore solver for ordinary differential equations with automatic method switching	LSODA solves systems dy/dt = f with a dense or banded Jacobian when the problem is stiff, but it automatically selects between non-stiff (Adams [http://identifiers.org/biomodels.kisao/KISAO_0000289]) and stiff (BDF [http://identifiers.org/biomodels.kisao/KISAO_0000288]) methods. It uses the non-stiff method initially, and dynamically monitors data in order to decide which method to use.
http://www.biomodels.net/kisao/KISAO#KISAO_0000337		finite element method	FEM	A numerical technique for finding approximate solutions of partial differential equations (PDE) as well as of integral equations. The solution approach is based either on eliminating the differential equation completely (steady state problems), or rendering the PDE into an approximating system of ordinary differential equations, which are then numerically integrated using standard techniques such as Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261], Runge-Kutta [http://identifiers.org/biomodels.kisao/KISAO_0000064], etc.
http://www.biomodels.net/kisao/KISAO#KISAO_0000279		Adams-Bashforth method	explicit Adams method	Given an initial value problem: y' = f(x,y), y(x0) = y0 together with additional starting values y1 = y(x0 + h), . . . , yk-1 = y(x0 + (k-1) h) the k-step Adams-Bashforth method is an explicit linear multistep method that approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( a0 f(xk - 1,yk - 1) + a1 f(xk - 2,yk - 2) + . . . + ak - 1 f(x0,y0) ), where a0, a1, . . . , ak - 1 are constants.
http://www.biomodels.net/kisao/KISAO#KISAO_0000273	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	hard-particle molecular dynamics		A collision-driven molecular dynamics algorithm for a system of non-spherical particles.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264		cellular automata update method	homogeneous structures	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000423		partial least squares regression-like method		Method for building regression models between independent and dependent variables.
http://www.biomodels.net/kisao/KISAO#KISAO_0000032	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	explicit fourth-order Runge-Kutta method	Runge-Kutta method	The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval).
http://www.biomodels.net/kisao/KISAO#KISAO_0000087	http://www.biomodels.net/kisao/KISAO#KISAO_0000435	Dormand-Prince method	Prince-Dormand method	Dormand-Prince is an explicit method for the numerical integration of ODES with a given initial value. It is an 'embedded Runge-Kutta method' [http://identifiers.org/biomodels.kisao/KISAO_0000302] RK5 (4) which (a) has a 'small' principal truncation term in the Fifth order and (b) has an extended region of absolute stability.
http://www.biomodels.net/kisao/KISAO#KISAO_0000281		multistep method	multi-value method	A numerical method for differential equations which is based on several values of the solution.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051		Bortz-Kalos-Lebowitz algorithm	KMC	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000356		DASSL	SDASSL	DASSL is designed for the numerical solution of implicit systems of differential/algebraic equations written in the form F(t,y,y')=0, where F, y, and y' are vectors, and initial values for y and y' are given.
http://www.biomodels.net/kisao/KISAO#KISAO_0000040		Poisson tau-leaping method	explicit tau-leaping	Explicit tau-leaping method with basic pre leap check.
http://www.biomodels.net/kisao/KISAO#KISAO_0000045		implicit tau-leaping method		Contrary to the explicit tau-leaping [http://identifiers.org/biomodels.kisao/KISAO_0000039 and http://identifiers.org/biomodels.kisao/KISAO_0000245 some http://identifiers.org/biomodels.kisao/KISAO_0000239] , the implicit tau-leaping allows for much larger time-steps when simulating stiff systems.
http://www.biomodels.net/kisao/KISAO#KISAO_0000027		Gibson-Bruck next reaction algorithm	Gibson and Bruck algorithm	As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.
http://www.biomodels.net/kisao/KISAO#KISAO_0000075	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Gillespie multi-particle method	GMP	Combination of the multiparticle method for diffusion [http://identifiers.org/biomodels.kisao/KISAO_0000334] and the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029].
http://www.biomodels.net/kisao/KISAO#KISAO_0000288	http://www.biomodels.net/kisao/KISAO#KISAO_0000281	backward differentiation formula	Gear's method	The backward differentiation formulas (BDF) are implicit multistep methods based on the numerical differentiation of a given function and are wildly used for integration of stiff differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	N-way partial least squares regression method	N-way PLSR	Requested by Kristin Tøndel on Thursday, October 13, 2011 11:33:06 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000230		minimum reactions per leap	threshold	'minimum reactions per leap' parameter is used in hybrid methods, which adaptively switch between the tau-leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039] to the SSA Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] when the number of reactions in a single tau-leaping leap step is less than the threshold.
http://www.biomodels.net/kisao/KISAO#KISAO_0000296		Hammer-Hollingsworth method		The numerical integration of ordinary differential equations by the use of Gaussian quadrature methods.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Bortz-Kalos-Lebowitz algorithm	DMC	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000342	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	level set method	level-set method	An algorithm for moving surfaces under their curvature. This algorithm rely on numerically solving Hamilton-Jacobi equations with viscous terms, using approximation techniques from hyperbolic conservation laws.
http://www.biomodels.net/kisao/KISAO#KISAO_0000278		Metropolis Monte Carlo algorithm	Metropolis algorithm	A general method, suitable for fast computing machines, for investigating such properties as equations of state for substances consisting of interacting individual molecules is described. The method consists of a modified Monte Carlo integration [http://identifiers.org/biomodels.kisao/KISAO_0000051] over configuration space.
http://www.biomodels.net/kisao/KISAO#KISAO_0000274	http://www.biomodels.net/kisao/KISAO#KISAO_0000319	first-passage Monte Carlo algorithm	AED DKMC	We present a novel Monte Carlo algorithm for N diffusing finite particles that react on collisions. Using the theory of first-passage processes and time dependent Green's functions, we break the difficult N-body problem into independent single- and two-body propagations circumventing numerous diffusion hops used in standard Monte Carlo simulations. The new algorithm is exact, extremely efficient, and applicable to many important physical situations in arbitrary integer dimensions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000064	http://www.biomodels.net/kisao/KISAO#KISAO_0000377	Runge-Kutta based method	modified Euler method	A method of numerically integrating ordinary differential equations, which uses a sampling of slopes through an interval and takes a weighted average to determine the right end point. This averaging gives a very accurate approximation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000355		DASPK	differential algebraic system solver with Krylov preconditioning	In DASPK, we have combined the time-stepping methods of DASSL [http://identifiers.org/biomodels.kisao/KISAO_0000255] with preconditioned iterative method GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000386], for solving large-scale systems of DAEs of the form F(t, y, y') = 0, where F, y, y' are N-dimensional vectors, and a consistent set of initial conditions y(t0) = y0, y'(t0) = y'0 is given. DASPK is written in Fortran.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264		cellular automata update method	cellular spaces	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000379		Bulirsch-Stoer algorithm	GBS	The Bulirsch-Stoer method is an adaptive method which uses Gragg's modified midpoint method [http://identifiers.org/biomodels.kisao/KISAO_0000382] to estimate the solution of an initial value problem for various step sizes. The estimates are fit to a "diagonal" rational function or a polynomial as a function of the step size and the limit as the step size tends to zero is taken as the final estimate.
http://www.biomodels.net/kisao/KISAO#KISAO_0000103	http://www.biomodels.net/kisao/KISAO#KISAO_0000099	deterministic system behaviour		Algorithm, possessing this characteristic, simulates the temporal evolution of a system deterministically, so that from a precise initial state the algorithm will always end up in the same final state.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264	http://www.biomodels.net/kisao/KISAO#KISAO_0000363	cellular automata update method	iterative arrays	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000278	http://www.biomodels.net/kisao/KISAO#KISAO_0000319	Metropolis Monte Carlo algorithm	Metropolis algorithm	A general method, suitable for fast computing machines, for investigating such properties as equations of state for substances consisting of interacting individual molecules is described. The method consists of a modified Monte Carlo integration [http://identifiers.org/biomodels.kisao/KISAO_0000051] over configuration space.
http://www.biomodels.net/kisao/KISAO#KISAO_0000324		nested stochastic simulation algorithm	nested SSA	This multiscale method is a small modification of the Gillespie's direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029], in the form of a nested SSA, with inner loops for the fast reactions, and outer loop for the slow reactions. The number of groups can be more than two, and the grouping into fast and slow variables can be done dynamically in an adaptive version of the scheme.
http://www.biomodels.net/kisao/KISAO#KISAO_0000350		probability-weighted dynamic Monte Carlo method	probability-weighted DMC	We have developed a probability-weighted DMC method by incorporating the weighted sampling algorithm of equilibrium molecular simulations. This new algorithm samples the slow reactions very efficiently and makes it possible to simulate in a computationally efficient manner the reaction kinetics of physical systems in which the rates of reactions vary by several orders of magnitude.
http://www.biomodels.net/kisao/KISAO#KISAO_0000082	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	k-alpha leaping method		Alternative to the tau-leaping [http://identifiers.org/biomodels.kisao/KISAO_0000039], where one leaps a fixed number of reaction-events.
http://www.biomodels.net/kisao/KISAO#KISAO_0000254	http://www.biomodels.net/kisao/KISAO#KISAO_0000242	Brownian diffusion accuracy		Accuracy code of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057], which sets which neighbouring boxes are checked for potential bi-molecular reactions. Consider the reaction A + B -> C and suppose that A and B are within a binding radius of each other. This reaction will always be performed if A and B are in the same virtual box. If accuracy is set to at least 3, then it will also occur if A and B are in nearest-neighbour virtual boxes. If it is at least 7, then the reaction will happen if they are in nearest-neighbour boxes that are separated by periodic boundary conditions. And if it is 9 or 10, then all edge and corner boxes are checked for reactions, which means that no potential reactions are overlooked.
http://www.biomodels.net/kisao/KISAO#KISAO_0000433	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	CVODE-like method		Solves ODE initial value problems, in real N-space, written as y'=f(t,y), y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].
http://www.biomodels.net/kisao/KISAO#KISAO_0000449	http://www.biomodels.net/kisao/KISAO#KISAO_0000448	synchronous logical model simulation method		Qualitative (logical) models specify the evolution rules of their components. In the case of a synchronous updating all enabled transitions are processed simultaneously. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000282	http://www.biomodels.net/kisao/KISAO#KISAO_0000408	KINSOL	FKINSOL	KINSOL solves algebraic systems in real N-space, written as F(u)=0, F:RN->RN, given an initial guess u0. The basic method is either a modified or an inexact Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408]. The linear systems that arise are solved with either a direct (dense or banded) solver (serial version only), or one of the Krylov iterative solvers [http://identifiers.org/biomodels.kisao/KISAO_0000354]. In the Krylov case, the user can (optionally) supply a right preconditioner.
http://www.biomodels.net/kisao/KISAO#KISAO_0000290		Merson method	Runge-Kutta-Merson method	A five-stage Runge-Kutta method with fourth-order accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000290		Merson method	Kutta-Merson method	A five-stage Runge-Kutta method with fourth-order accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000321	http://www.biomodels.net/kisao/KISAO#KISAO_0000435	Cash-Karp method		An family of explicit Runge-Kutta formulas, which are very efficient for problems with smooth solution as well as problems having rapidly varying solutions. Each member of this family consists of a fifty-order formula that contains embedded formulas of all orders 1 through 4. By computing solutions at several different orders, it is possible to detect sharp fronts or discontinuities before all the function evaluations defining the full Runge-Kutta step have been computed.
http://www.biomodels.net/kisao/KISAO#KISAO_0000029	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Gillespie direct algorithm	Doob-Gillespie method	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.
http://www.biomodels.net/kisao/KISAO#KISAO_0000388		minimal residual method	MINRES	The 'minimal residual method' is an algorithm for the numerical solution of indefinite symmertic systems of linear equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000448	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	logical model simulation method		Qualitative (logical) models specify the evolution rules of their components. In each state a number of transitions are enabled. A 'logical model simulation method' guides the choice of the transitions processed at each step.
http://www.biomodels.net/kisao/KISAO#KISAO_0000324	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	nested stochastic simulation algorithm	nested SSA	This multiscale method is a small modification of the Gillespie's direct method [http://identifiers.org/biomodels.kisao/KISAO_0000029], in the form of a nested SSA, with inner loops for the fast reactions, and outer loop for the slow reactions. The number of groups can be more than two, and the grouping into fast and slow variables can be done dynamically in an adaptive version of the scheme.
http://www.biomodels.net/kisao/KISAO#KISAO_0000317	http://www.biomodels.net/kisao/KISAO#KISAO_0000352	E-Cell multi-algorithm simulation method		A modular meta-algorithm with a discrete event scheduler that can incorporate any type of time-driven simulation algorithm. It was shown that this meta-algorithm can efficiently drive simulation models with different simulation algorithms with little intrusive modification to the algorithms themselves. Only a few additional methods to handle communications between computational modules are required.
http://www.biomodels.net/kisao/KISAO#KISAO_0000031		Euler backward method	implicit Gaussian first order Runge-Kutta	The Euler backward method is an implicit one-step method for the numerical integration of ODES with a given initial value. The next state of a system is calculated by solving an equation that considers both, the current state of the system and the later one.
http://www.biomodels.net/kisao/KISAO#KISAO_0000304		Radau method	implicit Runge-Kutta method based on Radau quadrature	Implicit Runge-Kutta methods based on Radau quadrature.
http://www.biomodels.net/kisao/KISAO#KISAO_0000040	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	Poisson tau-leaping method	explicit tau-leaping	Explicit tau-leaping method with basic pre leap check.
http://www.biomodels.net/kisao/KISAO#KISAO_0000371	http://www.biomodels.net/kisao/KISAO#KISAO_0000405	stochastic differential equation problem	SDE problem	
http://www.biomodels.net/kisao/KISAO#KISAO_0000320		BioRica hybrid method		The simulation schema for a given BioRica node is given by a hybrid algorithm that deals with continuous time and allows for discrete events that roll back the time according to these discrete interruptions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000046		trapezoidal tau-leaping method	trapezoidal implicit tau-leaping method	Formula for accelerated discrete efficient stochastic simulation of chemically reacting system [which] has better accuracy and stiff stability properties than the explicit and implicit [http://identifiers.org/biomodels.kisao/KISAO_0000045] tau-leaping formulas for discrete stochastic systems, and it limits to the trapezoidal rule in the deterministic regime.
http://www.biomodels.net/kisao/KISAO#KISAO_0000242	http://www.biomodels.net/kisao/KISAO#KISAO_0000201	error control parameter		Parameter controlling method accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000081	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	estimated midpoint tau-leaping method	explicit tau-leaping method with estimated-mid point technique	Estimated-Midpoint tau-Leap Method: For the selected leaping time tau which satisfies the Leap Condition, compute the expected state change lambda' = tau sumj( aj(x)vj ) during [t, t + tau). Then, with x' =x + [lambda'/2], generate for each j = 1,...,M a sample value kj of the Poisson random variable P(aj(x'), tau). Compute the actual state change, lambda = sumj( kjvj ), and effect the leap by replacing t by t + tau and x by x + lambda.
http://www.biomodels.net/kisao/KISAO#KISAO_0000337	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	finite element method	FEM	A numerical technique for finding approximate solutions of partial differential equations (PDE) as well as of integral equations. The solution approach is based either on eliminating the differential equation completely (steady state problems), or rendering the PDE into an approximating system of ordinary differential equations, which are then numerically integrated using standard techniques such as Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261], Runge-Kutta [http://identifiers.org/biomodels.kisao/KISAO_0000064], etc.
http://www.biomodels.net/kisao/KISAO#KISAO_0000389	http://www.biomodels.net/kisao/KISAO#KISAO_0000393	quasi-minimal residual method	QMR	The QMR algorithm is a robust iterative solver for general nonsingular non-Hermitian linear systems. The method uses a robust implementation of the look-ahead Lanczos algorithm to generate basis vectors for the Krylov subspaces Kn(r0, A). The QMR iterates are characterized by a quasi-minimal residual property over Kn(r0, A).
http://www.biomodels.net/kisao/KISAO#KISAO_0000235	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	type of solution		A characteristic describing the type of the solution produced by the method, specifically whether it is exact or approximate.
http://www.biomodels.net/kisao/KISAO#KISAO_0000332	http://www.biomodels.net/kisao/KISAO#KISAO_0000244	ER-leap initial leap	L	L (initial step) is a parameter of 'exact R-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000331]. ''We will assume that the reaction event to be bounded occurs within a run of L events in the SSA algorithm[http://identifiers.org/biomodels.kisao/KISAO_0000029], in order to execute L reactions at once in the manner of the R-leap algorithm[http://identifiers.org/biomodels.kisao/KISAO_0000230]''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000343		generalized finite element method	partition of unity method	The GFEM is a generalization of the classical 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] — in its h [http://identifiers.org/biomodels.kisao/KISAO_0000338], p [http://identifiers.org/biomodels.kisao/KISAO_0000339], and h-p versions [http://identifiers.org/biomodels.kisao/KISAO_0000340]— as well as of the various forms of meshless methods used in engineering.
http://www.biomodels.net/kisao/KISAO#KISAO_0000334	http://www.biomodels.net/kisao/KISAO#KISAO_0000068	multiparticle lattice gas automata	multiparticle lattice gas cellular automata	An algorithm which allows for an arbitrary number of particles, while keeping the benefits of the cellular automata approach [http://identifiers.org/biomodels.kisao/KISAO_0000315].
http://www.biomodels.net/kisao/KISAO#KISAO_0000022		Elf and Ehrenberg method	NSM	Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [http://identifiers.org/biomodels.kisao/KISAO_0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s).
http://www.biomodels.net/kisao/KISAO#KISAO_0000436		Dormand-Prince 8(5,3) method		This method is based on an 8(6) method by Dormand and Prince (i.e. order 8 for the integration and order 6 for error estimation) modified by Hairer and Wanner to use a 5th order error estimator with 3rd order correction.
http://www.biomodels.net/kisao/KISAO#KISAO_0000297		Lobatto method	implicit Runge-Kutta method based on Lobatto quadrature	There are three families of Lobatto methods, called IIIA, IIIB and IIIC. These are named after Rehuel Lobatto. All are implicit Runge-Kutta methods, have order 2s − 2 and they all have c1 = 0 and cs = 1.
http://www.biomodels.net/kisao/KISAO#KISAO_0000430	http://www.biomodels.net/kisao/KISAO#KISAO_0000201	variables preprocessing parameter		
http://www.biomodels.net/kisao/KISAO#KISAO_0000331		exact R-leaping algorithm	ER-leap method	We present a SSA which, similar to R-leap [http://identifiers.org/biomodels.kisao/KISAO_0000330], accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by executing multiple reactions per algorithmic step, but which samples the reactant trajectories from the same probability distribution as the SSA. This 'exact R-leap' or 'ER-leap' algorithm is a modification of the R-leap algorithm which is both exact and capable of substantial speed-up over SSA.
http://www.biomodels.net/kisao/KISAO#KISAO_0000355		DASPK	SDASPK	In DASPK, we have combined the time-stepping methods of DASSL [http://identifiers.org/biomodels.kisao/KISAO_0000255] with preconditioned iterative method GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000386], for solving large-scale systems of DAEs of the form F(t, y, y') = 0, where F, y, y' are N-dimensional vectors, and a consistent set of initial conditions y(t0) = y0, y'(t0) = y'0 is given. DASPK is written in Fortran.
http://www.biomodels.net/kisao/KISAO#KISAO_0000327		maximum discrete number		Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which controls the maximum number of molecules of some reactant species in order for the reaction to be considered discrete.
http://www.biomodels.net/kisao/KISAO#KISAO_0000420		number of partial least squares components		Parameter used by 'partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000416] describing number of PLS components to include in the regression analysis.
http://www.biomodels.net/kisao/KISAO#KISAO_0000220		LSODA maximum stiff order	BDF max order	This parameter is a positive integer value specifying the maximal order the stiff BDF integration method [http://identifiers.org/biomodels.kisao/KISAO_0000288] shall attempt before switching to smaller internal step sizes.
http://www.biomodels.net/kisao/KISAO#KISAO_0000419		metamodelling method		Deterministic dynamic models of complex biological systems contain a large number of parameters and state variables, related through nonlinear differential equations with various types of feedback. A metamodel of such a dynamic model is a statistical approximation model that maps variation in parameters and initial conditions (inputs) to variation in features of the trajectories of the state variables (outputs) throughout the entire biologically relevant input space.
http://www.biomodels.net/kisao/KISAO#KISAO_0000288	http://www.biomodels.net/kisao/KISAO#KISAO_0000281	backward differentiation formula	Gear method	The backward differentiation formulas (BDF) are implicit multistep methods based on the numerical differentiation of a given function and are wildly used for integration of stiff differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000027	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	Gibson-Bruck next reaction algorithm	Gibson and Bruck algorithm	As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.
http://www.biomodels.net/kisao/KISAO#KISAO_0000316	http://www.biomodels.net/kisao/KISAO#KISAO_0000056	enhanced Greens function reaction dynamics	eGFRD	GFRD [http://identifiers.org/biomodels.kisao/KISAO_0000058] decomposes the multi­body reaction diffusion problem to a set of single and two body problems. Analytical solutions for two body reaction diffusion are available via Smoluchowski equation. eGFRD allows to solve each sub­problem asynchronously by introducing the concept of first passage processes.
http://www.biomodels.net/kisao/KISAO#KISAO_0000303	http://www.biomodels.net/kisao/KISAO#KISAO_0000302	Zonneveld method		An embedded Runge-Kutta method [http://identifiers.org/biomodels.kisao/KISAO_0000302] of order 4(3), proposed by J.A. Zonneveld in 1964.
http://www.biomodels.net/kisao/KISAO#KISAO_0000027	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	Gibson-Bruck next reaction algorithm	next reaction method	As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.
http://www.biomodels.net/kisao/KISAO#KISAO_0000020		PVODE	parallel code value ordinary differential equation solver	PVODE is a general-purpose solver for ordinary differential equation (ODE) systems that implements methods for both stiff and nonstiff systems. [...] In the stiff case, PVODE uses a backward differentiation formula method [http://identifiers.org/biomodels.kisao/KISAO_0000288] combined with preconditioned GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000253] iteration. Parallelism is achieved by distributing the ODE solution vector into user-specified segments and parallelizing a set of vector kernels accordingly. For PDE-based ODE systems, we provide a module that generates a band block-diagonal preconditioner for use with the GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000253] iteration. PVODE is based on CVODE [http://identifiers.org/biomodels.kisao/KISAO_0000019].
http://www.biomodels.net/kisao/KISAO#KISAO_0000357		conjugate gradient method	CG	Conjugate gradient method is an algorithm for the numerical solution of particular systems of linear equations, namely those whose matrix is symmetric and positive-definite. The conjugate gradient method is an iterative method, so it can be applied to sparse systems that are too large to be handled by direct methods. Such systems often arise when numerically solving partial differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000434	http://www.biomodels.net/kisao/KISAO#KISAO_0000435	Higham-Hall method	RK5(4)7FEql	The equilibrium theory of Hall and Higham (1988) can be used to determine whether a Runge-Kutta algorithm will perform smoothly when stability restricts the stepsize. Higham-Hall method is a fifth order embedded Runge-Kutta method [http://identifiers.org/biomodels.kisao/KISAO_0000302], which behaves smoothly with respect to the standard type of stepsize controllers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000412	http://www.biomodels.net/kisao/KISAO#KISAO_0000408	inexact Newton method	truncated Newton method	For extremely large scale nonlinear problems the arising linear systems for the Newton corrections can no longer be solved directly ('exactly'), but must be solved iterativly ('inexactly) - which gives the name inexact Newton methods. The whole scheme then consists of an inner iteration (at Newton step k): F'(x[k])deltaxi[k]=-F(x[k])+ri[k], k=0,1,... xi[k+1]=x[k]+deltaxi[k], i=0,1,..,imax[k] in terms of residuals ri[k] and an outer iteration where, given x[0], the iterates are defined as x[k+1]=xi[k+1] for i=imax[k], k=0,1,...
http://www.biomodels.net/kisao/KISAO#KISAO_0000343	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	generalized finite element method	partition of unity method	The GFEM is a generalization of the classical 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] — in its h [http://identifiers.org/biomodels.kisao/KISAO_0000338], p [http://identifiers.org/biomodels.kisao/KISAO_0000339], and h-p versions [http://identifiers.org/biomodels.kisao/KISAO_0000340]— as well as of the various forms of meshless methods used in engineering.
http://www.biomodels.net/kisao/KISAO#KISAO_0000286	http://www.biomodels.net/kisao/KISAO#KISAO_0000377	Euler-Maruyama method	stochastic Euler scheme	The Euler-Maruyama method is a method for the approximate numerical solution of a stochastic differential equation, which truncates the Ito and Stratonovich Taylor series of the exact solution after the first order stochastic terms. This converges to the Ito solution with strong global order accuracy 1/2 or weak global order accuracy 1. It is a simple generalization of the Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261] for ordinary differential equations to stochastic differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051		Bortz-Kalos-Lebowitz algorithm	dynamic Monte Carlo	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000030		Euler forward method	explicit Euler method	The Euler method is an explicit one-step method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t.
http://www.biomodels.net/kisao/KISAO#KISAO_0000074		binomial tau-leaping method	BtauL	Coarse grained modified version of the next subvolume method [http://identifiers.org/biomodels.kisao/KISAO_0000022] that allows the user to consider both diffusion and reaction events in relatively long simulation time spans as compared with the original method and other commonly used fully stochastic computational methods.
http://www.biomodels.net/kisao/KISAO#KISAO_0000302		embedded Runge-Kutta method	embedded RK	An embedded Runge-Kutta method is a method in which two Runge-Kutta estimates are obtained using the same auxiliary functions ki but with a different linear combination of these functions so that one estimate has an order one greater than the other.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Bortz-Kalos-Lebowitz algorithm	kinetic Monte Carlo method	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000447		COAST	controllable approximative stochastic reaction algorithm	Requested by Mark Moeller on Friday, January 25, 2013 11:11:30 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000031	http://www.biomodels.net/kisao/KISAO#KISAO_0000261	Euler backward method	implicit Gaussian first order Runge-Kutta	The Euler backward method is an implicit one-step method for the numerical integration of ODES with a given initial value. The next state of a system is calculated by solving an equation that considers both, the current state of the system and the later one.
http://www.biomodels.net/kisao/KISAO#KISAO_0000355	http://www.biomodels.net/kisao/KISAO#KISAO_0000432	DASPK	differential algebraic system solver with Krylov preconditioning	In DASPK, we have combined the time-stepping methods of DASSL [http://identifiers.org/biomodels.kisao/KISAO_0000255] with preconditioned iterative method GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000386], for solving large-scale systems of DAEs of the form F(t, y, y') = 0, where F, y, y' are N-dimensional vectors, and a consistent set of initial conditions y(t0) = y0, y'(t0) = y'0 is given. DASPK is written in Fortran.
http://www.biomodels.net/kisao/KISAO#KISAO_0000365	http://www.biomodels.net/kisao/KISAO#KISAO_0000352	NDSolve method		The Mathematica computation system function NDSolve is a general numerical differential equation solver. It can handle a wide range of ordinary differential equations as well as some partial differential equations. NDSolve can also solve some differential-algebraic equations, which are typically a mix of differential and algebraic equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000296	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	Hammer-Hollingsworth method		The numerical integration of ordinary differential equations by the use of Gaussian quadrature methods.
http://www.biomodels.net/kisao/KISAO#KISAO_0000381	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	midpoint method		The midpoint method is an explicit method for approximating the solution of the initial value problem y' = f(x,y); y(x0) = y0 at x for a given step size h. For the midpoint method the derivative of y(x) is approximated by the symmetric difference y'(x) = ( y(x+h) - y(x-h) ) / 2h + O(h2).
http://www.biomodels.net/kisao/KISAO#KISAO_0000089	http://www.biomodels.net/kisao/KISAO#KISAO_0000094	LSODAR	Livermore solver for ordinary differential equations with automatic method switching and root finding	LSODAR is a variant of LSODA [http://identifiers.org/biomodels.kisao/KISAO_0000088] with a root finding capability added. Thus it solves problems dy/dt = f with dense or banded Jacobian and automatic method selection, and at the same time, it finds the roots of any of a set of given functions of the form g(t,y). This is often useful for finding stop conditions, or for finding points at which a switch is to be made in the function f.
http://www.biomodels.net/kisao/KISAO#KISAO_0000022	http://www.biomodels.net/kisao/KISAO#KISAO_0000095	Elf and Ehrenberg method	NSM	Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [http://identifiers.org/biomodels.kisao/KISAO_0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s).
http://www.biomodels.net/kisao/KISAO#KISAO_0000091		LSODIS	Livermore solver for ordinary differential equations, implicit sparse version	LSODIS is a set of general-purpose FORTRAN routines solver for the initial value problem for ordinary differential equation systems. It is suitable for both stiff and nonstiff systems. LSODIS treat systems in the linearly implicit form A(t,y) dy/dt = g(t,y), A = a square matrix, i.e. with the derivative dy/dt implicit, but linearly so.
http://www.biomodels.net/kisao/KISAO#KISAO_0000356		DASSL	differential algebraic system solver	DASSL is designed for the numerical solution of implicit systems of differential/algebraic equations written in the form F(t,y,y')=0, where F, y, and y' are vectors, and initial values for y and y' are given.
http://www.biomodels.net/kisao/KISAO#KISAO_0000223		number of history bins		The 'number of history bins' is only enabled for models that contain delayed or multistep reactions for specifying the granularity with which the delayed reaction solver should retain the history of species values, for species that participate in delayed reactions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000363	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	rule-based simulation method		Rule-based models provide a powerful alternative to approaches that require explicit enumeration of all possible molecular species of a system. Such models consist of formal rules governing interactive behaviour. Rule-based simulation methods are methods, used to simulated such models.
http://www.biomodels.net/kisao/KISAO#KISAO_0000255		molecules per virtual box		Target molecules per virtual box is a parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057], which sets the box sizes so that the average number of molecules per box, at simulation initiation, is close to the requested number.
http://www.biomodels.net/kisao/KISAO#KISAO_0000407		steady state method		A method looking for a steady state of a dynamic system.
http://www.biomodels.net/kisao/KISAO#KISAO_0000075	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Gillespie multi-particle method	particle-based spatial stochastic method	Combination of the multiparticle method for diffusion [http://identifiers.org/biomodels.kisao/KISAO_0000334] and the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029].
http://www.biomodels.net/kisao/KISAO#KISAO_0000429	http://www.biomodels.net/kisao/KISAO#KISAO_0000201	clusterization parameter		Parameter used by algorithms performing clusterization.
http://www.biomodels.net/kisao/KISAO#KISAO_0000027		Gibson-Bruck next reaction algorithm	Gillespie-Gibson stochastic simulation algorithm	As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.
http://www.biomodels.net/kisao/KISAO#KISAO_0000348		extended finite element method	XFEM	A numerical method to model arbitrary discontinuities in continuous bodies that does not require the mesh to conform to the discontinuities nor significant mesh refinement near singularities. In X-FEM the standard finite element approximation [http://identifiers.org/biomodels.kisao/KISAO_0000337] is enriched and the approximation space is extended by an additional family of functions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000316		enhanced Greens function reaction dynamics	enhanced Greens function reaction dynamics	GFRD [http://identifiers.org/biomodels.kisao/KISAO_0000058] decomposes the multi­body reaction diffusion problem to a set of single and two body problems. Analytical solutions for two body reaction diffusion are available via Smoluchowski equation. eGFRD allows to solve each sub­problem asynchronously by introducing the concept of first passage processes.
http://www.biomodels.net/kisao/KISAO#KISAO_0000356	http://www.biomodels.net/kisao/KISAO#KISAO_0000432	DASSL	differential algebraic system solver	DASSL is designed for the numerical solution of implicit systems of differential/algebraic equations written in the form F(t,y,y')=0, where F, y, and y' are vectors, and initial values for y and y' are given.
http://www.biomodels.net/kisao/KISAO#KISAO_0000416	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	partial least squares regression method	PLSR method	Multivariate regression method based on estimated latent variables. Related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
http://www.biomodels.net/kisao/KISAO#KISAO_0000304	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	Radau method	implicit Runge-Kutta method based on Radau quadrature	Implicit Runge-Kutta methods based on Radau quadrature.
http://www.biomodels.net/kisao/KISAO#KISAO_0000276	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	Gill method	Runge-Kutta-Gill method	Gill's fourth order method is a Runge-Kutta method for approximating the solution of the initial value problem y'(x) = f(x,y); y(x0) = y0 which evaluates the integrand,f(x,y), four times per step. This method is a fourth order procedure for which Richardson extrapolation can be used.
http://www.biomodels.net/kisao/KISAO#KISAO_0000033	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	Rosenbrock method	Kaps-Rentrop method	Some general implicit processes are given for the solution of simultaneous first-order differential equations. These processes, which use successive substitution, are implicit analogues of the (explicit) Runge-Kutta processes. They require the solution in each time step of one or more set of simultaneous linear equations, usually of a special and simple form. Processes of any required order can be devised, and they can be made to have a wide margin of stability when applied to a linear problem.
http://www.biomodels.net/kisao/KISAO#KISAO_0000282	http://www.biomodels.net/kisao/KISAO#KISAO_0000408	KINSOL	Newton-Krylov solver for nonlinear algebraic systems	KINSOL solves algebraic systems in real N-space, written as F(u)=0, F:RN->RN, given an initial guess u0. The basic method is either a modified or an inexact Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408]. The linear systems that arise are solved with either a direct (dense or banded) solver (serial version only), or one of the Krylov iterative solvers [http://identifiers.org/biomodels.kisao/KISAO_0000354]. In the Krylov case, the user can (optionally) supply a right preconditioner.
http://www.biomodels.net/kisao/KISAO#KISAO_0000252	http://www.biomodels.net/kisao/KISAO#KISAO_0000201	partitioning control parameter		
http://www.biomodels.net/kisao/KISAO#KISAO_0000074	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	binomial tau-leaping method	binomial tau-leap spatial stochastic simulation algorithm	Coarse grained modified version of the next subvolume method [http://identifiers.org/biomodels.kisao/KISAO_0000022] that allows the user to consider both diffusion and reaction events in relatively long simulation time spans as compared with the original method and other commonly used fully stochastic computational methods.
http://www.biomodels.net/kisao/KISAO#KISAO_0000282	http://www.biomodels.net/kisao/KISAO#KISAO_0000408	KINSOL	NKSOL	KINSOL solves algebraic systems in real N-space, written as F(u)=0, F:RN->RN, given an initial guess u0. The basic method is either a modified or an inexact Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408]. The linear systems that arise are solved with either a direct (dense or banded) solver (serial version only), or one of the Krylov iterative solvers [http://identifiers.org/biomodels.kisao/KISAO_0000354]. In the Krylov case, the user can (optionally) supply a right preconditioner.
http://www.biomodels.net/kisao/KISAO#KISAO_0000248	http://www.biomodels.net/kisao/KISAO#KISAO_0000252	tau-leaping delta		Tau-leaping delta specifies how close two symmetric transition rates must be before we classify them as in partial-equilibrium. Only applies to the implicit tau routine [http://identifiers.org/biomodels.kisao/KISAO_0000045].
http://www.biomodels.net/kisao/KISAO#KISAO_0000088		LSODA	Livermore solver for ordinary differential equations with automatic method switching	LSODA solves systems dy/dt = f with a dense or banded Jacobian when the problem is stiff, but it automatically selects between non-stiff (Adams [http://identifiers.org/biomodels.kisao/KISAO_0000289]) and stiff (BDF [http://identifiers.org/biomodels.kisao/KISAO_0000288]) methods. It uses the non-stiff method initially, and dynamically monitors data in order to decide which method to use.
http://www.biomodels.net/kisao/KISAO#KISAO_0000310	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	method of lines	NUMOL	The method of lines is a general technique for solving partial differential equations (PDEs) by typically using finite difference relationships for the spatial derivatives and ordinary differential equations for the time derivative.
http://www.biomodels.net/kisao/KISAO#KISAO_0000282		KINSOL	Newton-Krylov solver for nonlinear algebraic systems	KINSOL solves algebraic systems in real N-space, written as F(u)=0, F:RN->RN, given an initial guess u0. The basic method is either a modified or an inexact Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408]. The linear systems that arise are solved with either a direct (dense or banded) solver (serial version only), or one of the Krylov iterative solvers [http://identifiers.org/biomodels.kisao/KISAO_0000354]. In the Krylov case, the user can (optionally) supply a right preconditioner.
http://www.biomodels.net/kisao/KISAO#KISAO_0000203	http://www.biomodels.net/kisao/KISAO#KISAO_0000252	particle number lower limit		This parameter of 'Pahle hybrid method' [http://identifiers.org/biomodels.kisao/KISAO_0000231] is a double value specifying the lower limit for particle numbers. Species with a particle number below this value are considered as having a low particle number. The 'particle number lower limit' cannot be higher than the 'particle number upper limit' [http://identifiers.org/biomodels.kisao/KISAO_0000204].
http://www.biomodels.net/kisao/KISAO#KISAO_0000350		probability-weighted dynamic Monte Carlo method	PW-DMC	We have developed a probability-weighted DMC method by incorporating the weighted sampling algorithm of equilibrium molecular simulations. This new algorithm samples the slow reactions very efficiently and makes it possible to simulate in a computationally efficient manner the reaction kinetics of physical systems in which the rates of reactions vary by several orders of magnitude.
http://www.biomodels.net/kisao/KISAO#KISAO_0000382		modified midpoint method	Gragg's method	The modified midpoint method is globally a second order method for approximating the solution of the initial value problem y' = f(x, y), y(x0) = y0, which advances a vector of dependent variables y(x) from a point x to a point x + H by a sequence of n substeps each of size h, h = H/n. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000379	http://www.biomodels.net/kisao/KISAO#KISAO_0000380	Bulirsch-Stoer algorithm	Gragg-Bulirsch-Stoer algorithm	The Bulirsch-Stoer method is an adaptive method which uses Gragg's modified midpoint method [http://identifiers.org/biomodels.kisao/KISAO_0000382] to estimate the solution of an initial value problem for various step sizes. The estimates are fit to a "diagonal" rational function or a polynomial as a function of the step size and the limit as the step size tends to zero is taken as the final estimate.
http://www.biomodels.net/kisao/KISAO#KISAO_0000020	http://www.biomodels.net/kisao/KISAO#KISAO_0000433	PVODE	parallel code value ordinary differential equation solver	PVODE is a general-purpose solver for ordinary differential equation (ODE) systems that implements methods for both stiff and nonstiff systems. [...] In the stiff case, PVODE uses a backward differentiation formula method [http://identifiers.org/biomodels.kisao/KISAO_0000288] combined with preconditioned GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000253] iteration. Parallelism is achieved by distributing the ODE solution vector into user-specified segments and parallelizing a set of vector kernels accordingly. For PDE-based ODE systems, we provide a module that generates a band block-diagonal preconditioner for use with the GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000253] iteration. PVODE is based on CVODE [http://identifiers.org/biomodels.kisao/KISAO_0000019].
http://www.biomodels.net/kisao/KISAO#KISAO_0000254		Brownian diffusion accuracy		Accuracy code of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057], which sets which neighbouring boxes are checked for potential bi-molecular reactions. Consider the reaction A + B -> C and suppose that A and B are within a binding radius of each other. This reaction will always be performed if A and B are in the same virtual box. If accuracy is set to at least 3, then it will also occur if A and B are in nearest-neighbour virtual boxes. If it is at least 7, then the reaction will happen if they are in nearest-neighbour boxes that are separated by periodic boundary conditions. And if it is 9 or 10, then all edge and corner boxes are checked for reactions, which means that no potential reactions are overlooked.
http://www.biomodels.net/kisao/KISAO#KISAO_0000348	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	extended finite element method	XFEM	A numerical method to model arbitrary discontinuities in continuous bodies that does not require the mesh to conform to the discontinuities nor significant mesh refinement near singularities. In X-FEM the standard finite element approximation [http://identifiers.org/biomodels.kisao/KISAO_0000337] is enriched and the approximation space is extended by an additional family of functions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000274	http://www.biomodels.net/kisao/KISAO#KISAO_0000319	first-passage Monte Carlo algorithm	AED diffusion kinetic Monte Carlo method	We present a novel Monte Carlo algorithm for N diffusing finite particles that react on collisions. Using the theory of first-passage processes and time dependent Green's functions, we break the difficult N-body problem into independent single- and two-body propagations circumventing numerous diffusion hops used in standard Monte Carlo simulations. The new algorithm is exact, extremely efficient, and applicable to many important physical situations in arbitrary integer dimensions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000205		partitioning interval		This positive integer value specifies after how many steps the internal partitioning of the system should be recalculated.
http://www.biomodels.net/kisao/KISAO#KISAO_0000027	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	Gibson-Bruck next reaction algorithm	Gillespie-Gibson stochastic simulation algorithm	As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.
http://www.biomodels.net/kisao/KISAO#KISAO_0000447	http://www.biomodels.net/kisao/KISAO#KISAO_0000352	COAST	controllable approximative stochastic reaction algorithm	Requested by Mark Moeller on Friday, January 25, 2013 11:11:30 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000339	http://www.biomodels.net/kisao/KISAO#KISAO_0000337	p-version of the finite element method	p-method	The p version of 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] uses a fixed mesh but increases the polynomial degree p to increase accuracy. Can be considered as a special case of the h-p version [http://identifiers.org/biomodels.kisao/KISAO_0000340].
http://www.biomodels.net/kisao/KISAO#KISAO_0000028		slow-scale stochastic simulation algorithm	ssSSA	Attempt to overcome the problem of stiff systems by developing an ''approximate theory that allows one to stochastically advance the system in time by simulating the firings of only the slow reaction events''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000074	http://www.biomodels.net/kisao/KISAO#KISAO_0000039	binomial tau-leaping method	BtauL	Coarse grained modified version of the next subvolume method [http://identifiers.org/biomodels.kisao/KISAO_0000022] that allows the user to consider both diffusion and reaction events in relatively long simulation time spans as compared with the original method and other commonly used fully stochastic computational methods.
http://www.biomodels.net/kisao/KISAO#KISAO_0000382	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	modified midpoint method	Gragg's method	The modified midpoint method is globally a second order method for approximating the solution of the initial value problem y' = f(x, y), y(x0) = y0, which advances a vector of dependent variables y(x) from a point x to a point x + H by a sequence of n substeps each of size h, h = H/n. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000028		slow-scale stochastic simulation algorithm	slow-scale stochastic SSA	Attempt to overcome the problem of stiff systems by developing an ''approximate theory that allows one to stochastically advance the system in time by simulating the firings of only the slow reaction events''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264		cellular automata update method	cellular automata	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000348	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	extended finite element method	X-FEM	A numerical method to model arbitrary discontinuities in continuous bodies that does not require the mesh to conform to the discontinuities nor significant mesh refinement near singularities. In X-FEM the standard finite element approximation [http://identifiers.org/biomodels.kisao/KISAO_0000337] is enriched and the approximation space is extended by an additional family of functions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000216	http://www.biomodels.net/kisao/KISAO#KISAO_0000243	integrate reduced model		This parameter is a boolean value to determine whether the integration shall be performed using the mass conservation laws (true), i.e., reducing the number of system variables or to use the complete model (false).
http://www.biomodels.net/kisao/KISAO#KISAO_0000274		first-passage Monte Carlo algorithm	AED DKMC	We present a novel Monte Carlo algorithm for N diffusing finite particles that react on collisions. Using the theory of first-passage processes and time dependent Green's functions, we break the difficult N-body problem into independent single- and two-body propagations circumventing numerous diffusion hops used in standard Monte Carlo simulations. The new algorithm is exact, extremely efficient, and applicable to many important physical situations in arbitrary integer dimensions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000305		Verner method	Verner's method	The first high order (6(5)) embedded Runge-Kutta formulas that avoid the drawback of giving identically zero error estimates for quadrature problems y' = f(x) were constructed by Verner in 1978.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	N-way partial least squares regression method	N-PLS	Multivariate regression method that can be used on N-way data. Based on Partial Least Squares Regression (PLSR) [http://identifiers.org/biomodels.kisao/KISAO_0000416], which is a regression method based on estimated latent variables. PLSR is related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
http://www.biomodels.net/kisao/KISAO#KISAO_0000416	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	partial least squares regression method	PLSR	Requested by Kristin Tøndel on Thursday, October 13, 2011 10:46:04 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000395	http://www.biomodels.net/kisao/KISAO#KISAO_0000354	improved biconjugate gradient method		An 'improved biconjugate gradient method' branch contains algorithms which can be viewed as improvements over some of drawbacks of BCG [http://identifiers.org/biomodels.kisao/KISAO_0000358], such as (1) the need for matrix-vector multiplications with A^T (which can be inconvenient as well as doubling the number of matrix-vector multiplications compared to CG [http://identifiers.org/biomodels.kisao/KISAO_0000357] for each increase in the degree of the underlying Krylov subspace), (2) the possibility of breakdowns and (3) erratic convergence behavior. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000094	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	Livermore solver		Method to solve ordinary differential equations developed at the Lawrence Livermore National Laboratory.
http://www.biomodels.net/kisao/KISAO#KISAO_0000343	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	generalized finite element method	PUM	The GFEM is a generalization of the classical 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] — in its h [http://identifiers.org/biomodels.kisao/KISAO_0000338], p [http://identifiers.org/biomodels.kisao/KISAO_0000339], and h-p versions [http://identifiers.org/biomodels.kisao/KISAO_0000340]— as well as of the various forms of meshless methods used in engineering.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264		cellular automata update method	tessellation structures	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000310	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	method of lines	MOL	The method of lines is a general technique for solving partial differential equations (PDEs) by typically using finite difference relationships for the spatial derivatives and ordinary differential equations for the time derivative.
http://www.biomodels.net/kisao/KISAO#KISAO_0000243		method switching control parameter		Parameters describing threshold conditions for algorithms that switch between different methods.
http://www.biomodels.net/kisao/KISAO#KISAO_0000337		finite element method	FEA	A numerical technique for finding approximate solutions of partial differential equations (PDE) as well as of integral equations. The solution approach is based either on eliminating the differential equation completely (steady state problems), or rendering the PDE into an approximating system of ordinary differential equations, which are then numerically integrated using standard techniques such as Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261], Runge-Kutta [http://identifiers.org/biomodels.kisao/KISAO_0000064], etc.
http://www.biomodels.net/kisao/KISAO#KISAO_0000377	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	one-step method		A numerical method for differential equations which uses one starting value at each step.
http://www.biomodels.net/kisao/KISAO#KISAO_0000448		logical model simulation method		Qualitative (logical) models specify the evolution rules of their components. In each state a number of transitions are enabled. A 'logical model simulation method' guides the choice of the transitions processed at each step.
http://www.biomodels.net/kisao/KISAO#KISAO_0000290		Merson method	Merson's method	A five-stage Runge-Kutta method with fourth-order accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000375	http://www.biomodels.net/kisao/KISAO#KISAO_0000405	delay differential equation problem	DDE problem	
http://www.biomodels.net/kisao/KISAO#KISAO_0000263		NFSim agent-based simulation method		A generalization a rule-based version of 'Gillespie's direct method' (SSA) [http://identifiers.org/biomodels.kisao/KISAO_0000029]. The method is guaranteed to produce the same results as the exact SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] by cycling over three primary steps. First, NFsim calculates the probability or propensity for each rule to take effect given the current molecular states. Second, it samples the time to the next reaction event and selects the corresponding reaction rule. Finally, NFsim executes the selected reaction by applying the rule and updating the molecular agents accordingly.
http://www.biomodels.net/kisao/KISAO#KISAO_0000302	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	embedded Runge-Kutta method	embedded RK	An embedded Runge-Kutta method is a method in which two Runge-Kutta estimates are obtained using the same auxiliary functions ki but with a different linear combination of these functions so that one estimate has an order one greater than the other.
http://www.biomodels.net/kisao/KISAO#KISAO_0000289	http://www.biomodels.net/kisao/KISAO#KISAO_0000281	Adams method		Adams' methods are multi-step methods used for the numerical integration of initial value problems in Ordinary Differential Equations (ODE's). Adams' algorithm consists of two parts: firstly, a starting procedure which provides y1, ... , yk-1 ( approximations to the exact solution at the points x0 + h, ... , x0 + (k - 1)h ) and, secondly, a multistep formula to obtain an approximation to the exact solution y(x0 + kh). This is then applied recursively, based on the numerical approximation of k successive steps, to compute y(x0 + (k + 1)h).
http://www.biomodels.net/kisao/KISAO#KISAO_0000306		Lagrangian sliding fluid element algorithm	blood-tissue exchange method	Because the analytic solutions to the partial differential equations require convolution integration, solutions are obtained relatively efficiently by a fast numerical method. Our approach centers on the use of a sliding fluid element algorithm for capillary convection, with the time step set equal to the length step divided by the fluid velocity. Radial fluxes by permeation between plasma, interstitial fluid, and cells and axial diffusion exchanges within each time step are calculated analytically. The method enforces mass conservation unless there is regional consumption.
http://www.biomodels.net/kisao/KISAO#KISAO_0000343		generalized finite element method	PUM	The GFEM is a generalization of the classical 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] — in its h [http://identifiers.org/biomodels.kisao/KISAO_0000338], p [http://identifiers.org/biomodels.kisao/KISAO_0000339], and h-p versions [http://identifiers.org/biomodels.kisao/KISAO_0000340]— as well as of the various forms of meshless methods used in engineering.
http://www.biomodels.net/kisao/KISAO#KISAO_0000058		Greens function reaction dynamics	GFRD	Method that simulates biochemical networks on particle level. It considers both changes in time and space by ''exploiting both the exact solution of the Smoluchowski Equation to set up an event-driven algorithm'' which allows for large jumps in time when the considered particles are far away from each other [in space] and thus cannot react. GFRD combines the propagation of particles in space with the reactions taking place between them in one simulation step.
http://www.biomodels.net/kisao/KISAO#KISAO_0000032		explicit fourth-order Runge-Kutta method	RK4	The Runge-Kutta method is a method for the numerical integration of ODES with a given initial value. The calculation of the next integration step at time t+1 is based on the state of the system at time point t, plus the product of the size of the interval and an estimated slope. The slope is a weighted average of 4 single slope points (beginning of interval-midpoint-midpoint-end of interval).
http://www.biomodels.net/kisao/KISAO#KISAO_0000393	http://www.biomodels.net/kisao/KISAO#KISAO_0000395	ingenious conjugate gradients-squared method	CGS	A Lanczos-type method for nonsymmetric sparse linear systems. The method is based on a polynomial variant of the conjugate gradients algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000357]. Although related to the so-called bi-conjugate gradients (Bi-CG) algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000358], it does not involve adjoint matrix-vector multiplications, and the expected convergence rate is about twice that of the Bi-CG algorithm.
http://www.biomodels.net/kisao/KISAO#KISAO_0000015	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Gillespie first reaction algorithm	Gillespie's first reaction method	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm calculates a tentative reaction time for each reaction and then select the smallest.
http://www.biomodels.net/kisao/KISAO#KISAO_0000311	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	type of domain geometry handling		
http://www.biomodels.net/kisao/KISAO#KISAO_0000228	http://www.biomodels.net/kisao/KISAO#KISAO_0000242	tau-leaping epsilon	tolerance	The leap condition is chosen such that the expected change in the propensity function aj(x) is bounded by Epsilon * a0 where Epsilon is an error control parameter between 0 and 1. This parameter is the basic error control mechanism for the Tau-Leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039]. As Epsilon decreases the leaps become shorter and the simulation is more accurate.
http://www.biomodels.net/kisao/KISAO#KISAO_0000342		level set method	LSM	An algorithm for moving surfaces under their curvature. This algorithm rely on numerically solving Hamilton-Jacobi equations with viscous terms, using approximation techniques from hyperbolic conservation laws.
http://www.biomodels.net/kisao/KISAO#KISAO_0000350	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	probability-weighted dynamic Monte Carlo method	PW-DMC	We have developed a probability-weighted DMC method by incorporating the weighted sampling algorithm of equilibrium molecular simulations. This new algorithm samples the slow reactions very efficiently and makes it possible to simulate in a computationally efficient manner the reaction kinetics of physical systems in which the rates of reactions vary by several orders of magnitude.
http://www.biomodels.net/kisao/KISAO#KISAO_0000326		number of samples		Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which determines the number of samples taken from the distribution.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264		cellular automata update method	cellular structures	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000333	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	accelerated stochastic simulation algorithm	accelerated SSA	An algorithm, which accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] either at the expense of its accuracy or exact.
http://www.biomodels.net/kisao/KISAO#KISAO_0000089	http://www.biomodels.net/kisao/KISAO#KISAO_0000094	LSODAR	ordinary differential equation solver for stiff or non-stiff systems with root finding	LSODAR is a variant of LSODA [http://identifiers.org/biomodels.kisao/KISAO_0000088] with a root finding capability added. Thus it solves problems dy/dt = f with dense or banded Jacobian and automatic method selection, and at the same time, it finds the roots of any of a set of given functions of the form g(t,y). This is often useful for finding stop conditions, or for finding points at which a switch is to be made in the function f.
http://www.biomodels.net/kisao/KISAO#KISAO_0000256		virtual box side length		The 'virtual box side length' is a parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. It requests the length of one side of a box.
http://www.biomodels.net/kisao/KISAO#KISAO_0000028	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	slow-scale stochastic simulation algorithm	slow-scale stochastic SSA	Attempt to overcome the problem of stiff systems by developing an ''approximate theory that allows one to stochastically advance the system in time by simulating the firings of only the slow reaction events''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000325	http://www.biomodels.net/kisao/KISAO#KISAO_0000242	minimum fast/discrete reaction occurrences number		Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which describes the minimum number of fast/discrete reaction occurrences before their effects cause convergence to a quasi-steady-state distribution.
http://www.biomodels.net/kisao/KISAO#KISAO_0000428	http://www.biomodels.net/kisao/KISAO#KISAO_0000429	matrix for clusterization		A matrix to do the clustering in 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417].
http://www.biomodels.net/kisao/KISAO#KISAO_0000397	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	preconditioning technique		Preconditioning is simply a means of transforming the original linear system into one which has the same solution, but which is likely to be easier to solve with an iterative solver.
http://www.biomodels.net/kisao/KISAO#KISAO_0000404	http://www.biomodels.net/kisao/KISAO#KISAO_0000370	symmetricity of matrix		In linear algebra, a symmetric matrix is a square matrix that is equal to its transpose.
http://www.biomodels.net/kisao/KISAO#KISAO_0000416	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	partial least squares regression method	PLSR method	Requested by Kristin Tøndel on Thursday, October 13, 2011 10:46:04 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000358		biconjugate gradient method	BCG	The biconjugate gradient method provides a generalization of conjugate gradient method [http://identifiers.org/biomodels.kisao/KISAO_0000357] to non-symmetric matrices.
http://www.biomodels.net/kisao/KISAO#KISAO_0000093		LSODPK	Livermore solver for ordinary differential equations for stiff and nonstiff systems with krylov corrector iteration	LSODPK is a set of FORTRAN subroutines for solving the initial value problem for stiff and nonstiff systems of ordinary differential equations. In solving stiff systems, LSODPK uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods [http://identifiers.org/biomodels.kisao/KISAO_0000354]. The user must select the desired Krylov method and supply a pair of routine to evaluate, preprocess, and solve the (left and/or right) preconditioner matrices. Aside from preconditioning, the implementation is matrix-free, meaning that explicit storage of the Jacobian (or related) matrix is not required. The method is experimental because the scope of problems for which it is effective is not well-known, and users are forewarned that LSODPK may or may not be competitive with traditional methods on a given problem. LSODPK also includes an option for a user-supplied linear system solver to be used without Krylov iteration.
http://www.biomodels.net/kisao/KISAO#KISAO_0000420	http://www.biomodels.net/kisao/KISAO#KISAO_0000201	number of partial least squares components		Parameter used by 'partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000416] describing number of PLS components to include in the regression analysis.
http://www.biomodels.net/kisao/KISAO#KISAO_0000209	http://www.biomodels.net/kisao/KISAO#KISAO_0000242	relative tolerance	RTOL	This parameter is a numeric value specifying the desired relative tolerance the user wants to achieve. A smaller value means that the trajectory is calculated more accurately.
http://www.biomodels.net/kisao/KISAO#KISAO_0000074		binomial tau-leaping method	binomial tau-leap spatial stochastic simulation algorithm	Coarse grained modified version of the next subvolume method [http://identifiers.org/biomodels.kisao/KISAO_0000022] that allows the user to consider both diffusion and reaction events in relatively long simulation time spans as compared with the original method and other commonly used fully stochastic computational methods.
http://www.biomodels.net/kisao/KISAO#KISAO_0000374	http://www.biomodels.net/kisao/KISAO#KISAO_0000405	ordinary differential equation problem	ODE problem	
http://www.biomodels.net/kisao/KISAO#KISAO_0000340		h-p version of the finite element method	hp-FEM	In h-p version of 'finite difference method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] the two approaches of mesh refinement and degree enchacement are combined.
http://www.biomodels.net/kisao/KISAO#KISAO_0000029	http://www.biomodels.net/kisao/KISAO#KISAO_0000241	Gillespie direct algorithm	DM	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.
http://www.biomodels.net/kisao/KISAO#KISAO_0000290		Merson method	KM	A five-stage Runge-Kutta method with fourth-order accuracy.
http://www.biomodels.net/kisao/KISAO#KISAO_0000306	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	Lagrangian sliding fluid element algorithm	BTEX	Because the analytic solutions to the partial differential equations require convolution integration, solutions are obtained relatively efficiently by a fast numerical method. Our approach centers on the use of a sliding fluid element algorithm for capillary convection, with the time step set equal to the length step divided by the fluid velocity. Radial fluxes by permeation between plasma, interstitial fluid, and cells and axial diffusion exchanges within each time step are calculated analytically. The method enforces mass conservation unless there is regional consumption.
http://www.biomodels.net/kisao/KISAO#KISAO_0000403	http://www.biomodels.net/kisao/KISAO#KISAO_0000376	homogeneousness of equation		Homogeneous equations are of the form Ly = 0, where the differential operator L is a linear operator and y is the unknown function.
http://www.biomodels.net/kisao/KISAO#KISAO_0000057	http://www.biomodels.net/kisao/KISAO#KISAO_0000056	Brownian diffusion Smoluchowski method		In the Brownian diffusion Smoluchowski method, ''each molecule is treated as a point-like particle that diffuses freely in three-dimensional space. When a pair of reactive molecules collide, such as an enzyme and its substrate, a reaction occurs and the simulated reactants are replaced by products. [..] Analytic solutions are presented for some simulation parameters while others are calculated using look-up tables''. Supported chemical processes include molecular diffusion, treatment of surfaces, zeroth-order-, unimolecular-, and bimolecular reactions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000329		constant-time kinetic Monte Carlo algorithm	SSA-CR	The computational cost of the original SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] scaled linearly with the number of reactions in the network. Gibson and Bruck developed a logarithmic scaling version of the SSA which uses a priority queue or binary tree for more efficient reaction selection [http://identifiers.org/biomodels.kisao/KISAO_0000027]. More generally, this problem is one of dynamic discrete random variate generation which finds many uses in kinetic Monte Carlo and discrete event simulation. We present here a constant-time algorithm, whose cost is independent of the number of reactions, enabled by a slightly more complex underlying data structure.
http://www.biomodels.net/kisao/KISAO#KISAO_0000274		first-passage Monte Carlo algorithm	asynchronous event-driven diffusion Monte Carlo	We present a novel Monte Carlo algorithm for N diffusing finite particles that react on collisions. Using the theory of first-passage processes and time dependent Green's functions, we break the difficult N-body problem into independent single- and two-body propagations circumventing numerous diffusion hops used in standard Monte Carlo simulations. The new algorithm is exact, extremely efficient, and applicable to many important physical situations in arbitrary integer dimensions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000383		Bader-Deuflhard method		The Bader-Deuflhard method is an extrapolation method based on a semi-implicit discretization [http://identifiers.org/biomodels.kisao/KISAO_0000387]. It is a generalization of the Bulirsch-Stoer algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000379] for solving ordinary differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000283	http://www.biomodels.net/kisao/KISAO#KISAO_0000432	IDA	solver for differential-algebraic equation systems	IDA solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0, y(t0)=y0, y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396]). IDA is written in C, but derived from the package DASPK [http://identifiers.org/biomodels.kisao/KISAO_0000355] which is written in Fortran.
http://www.biomodels.net/kisao/KISAO#KISAO_0000087	http://www.biomodels.net/kisao/KISAO#KISAO_0000435	Dormand-Prince method	DOPRI	Dormand-Prince is an explicit method for the numerical integration of ODES with a given initial value. It is an 'embedded Runge-Kutta method' [http://identifiers.org/biomodels.kisao/KISAO_0000302] RK5 (4) which (a) has a 'small' principal truncation term in the Fifth order and (b) has an extended region of absolute stability.
http://www.biomodels.net/kisao/KISAO#KISAO_0000033		Rosenbrock method	generalized fourth order Runge-Kutta method	Some general implicit processes are given for the solution of simultaneous first-order differential equations. These processes, which use successive substitution, are implicit analogues of the (explicit) Runge-Kutta processes. They require the solution in each time step of one or more set of simultaneous linear equations, usually of a special and simple form. Processes of any required order can be devised, and they can be made to have a wide margin of stability when applied to a linear problem.
http://www.biomodels.net/kisao/KISAO#KISAO_0000379	http://www.biomodels.net/kisao/KISAO#KISAO_0000380	Bulirsch-Stoer algorithm	GBS	The Bulirsch-Stoer method is an adaptive method which uses Gragg's modified midpoint method [http://identifiers.org/biomodels.kisao/KISAO_0000382] to estimate the solution of an initial value problem for various step sizes. The estimates are fit to a "diagonal" rational function or a polynomial as a function of the step size and the limit as the step size tends to zero is taken as the final estimate.
http://www.biomodels.net/kisao/KISAO#KISAO_0000022		Elf and Ehrenberg method	Elf algorithm	Sub-volume stochastic reaction-diffusion method that is a combination of the Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] for sampling the time for a next reaction or diffusion event in each subvolume, with Gibson and Bruck's Next Reaction Method [http://identifiers.org/biomodels.kisao/KISAO_0000027], which is used to keep track of in which subvolume an event occurs next. The subvolumes are kept sorted in a queue, implemented as a binary tree, according to increasing time of the next event. When an event has occurred in the subvolume at the top of the queue, new event times need to be sampled only for one (the event is a chemical reaction) or two (the event is a diffusion jump) subvolume(s).
http://www.biomodels.net/kisao/KISAO#KISAO_0000076	http://www.biomodels.net/kisao/KISAO#KISAO_0000095	Stundzia and Lumsden method	RD SSA	Sub-volume stochastic reaction-diffusion method that using Green's function to link the bulk diffusion coefficient D in Fick's differential law to the corresponding transition rate probability for diffusion of a particle between finite volume elements. This generalized stochastic algorithm enables to numerically calculate the time evolution of a spatially inhomogeneous mixture of reaction-diffusion species in a finite volume. The time step is stochastic and is generated by a probability distribution determined by the intrinsic reaction kinetics and diffusion dynamics.
http://www.biomodels.net/kisao/KISAO#KISAO_0000306	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	Lagrangian sliding fluid element algorithm	blood-tissue exchange method	Because the analytic solutions to the partial differential equations require convolution integration, solutions are obtained relatively efficiently by a fast numerical method. Our approach centers on the use of a sliding fluid element algorithm for capillary convection, with the time step set equal to the length step divided by the fluid velocity. Radial fluxes by permeation between plasma, interstitial fluid, and cells and axial diffusion exchanges within each time step are calculated analytically. The method enforces mass conservation unless there is regional consumption.
http://www.biomodels.net/kisao/KISAO#KISAO_0000338	http://www.biomodels.net/kisao/KISAO#KISAO_0000337	h-version of the finite element method	h-FEM	Classical form of the 'finite element method' [http://identifiers.org/biomodels.kisao/KISAO_0000337], in which polynomials of fixed degree p are used and the mesh is refined to increase accuracy. Can be considered as a special case of the h-p version [http://identifiers.org/biomodels.kisao/KISAO_0000340].
http://www.biomodels.net/kisao/KISAO#KISAO_0000031	http://www.biomodels.net/kisao/KISAO#KISAO_0000261	Euler backward method	implicit Euler method	The Euler backward method is an implicit one-step method for the numerical integration of ODES with a given initial value. The next state of a system is calculated by solving an equation that considers both, the current state of the system and the later one.
http://www.biomodels.net/kisao/KISAO#KISAO_0000388	http://www.biomodels.net/kisao/KISAO#KISAO_0000354	minimal residual method	MINRES	The 'minimal residual method' is an algorithm for the numerical solution of indefinite symmertic systems of linear equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	N-way partial least squares regression method	N-way partial least squares method	Requested by Kristin Tøndel on Thursday, October 13, 2011 11:33:06 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000423	http://www.biomodels.net/kisao/KISAO#KISAO_0000419	partial least squares regression-like method		Method for building regression models between independent and dependent variables.
http://www.biomodels.net/kisao/KISAO#KISAO_0000326	http://www.biomodels.net/kisao/KISAO#KISAO_0000242	number of samples		Parameter of 'equation-free probabilistic steady-state approximation' method [http://identifiers.org/biomodels.kisao/KISAO_0000323], which determines the number of samples taken from the distribution.
http://www.biomodels.net/kisao/KISAO#KISAO_0000027		Gibson-Bruck next reaction algorithm	SSA-GB	As with the first reaction method [http://identifiers.org/biomodels.kisao/KISAO_0000015], a putative reaction time is calculated for each reaction, and the reaction with the shortest reaction time will be realized. However, the unused calculated reaction times are not wasted. The set of reactions is organized in a priority queue to allow for the efficient search for the fastest reaction. In addition, by using a so-called dependency graph only those reaction times are recalculated in each step, that are dependent on the reaction, which has been realized.
http://www.biomodels.net/kisao/KISAO#KISAO_0000453		ordered updating policy		An updating policy that chooses a transition in a definite way.
http://www.biomodels.net/kisao/KISAO#KISAO_0000362		implicit-state Doob-Gillespie algorithm		The algorithm uses a representation of the system together with a super-approximation of its ‘event horizon’ (all events that may happen next), and a specific correction scheme to obtain exact timings. Being completely local and not based on any kind of enumeration, this algorithm has a per event time cost which is independent of (i) the size of the set of generable species (which can even be infinite), and (ii) independent of the size of the system (ie, the number of agent instances). The algorithm can be refined, using concepts derived from the classical notion of causality, so that in addition to the above one also has that the even cost is depending (iii) only logarithmically on the size of the model (ie, the number of rules). 
http://www.biomodels.net/kisao/KISAO#KISAO_0000028	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	slow-scale stochastic simulation algorithm	ssSSA	Attempt to overcome the problem of stiff systems by developing an ''approximate theory that allows one to stochastically advance the system in time by simulating the firings of only the slow reaction events''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000089		LSODAR	Livermore solver for ordinary differential equations with automatic method switching and root finding	LSODAR is a variant of LSODA [http://identifiers.org/biomodels.kisao/KISAO_0000088] with a root finding capability added. Thus it solves problems dy/dt = f with dense or banded Jacobian and automatic method selection, and at the same time, it finds the roots of any of a set of given functions of the form g(t,y). This is often useful for finding stop conditions, or for finding points at which a switch is to be made in the function f.
http://www.biomodels.net/kisao/KISAO#KISAO_0000427	http://www.biomodels.net/kisao/KISAO#KISAO_0000429	number of clusters		Parameter specifying the number of clusters used by C-means algorithm.
http://www.biomodels.net/kisao/KISAO#KISAO_0000380	http://www.biomodels.net/kisao/KISAO#KISAO_0000377	Richardson extrapolation based method		A method based on ideas of Richardson extrapolation, which is a process for obtaining increased accuracy in a discretized approximation by extrapolating results from coarse discretizations to an arbitrarily fine one.
http://www.biomodels.net/kisao/KISAO#KISAO_0000029		Gillespie direct algorithm	Gillespie's direct method	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.
http://www.biomodels.net/kisao/KISAO#KISAO_0000100	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	type of progression time step		Type of time steps used by the algorithm.
http://www.biomodels.net/kisao/KISAO#KISAO_0000071		LSODE	Livermore solver for ordinary differential equations	LSODE solves stiff and nonstiff systems of the form dy/dt = f. In the stiff case, it treats the Jacobian matrix sf/dy as either a dense (full) or a banded matrix, and as either user-supplied or internally approximated by difference quotients. It uses Adams methods (predictor-corrector) [http://identifiers.org/biomodels.kisao/KISAO_0000364] in the nonstiff case, and Backward Differentiation Formula (BDF) methods (the Gear methods) [http://identifiers.org/biomodels.kisao/KISAO_0000288] in the stiff case.
http://www.biomodels.net/kisao/KISAO#KISAO_0000230	http://www.biomodels.net/kisao/KISAO#KISAO_0000243	minimum reactions per leap	threshold	'minimum reactions per leap' parameter is used in hybrid methods, which adaptively switch between the tau-leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039] to the SSA Direct Method [http://identifiers.org/biomodels.kisao/KISAO_0000029] when the number of reactions in a single tau-leaping leap step is less than the threshold.
http://www.biomodels.net/kisao/KISAO#KISAO_0000367		partitioned Runge-Kutta method	symplectic partitioned Runge-Kutta method	If a Hamiltonian system possesses a natural partitioning, it is possible to integrate its certain components using one Runge-Kutta method and other components using a different Runge-Kutta method. The overall s-stage scheme is called a partitioned Runge-Kutta method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000249	http://www.biomodels.net/kisao/KISAO#KISAO_0000252	critical firing threshold	nonnegative tau-leaping second control parameter	The 'nonnegative Poisson tau-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000084] is based on the fact that negative populations typically arise from multiple firings of reactions that are only a few firings away from consuming all the molecules of one of their reactants. To focus on those reaction channels, the modified tau-leaping algorithm introduces a second control parameter nc, a positive integer that is usually set somewhere between 5 and 20. Any reaction channel with a positive propensity function that is currently within nc firings of exhausting one of its reactants is then classified as a critical reaction. The modified algorithm chooses tau in such a way that no more than one firing of all the critical reactions can occur during the leap.
http://www.biomodels.net/kisao/KISAO#KISAO_0000337	http://www.biomodels.net/kisao/KISAO#KISAO_0000369	finite element method	FEA	A numerical technique for finding approximate solutions of partial differential equations (PDE) as well as of integral equations. The solution approach is based either on eliminating the differential equation completely (steady state problems), or rendering the PDE into an approximating system of ordinary differential equations, which are then numerically integrated using standard techniques such as Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261], Runge-Kutta [http://identifiers.org/biomodels.kisao/KISAO_0000064], etc.
http://www.biomodels.net/kisao/KISAO#KISAO_0000315		lattice gas automata	lattice gas cellular automata	Lattice gas automata methods are a series of cellular automata methods used to simulate fluid flows. From the LGCA, it is possible to derive the macroscopic Navier-Stokes equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000256	http://www.biomodels.net/kisao/KISAO#KISAO_0000260	virtual box side length		The 'virtual box side length' is a parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057]. It requests the length of one side of a box.
http://www.biomodels.net/kisao/KISAO#KISAO_0000093	http://www.biomodels.net/kisao/KISAO#KISAO_0000094	LSODPK	Livermore solver for ordinary differential equations for stiff and nonstiff systems with krylov corrector iteration	LSODPK is a set of FORTRAN subroutines for solving the initial value problem for stiff and nonstiff systems of ordinary differential equations. In solving stiff systems, LSODPK uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods [http://identifiers.org/biomodels.kisao/KISAO_0000354]. The user must select the desired Krylov method and supply a pair of routine to evaluate, preprocess, and solve the (left and/or right) preconditioner matrices. Aside from preconditioning, the implementation is matrix-free, meaning that explicit storage of the Jacobian (or related) matrix is not required. The method is experimental because the scope of problems for which it is effective is not well-known, and users are forewarned that LSODPK may or may not be competitive with traditional methods on a given problem. LSODPK also includes an option for a user-supplied linear system solver to be used without Krylov iteration.
http://www.biomodels.net/kisao/KISAO#KISAO_0000452	http://www.biomodels.net/kisao/KISAO#KISAO_0000451	random updating policy		An updating policy that chooses a transition randomly.
http://www.biomodels.net/kisao/KISAO#KISAO_0000232	http://www.biomodels.net/kisao/KISAO#KISAO_0000094	LSOIBT	Livermore solver for ordinary differential equations given in implicit form, with block-tridiagonal Jacobian treatment	LSOIBT solves linearly implicit systems in which the matrices involved are all assumed to be block-tridiagonal. Linear systems are solved by the LU method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000319		Monte Carlo method	MC	Monte Carlo methods (or Monte Carlo experiments) are a class of computational algorithms that rely on repeated random sampling to compute their results.
http://www.biomodels.net/kisao/KISAO#KISAO_0000204	http://www.biomodels.net/kisao/KISAO#KISAO_0000252	particle number upper limit		This parameter of 'Pahle hybrid method' [http://identifiers.org/biomodels.kisao/KISAO_0000231] is a double value specifying the upper limit for particle numbers. Species with a particle number above this value are considered as having a high particle number. The 'particle number upper limit' cannot be lower than the 'particle number lower limit' [http://identifiers.org/biomodels.kisao/KISAO_0000203].
http://www.biomodels.net/kisao/KISAO#KISAO_0000409	http://www.biomodels.net/kisao/KISAO#KISAO_0000408	ordinary Newton method		A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which solves the general nonlinear problem F(x)=0 by applying successive linearization F'(x[k])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,...
http://www.biomodels.net/kisao/KISAO#KISAO_0000288	http://www.biomodels.net/kisao/KISAO#KISAO_0000281	backward differentiation formula	BDF	The backward differentiation formulas (BDF) are implicit multistep methods based on the numerical differentiation of a given function and are wildly used for integration of stiff differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000276	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	Gill method	Gill's method	Gill's fourth order method is a Runge-Kutta method for approximating the solution of the initial value problem y'(x) = f(x,y); y(x0) = y0 which evaluates the integrand,f(x,y), four times per step. This method is a fourth order procedure for which Richardson extrapolation can be used.
http://www.biomodels.net/kisao/KISAO#KISAO_0000090		LSODI	Livermore solver for ordinary differential equations, implicit version	LSODI solves systems given in linearly implicit form, including differential-algebraic systems.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	N-way partial least squares regression method	N-PLS	Requested by Kristin Tøndel on Thursday, October 13, 2011 11:33:06 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000364	http://www.biomodels.net/kisao/KISAO#KISAO_0000289	Adams predictor-corrector method		The combination of evaluating a single explicit integration method ('Adams-Bashforth method' [http://identifiers.org/biomodels.kisao/KISAO_0000279]) (the predictor step) in order to provide a good initial guess for the successive evaluation of an implicit method ('Adams-Moulton method' [http://identifiers.org/biomodels.kisao/KISAO_0000280]) (the corrector step) using iteration.
http://www.biomodels.net/kisao/KISAO#KISAO_0000373	http://www.biomodels.net/kisao/KISAO#KISAO_0000405	differential-algebraic equation problem	DAE	
http://www.biomodels.net/kisao/KISAO#KISAO_0000367	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	partitioned Runge-Kutta method	PRK	If a Hamiltonian system possesses a natural partitioning, it is possible to integrate its certain components using one Runge-Kutta method and other components using a different Runge-Kutta method. The overall s-stage scheme is called a partitioned Runge-Kutta method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000349		method of finite spheres	MFS	Method of finite spheres is truly meshless in the sense that the nodes are placed and the numerical integration is performed without a mesh. Some of the novel features of the method of finite spheres are the numerical integration scheme and the way in which the Dirichlet boundary conditions are incorporated.
http://www.biomodels.net/kisao/KISAO#KISAO_0000228		tau-leaping epsilon	epsilon	The leap condition is chosen such that the expected change in the propensity function aj(x) is bounded by Epsilon * a0 where Epsilon is an error control parameter between 0 and 1. This parameter is the basic error control mechanism for the Tau-Leaping algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000039]. As Epsilon decreases the leaps become shorter and the simulation is more accurate.
http://www.biomodels.net/kisao/KISAO#KISAO_0000358	http://www.biomodels.net/kisao/KISAO#KISAO_0000354	biconjugate gradient method	Bi-CG	The biconjugate gradient method provides a generalization of conjugate gradient method [http://identifiers.org/biomodels.kisao/KISAO_0000357] to non-symmetric matrices.
http://www.biomodels.net/kisao/KISAO#KISAO_0000238	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	type of method		A characteristic describing the way the method finds a solution, specifically whether it solves an equation involving only the current state of the system (explicit) or both the current and the later one (implicit). 
http://www.biomodels.net/kisao/KISAO#KISAO_0000317		E-Cell multi-algorithm simulation method		A modular meta-algorithm with a discrete event scheduler that can incorporate any type of time-driven simulation algorithm. It was shown that this meta-algorithm can efficiently drive simulation models with different simulation algorithms with little intrusive modification to the algorithms themselves. Only a few additional methods to handle communications between computational modules are required.
http://www.biomodels.net/kisao/KISAO#KISAO_0000058	http://www.biomodels.net/kisao/KISAO#KISAO_0000056	Greens function reaction dynamics	GFRD	Method that simulates biochemical networks on particle level. It considers both changes in time and space by ''exploiting both the exact solution of the Smoluchowski Equation to set up an event-driven algorithm'' which allows for large jumps in time when the considered particles are far away from each other [in space] and thus cannot react. GFRD combines the propagation of particles in space with the reactions taking place between them in one simulation step.
http://www.biomodels.net/kisao/KISAO#KISAO_0000000		modeling and simulation algorithm		Algorithm used to instantiate a simulation from a mathematical model.
http://www.biomodels.net/kisao/KISAO#KISAO_0000416		partial least squares regression method	PLSR	Multivariate regression method based on estimated latent variables. Related to Principal Component Analysis (PCA) and Principal Component Regression (PCR).
http://www.biomodels.net/kisao/KISAO#KISAO_0000253		coarse-graining factor		The time in each Monte-Carlo iteration of 'binomial tau-leaping method' [http://identifiers.org/biomodels.kisao/KISAO_0000074] is updated with the time increments tau=f/(a1+a2+...+aM). Here 1/(a1+a2+...+aM) is the averaged microscopic increment of the SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] and f is a coarse-graining factor, controlling the speed-up.
http://www.biomodels.net/kisao/KISAO#KISAO_0000382	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	modified midpoint method	Gragg's modified midpoint method	The modified midpoint method is globally a second order method for approximating the solution of the initial value problem y' = f(x, y), y(x0) = y0, which advances a vector of dependent variables y(x) from a point x to a point x + H by a sequence of n substeps each of size h, h = H/n. 
http://www.biomodels.net/kisao/KISAO#KISAO_0000097		modeling and simulation algorithm characteristic		Simulation algorithm property, which can, for example, describe the model, such as the type of variables (discrete or continuous), and information on the treatment of spatial descriptions, or can be a numerical characteristic, such as the system's behaviour (deterministic or stochastic) as well as the progression mechanism (fixed or adaptive time steps).
http://www.biomodels.net/kisao/KISAO#KISAO_0000058	http://www.biomodels.net/kisao/KISAO#KISAO_0000056	Greens function reaction dynamics	Green's function reaction dynamics	Method that simulates biochemical networks on particle level. It considers both changes in time and space by ''exploiting both the exact solution of the Smoluchowski Equation to set up an event-driven algorithm'' which allows for large jumps in time when the considered particles are far away from each other [in space] and thus cannot react. GFRD combines the propagation of particles in space with the reactions taking place between them in one simulation step.
http://www.biomodels.net/kisao/KISAO#KISAO_0000353		generalized minimal residual algorithm	GMRES	An iterative method for solving linear systems, which has the property of minimizing at every step the norm of the residual vector over a Krylov subspace. The generalized minimal residual method extends the minimal residual method (MINRES) [http://identifiers.org/biomodels.kisao/KISAO_0000388], which is only applicable to symmetric systems, to non-symmetric systems.
http://www.biomodels.net/kisao/KISAO#KISAO_0000051		Bortz-Kalos-Lebowitz algorithm	dynamic Monte Carlo method	The Bortz-Kalos-Lebowitz (or: kinetic Monte-Carlo-) method is a stochastic method for the simulation of time evolution of processes using (pseudo-)random numbers.
http://www.biomodels.net/kisao/KISAO#KISAO_0000255	http://www.biomodels.net/kisao/KISAO#KISAO_0000260	molecules per virtual box		Target molecules per virtual box is a parameter of 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057], which sets the box sizes so that the average number of molecules per box, at simulation initiation, is close to the requested number.
http://www.biomodels.net/kisao/KISAO#KISAO_0000334		multiparticle lattice gas automata	multiparticle lattice gas cellular automata	An algorithm which allows for an arbitrary number of particles, while keeping the benefits of the cellular automata approach [http://identifiers.org/biomodels.kisao/KISAO_0000315].
http://www.biomodels.net/kisao/KISAO#KISAO_0000418		N-way partial least squares regression method	N-way partial least squares method	Requested by Kristin Tøndel on Thursday, October 13, 2011 11:33:06 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000274		first-passage Monte Carlo algorithm	AED diffusion kinetic Monte Carlo method	We present a novel Monte Carlo algorithm for N diffusing finite particles that react on collisions. Using the theory of first-passage processes and time dependent Green's functions, we break the difficult N-body problem into independent single- and two-body propagations circumventing numerous diffusion hops used in standard Monte Carlo simulations. The new algorithm is exact, extremely efficient, and applicable to many important physical situations in arbitrary integer dimensions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000040		Poisson tau-leaping method	poisson tau-leaping	Explicit tau-leaping method with basic pre leap check.
http://www.biomodels.net/kisao/KISAO#KISAO_0000019	http://www.biomodels.net/kisao/KISAO#KISAO_0000433	CVODE	VODEPK	The CVODE is a package written in C that solves ODE initial value problems, in real N-space, written as y'=f(t,y), y(t0)=y0. It is capable for stiff and non-stiff systems and uses two different linear multi-step methods, namely the Adam-Moulton [http://identifiers.org/biomodels.kisao/KISAO_0000280] method and the backward differentiation formula [http://identifiers.org/biomodels.kisao/KISAO_0000288].
http://www.biomodels.net/kisao/KISAO#KISAO_0000358	http://www.biomodels.net/kisao/KISAO#KISAO_0000354	biconjugate gradient method	BCG	The biconjugate gradient method provides a generalization of conjugate gradient method [http://identifiers.org/biomodels.kisao/KISAO_0000357] to non-symmetric matrices.
http://www.biomodels.net/kisao/KISAO#KISAO_0000425		standardising of variables		A boolean parameter of the 'hierarchical cluster-based partial least squares regression method' [http://identifiers.org/biomodels.kisao/KISAO_0000417] specifying whether the variables were standardised (divided by their standard deviations) prior to the regression analysis.
http://www.biomodels.net/kisao/KISAO#KISAO_0000315	http://www.biomodels.net/kisao/KISAO#KISAO_0000068	lattice gas automata	LGA	Lattice gas automata methods are a series of cellular automata methods used to simulate fluid flows. From the LGCA, it is possible to derive the macroscopic Navier-Stokes equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000330		R-leaping algorithm	R-leap method	A novel algorithm is proposed for the acceleration of the exact stochastic simulation algorithm by a predefined number of reaction firings (R-leaping) that may occur across several reaction channels. In the present approach, the numbers of reaction firings are correlated binomial distributions and the sampling procedure is independent of any permutation of the reaction channels. This enables the algorithm to efficiently handle large systems with disparate rates, providing substantial computational savings in certain cases.
http://www.biomodels.net/kisao/KISAO#KISAO_0000280		Adams-Moulton method	implicit Adams method	The (k-1)-step Adams-Moulton method is an implicit linear multistep method that iteratively approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( b0 f(xk,yk) + b1 f(xk - 1,yk - 1) + . . . + bk - 1 f(x1,y1) ), where b1, . . . , bk - 1 are constants.
http://www.biomodels.net/kisao/KISAO#KISAO_0000346	http://www.biomodels.net/kisao/KISAO#KISAO_0000311	mesh-based		In most large-scale numerical simulations of physical phenomena, a large percentage of the overall computational effort is expended on technical details connected with meshing. These details include, in particular, grid generation, mesh adaptation to domain geometry, element or cell connectivity, grid motion and separation to model fracture, fragmentation, free surfaces, etc.
http://www.biomodels.net/kisao/KISAO#KISAO_0000412	http://www.biomodels.net/kisao/KISAO#KISAO_0000408	inexact Newton method	iterative Newton method	For extremely large scale nonlinear problems the arising linear systems for the Newton corrections can no longer be solved directly ('exactly'), but must be solved iterativly ('inexactly) - which gives the name inexact Newton methods. The whole scheme then consists of an inner iteration (at Newton step k): F'(x[k])deltaxi[k]=-F(x[k])+ri[k], k=0,1,... xi[k+1]=x[k]+deltaxi[k], i=0,1,..,imax[k] in terms of residuals ri[k] and an outer iteration where, given x[0], the iterates are defined as x[k+1]=xi[k+1] for i=imax[k], k=0,1,...
http://www.biomodels.net/kisao/KISAO#KISAO_0000104	http://www.biomodels.net/kisao/KISAO#KISAO_0000099	stochastic system behaviour		Algorithm, possessing this characteristic, simulates the temporal evolution of a system using probabilistic rules, so that between two simulations, the same precise initial state may result in a different final state.
http://www.biomodels.net/kisao/KISAO#KISAO_0000287	http://www.biomodels.net/kisao/KISAO#KISAO_0000281	Milstein method		The Milstein method is a technique for the approximate numerical solution of a stochastic differential equation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000301	http://www.biomodels.net/kisao/KISAO#KISAO_0000064	Heun method	Heun's method	The method is named after Karl L. W. M. Heun and is a numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It can be seen as extension of the Euler method [http://identifiers.org/biomodels.kisao/KISAO_0000261] into two-stage second-order Runge-Kutta method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000333		accelerated stochastic simulation algorithm	accelerated SSA	An algorithm, which accelerates SSA [http://identifiers.org/biomodels.kisao/KISAO_0000029] either at the expense of its accuracy or exact.
http://www.biomodels.net/kisao/KISAO#KISAO_0000260	http://www.biomodels.net/kisao/KISAO#KISAO_0000252	virtual box size		Target size of virtual boxes for 'Brownian diffusion Smoluchowski method' [http://identifiers.org/biomodels.kisao/KISAO_0000057].
http://www.biomodels.net/kisao/KISAO#KISAO_0000383	http://www.biomodels.net/kisao/KISAO#KISAO_0000380	Bader-Deuflhard method		The Bader-Deuflhard method is an extrapolation method based on a semi-implicit discretization [http://identifiers.org/biomodels.kisao/KISAO_0000387]. It is a generalization of the Bulirsch-Stoer algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000379] for solving ordinary differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000362	http://www.biomodels.net/kisao/KISAO#KISAO_0000017	implicit-state Doob-Gillespie algorithm		The algorithm uses a representation of the system together with a super-approximation of its ‘event horizon’ (all events that may happen next), and a specific correction scheme to obtain exact timings. Being completely local and not based on any kind of enumeration, this algorithm has a per event time cost which is independent of (i) the size of the set of generable species (which can even be infinite), and (ii) independent of the size of the system (ie, the number of agent instances). The algorithm can be refined, using concepts derived from the classical notion of causality, so that in addition to the above one also has that the even cost is depending (iii) only logarithmically on the size of the model (ie, the number of rules). 
http://www.biomodels.net/kisao/KISAO#KISAO_0000243	http://www.biomodels.net/kisao/KISAO#KISAO_0000201	method switching control parameter		Parameters describing threshold conditions for algorithms that switch between different methods.
http://www.biomodels.net/kisao/KISAO#KISAO_0000283		IDA	solver for differential-algebraic equation systems	IDA solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0, y(t0)=y0, y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396]). IDA is written in C, but derived from the package DASPK [http://identifiers.org/biomodels.kisao/KISAO_0000355] which is written in Fortran.
http://www.biomodels.net/kisao/KISAO#KISAO_0000234		LSODKR	Livermore solver for ordinary differential equations, with preconditioned Krylov iteration methods for the Newton correction linear systems, and with root finding.	LSODKR is an initial value ODE solver for stiff and nonstiff systems. It is a variant of the LSODPK [http://identifiers.org/biomodels.kisao/KISAO_0000093] and LSODE [http://identifiers.org/biomodels.kisao/KISAO_0000071] solvers, intended mainly for large stiff systems. The main differences between LSODKR and LSODE [http://identifiers.org/biomodels.kisao/KISAO_0000071] are the following: a) for stiff systems, LSODKR uses a corrector iteration composed of Newton iteration and one of four preconditioned Krylov subspace iteration methods. The user must supply routines for the preconditioning operations, b) within the corrector iteration, LSODKR does automatic switching between functional (fixpoint) iteration and modified Newton iteration, c) LSODKR includes the ability to find roots of given functions of the solution during the integration.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264	http://www.biomodels.net/kisao/KISAO#KISAO_0000363	cellular automata update method	cellular spaces	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000417	http://www.biomodels.net/kisao/KISAO#KISAO_0000423	hierarchical cluster-based partial least squares regression method	HC-PLSR	Requested by Kristin Tøndel on Thursday, October 13, 2011 11:13:17 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000233		LSODES	Livermore solver for ordinary differential equations with general sparse Jacobian matrix	LSODES solves systems dy/dt = f and in the stiff case treats the Jacobian matrix in general sparse form. It determines the sparsity structure on its own, or optionally accepts this information from the user. It then uses parts of the Yale Sparse Matrix Package (YSMP) to solve the linear systems that arise, by a sparse (direct) LU factorization/backsolve method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000365		NDSolve method		The Mathematica computation system function NDSolve is a general numerical differential equation solver. It can handle a wide range of ordinary differential equations as well as some partial differential equations. NDSolve can also solve some differential-algebraic equations, which are typically a mix of differential and algebraic equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000348		extended finite element method	X-FEM	A numerical method to model arbitrary discontinuities in continuous bodies that does not require the mesh to conform to the discontinuities nor significant mesh refinement near singularities. In X-FEM the standard finite element approximation [http://identifiers.org/biomodels.kisao/KISAO_0000337] is enriched and the approximation space is extended by an additional family of functions.
http://www.biomodels.net/kisao/KISAO#KISAO_0000209		relative tolerance	RTOL	This parameter is a numeric value specifying the desired relative tolerance the user wants to achieve. A smaller value means that the trajectory is calculated more accurately.
http://www.biomodels.net/kisao/KISAO#KISAO_0000279	http://www.biomodels.net/kisao/KISAO#KISAO_0000289	Adams-Bashforth method	explicit Adams method	Given an initial value problem: y' = f(x,y), y(x0) = y0 together with additional starting values y1 = y(x0 + h), . . . , yk-1 = y(x0 + (k-1) h) the k-step Adams-Bashforth method is an explicit linear multistep method that approximates the solution, y(x) at x = x0+kh, of the initial value problem by yk = yk - 1 + h * ( a0 f(xk - 1,yk - 1) + a1 f(xk - 2,yk - 2) + . . . + ak - 1 f(x0,y0) ), where a0, a1, . . . , ak - 1 are constants.
http://www.biomodels.net/kisao/KISAO#KISAO_0000029		Gillespie direct algorithm	SSA	Stochastic simulation algorithm using the reaction probability density function (next-reaction density function), giving the probability that the next reaction will happen in a given time interval. To choose the next reaction to fire, the algorithm directly and separately calculates the identity of the reaction and the time it will fire.
http://www.biomodels.net/kisao/KISAO#KISAO_0000410	http://www.biomodels.net/kisao/KISAO#KISAO_0000408	simlified Newton method		A 'Newton-type method' [http://identifiers.org/biomodels.kisao/KISAO_0000408] which is characterized by keeping the initial derivative throughout the whole iteration: F'(x[0])deltax[k]=-F(x[k]), x[k+1]=x[k]+deltax[k], k=0,1,...
http://www.biomodels.net/kisao/KISAO#KISAO_0000273		hard-particle molecular dynamics		A collision-driven molecular dynamics algorithm for a system of non-spherical particles.
http://www.biomodels.net/kisao/KISAO#KISAO_0000437	http://www.biomodels.net/kisao/KISAO#KISAO_0000407	flux balance analysis	FBA	Flux balance analysis is a mathematical approach for analyzing the flow of metabolites through a metabolic network.
http://www.biomodels.net/kisao/KISAO#KISAO_0000288		backward differentiation formula	Gear's method	The backward differentiation formulas (BDF) are implicit multistep methods based on the numerical differentiation of a given function and are wildly used for integration of stiff differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000356		DASSL	DDASSL	DASSL is designed for the numerical solution of implicit systems of differential/algebraic equations written in the form F(t,y,y')=0, where F, y, and y' are vectors, and initial values for y and y' are given.
http://www.biomodels.net/kisao/KISAO#KISAO_0000418		N-way partial least squares regression method	N-way PLSR	Requested by Kristin Tøndel on Thursday, October 13, 2011 11:33:06 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000288		backward differentiation formula	Gear method	The backward differentiation formulas (BDF) are implicit multistep methods based on the numerical differentiation of a given function and are wildly used for integration of stiff differential equations.
http://www.biomodels.net/kisao/KISAO#KISAO_0000099	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	type of system behaviour		A characteristic describing the rules the algorithm uses to simulate the temporal evolution of a system, specifically whether or not the final state is uniquely determined from a precise initial state.
http://www.biomodels.net/kisao/KISAO#KISAO_0000369	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	partial differential equation discretization method		A method which solves partial differential equations by discretizing them, i.e. approximating them by equations that involve a finite number of unknowns.
http://www.biomodels.net/kisao/KISAO#KISAO_0000416		partial least squares regression method	PLSR	Requested by Kristin Tøndel on Thursday, October 13, 2011 10:46:04 AM.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264	http://www.biomodels.net/kisao/KISAO#KISAO_0000363	cellular automata update method	cellular structures	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
http://www.biomodels.net/kisao/KISAO#KISAO_0000340	http://www.biomodels.net/kisao/KISAO#KISAO_0000337	h-p version of the finite element method	hp-FEM	In h-p version of 'finite difference method' [http://identifiers.org/biomodels.kisao/KISAO_0000337] the two approaches of mesh refinement and degree enchacement are combined.
http://www.biomodels.net/kisao/KISAO#KISAO_0000366	http://www.biomodels.net/kisao/KISAO#KISAO_0000097	symplecticness		Roughly speaking, ‘symplecticness’ is a characteristic property possessed by the solutions of Hamiltonian problems. A numerical method is called symplectic if, when applied to Hamiltonian problems, it generates numerical solutions which inherit the property of symplecticness (phase volume preservation).
http://www.biomodels.net/kisao/KISAO#KISAO_0000056		Smoluchowski equation based method		Method based on the Smoluchowski equation.
http://www.biomodels.net/kisao/KISAO#KISAO_0000205	http://www.biomodels.net/kisao/KISAO#KISAO_0000252	partitioning interval		This positive integer value specifies after how many steps the internal partitioning of the system should be recalculated.
http://www.biomodels.net/kisao/KISAO#KISAO_0000454	http://www.biomodels.net/kisao/KISAO#KISAO_0000453	constant updating policy		An updating policy that chooses a transition in a constant way.
http://www.biomodels.net/kisao/KISAO#KISAO_0000038	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	sorting stochastic simulation algorithm	sorting direct method	In order to overcome the problem of high complexity of the Stochastic Simulation Algorithm [http://identifiers.org/biomodels.kisao/KISAO_0000029] when simulating large systems, the sorting direct method maintains a loosely sorted order of the reactions as the simulation executes.
http://www.biomodels.net/kisao/KISAO#KISAO_0000350	http://www.biomodels.net/kisao/KISAO#KISAO_0000333	probability-weighted dynamic Monte Carlo method	probability-weighted DMC	We have developed a probability-weighted DMC method by incorporating the weighted sampling algorithm of equilibrium molecular simulations. This new algorithm samples the slow reactions very efficiently and makes it possible to simulate in a computationally efficient manner the reaction kinetics of physical systems in which the rates of reactions vary by several orders of magnitude.
http://www.biomodels.net/kisao/KISAO#KISAO_0000232		LSOIBT	Livermore solver for ordinary differential equations given in implicit form, with block-tridiagonal Jacobian treatment	LSOIBT solves linearly implicit systems in which the matrices involved are all assumed to be block-tridiagonal. Linear systems are solved by the LU method.
http://www.biomodels.net/kisao/KISAO#KISAO_0000283	http://www.biomodels.net/kisao/KISAO#KISAO_0000432	IDA	implicit differential-algebraic solver	IDA solves real differential-algebraic systems in N-space, in the general form F(t,y,y')=0, y(t0)=y0, y'(t0)=y'0. At each step, a Newton iteration [http://identifiers.org/biomodels.kisao/KISAO_0000408] leads to linear systems Jx=b, which are solved by one of five methods - two direct (dense or band; serial version only) and three Krylov [http://identifiers.org/biomodels.kisao/KISAO_0000354] (GMRES [http://identifiers.org/biomodels.kisao/KISAO_0000353], BiCGStab [http://identifiers.org/biomodels.kisao/KISAO_0000392], or TFQMR [http://identifiers.org/biomodels.kisao/KISAO_0000396]). IDA is written in C, but derived from the package DASPK [http://identifiers.org/biomodels.kisao/KISAO_0000355] which is written in Fortran.
http://www.biomodels.net/kisao/KISAO#KISAO_0000281	http://www.biomodels.net/kisao/KISAO#KISAO_0000000	multistep method	multi-value method	A numerical method for differential equations which is based on several values of the solution.
http://www.biomodels.net/kisao/KISAO#KISAO_0000058		Greens function reaction dynamics	Green's function reaction dynamics	Method that simulates biochemical networks on particle level. It considers both changes in time and space by ''exploiting both the exact solution of the Smoluchowski Equation to set up an event-driven algorithm'' which allows for large jumps in time when the considered particles are far away from each other [in space] and thus cannot react. GFRD combines the propagation of particles in space with the reactions taking place between them in one simulation step.
http://www.biomodels.net/kisao/KISAO#KISAO_0000264		cellular automata update method	tessellation automata	Cellular automata are mathematical idealizations of physical systems in which space and time are discrete, and physical quantities take on a finite set of discrete values. A cellular automaton consists of a regular uniform lattice (or ''array''), usually infinite in extent, with a discrete variable at each site (''cell''). A cellular automaton evolves in discrete time steps, with the value of the variable at one site being affected by the values of variables at sites in its ''neighbourhood'' on the previous time step. The neighbourhood of a site is typically taken to be the site itself and all immediately adjacent sites. The variables at each site are updated simultaneously (''synchronously''), based on the values of the variables in their neighbourhood at the preceding time step, and according to a definite set of ''local rules''.
