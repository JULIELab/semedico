<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>semedico</artifactId>
        <groupId>de.julielab</groupId>
        <version>3.1.0-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>semedico-frontend</artifactId>
    <name>semedico-frontend Tapestry 5 Application</name>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <!-- Exclude JCL and LOG4J since all logging should go through SLF4J.
                        Note that we're excluding log4j-<version>.jar but keeping log4j-over-slf4j-<version>.jar -->
                    <packagingExcludes>WEB-INF/classes/configuration*</packagingExcludes>
                </configuration>
            </plugin>
            <plugin>
                <!-- Delete the WAR source directory because if we don't sometimes old
                    resources and libs accumulate there and then no one understands where the
                    errors come from. -->
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <!-- Clean the libraries after packaging -->
                    <execution>
                        <id>CleanWARSource</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <delete dir="${project.build.directory}/${project.build.finalName}"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>CleanLib</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <delete dir="lib"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                copy-dependency plugin
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>copy-dependencies</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>
    <dependencies>
        <dependency>
            <groupId>de.julielab</groupId>
            <artifactId>semedico-core</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>de.julielab</groupId>
            <artifactId>semedico-docmod-base</artifactId>
            <version>3.1.0-SNAPSHOT</version>
        </dependency>

        <!-- A dependency on either JUnit or TestNG is required, or the surefire
            plugin (which runs the tests) will fail, preventing Maven from packaging
            the WAR. Tapestry includes a large number of testing facilities designed
            for use with TestNG (http://testng.org/), so it's recommended. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <packaging>war</packaging>
</project>
