<?xml version="1.0" encoding="UTF-8"?>

<module id="stemnet.core" version="1.0.0">
	<service-point id="TermSuggestionService" interface="de.julielab.stemnet.suggestions.ITermSuggestionService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.suggestions.TermSuggestionService">
			  	<service>SuggestionIndexReader</service>
			  	<set property="maxTokenLength" value="7"/>
			  	<set property="minTokenLength" value="2"/>
			  	<set-service property="termService" service-id="stemnet.core.TermService"/>
			</construct>
		</invoke-factory>
	</service-point>
	
	<service-point id="FacetHitCollectorService" interface="de.julielab.stemnet.search.IFacetHitCollectorService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.search.FacetHitCollectorService">
			<!-- 
				<service>stemnet.core.TermService</service>
				<service>stemnet.core.FacetService</service>
				 -->
			</construct>
		</invoke-factory>
	</service-point>
	
	<!-- 
 	<service-point id="SearchService" interface="de.julielab.stemnet.search.ISearchService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.search.SearchService" initialize-method="init">
			<set-service property="searcher" service-id="DocumentIndexSearcher"></set-service>
			</construct>
		</invoke-factory>
	</service-point>
 -->
 	<service-point id="SearchService" interface="de.julielab.stemnet.search.ISearchService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.search.SearchService" initialize-method="init">
			<set-service property="searcher" service-id="SolrServer"></set-service>
			</construct>
		</invoke-factory>
	</service-point>
 
 
	<service-point id="QueryTranslationService" interface="de.julielab.stemnet.query.IQueryTranslationService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.query.QueryTranslationService">
			 <!-- <string>${stemnet.search.stopwords.file}</string> -->
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="KwicService" interface="de.julielab.stemnet.search.IKwicService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.search.KwicService">
				 <!-- <set-service property="indexReaderWrapper" service-id="DocumentIndexReader"></set-service> -->
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="TermOccurrenceFilterService" interface="de.julielab.stemnet.core.services.ITermOccurrenceFilterService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.core.services.TermOccurrenceFilterService"/>
		</invoke-factory>
	</service-point>

	<service-point	id="TermTableBuilder"
					interface="org.apache.hivemind.ServiceImplementationFactory">

		<invoke-factory model="pooled">
			<construct class="de.julielab.stemnet.search.TermTableBuilder">
				<service>DocumentIndexReader</service>	
				<service>TermService</service>
				<service>FacetService</service>
			</construct>
			
		</invoke-factory>
	</service-point>
		
	<service-point id="TermTable" interface="de.julielab.stemnet.search.ITermTable">
		<invoke-factory model="singleton" service-id="TermTableBuilder"/>
	</service-point>
	
	<service-point	id="IndexSearcherFactory"
					interface="org.apache.hivemind.ServiceImplementationFactory">
		<parameters-schema>
          <element name="directoryPath">
             <rules>
                 <push-content/>
                 <invoke-parent method="addElement"/>
             </rules>
          </element>		 
        </parameters-schema>

		<invoke-factory model="singleton">
			<construct class="de.julielab.lucene.IndexSearcherFactory"/>
		</invoke-factory>
	</service-point>

	<service-point	id="IndexReaderFactory"
					interface="org.apache.hivemind.ServiceImplementationFactory">
		<parameters-schema>
          <element name="directoryPath">
             <rules>
                 <push-content/>
                 <invoke-parent method="addElement"/>
             </rules>
          </element>		 
        </parameters-schema>

		<invoke-factory model="singleton">
			<construct class="de.julielab.lucene.IndexReaderFactory"/>
		</invoke-factory>
	</service-point>
	
	<service-point	id="SolrServerFactory"
					interface="org.apache.hivemind.ServiceImplementationFactory">
		<parameters-schema>
          <element name="serverUrl">
             <rules>
                 <push-content/>
                 <invoke-parent method="addElement"/>
             </rules>
          </element>		 
        </parameters-schema>

		<invoke-factory model="singleton">
			<construct class="de.julielab.solr.SolrServerFactory"/>
		</invoke-factory>
	</service-point>

	<service-point	id="TermIndexSearcher"
					interface="de.julielab.lucene.IIndexSearcherWrapper">

		<invoke-factory model="singleton" service-id="IndexSearcherFactory">
			<directoryPath>${stemnet.query.termindex}</directoryPath>
		</invoke-factory>
	</service-point>
	
	<service-point id="SolrServer"
					interface="de.julielab.solr.ISolrServerWrapper">

		<invoke-factory model="singleton" service-id="SolrServerFactory">
			<serverUrl>${stemnet.core.search.solrUrl}</serverUrl>
		</invoke-factory>
	</service-point>
<!-- 
	<service-point	id="DocumentIndexSearcher"
					interface="de.julielab.lucene.IIndexSearcherWrapper">

		<invoke-factory model="singleton" service-id="IndexSearcherFactory">
			<directoryPath>${stemnet.search.index.path}</directoryPath>
		</invoke-factory>
	</service-point>
 -->
	<service-point	id="SuggestionIndexReader"
					interface="de.julielab.lucene.IIndexReaderWrapper">

		<invoke-factory model="singleton" service-id="IndexReaderFactory">
			<directoryPath>${stemnet.suggestions.index.path}</directoryPath>
		</invoke-factory>
	</service-point>

	<service-point	id="DocumentIndexReader"
					interface="de.julielab.lucene.IIndexReaderWrapper">

		<invoke-factory model="singleton" service-id="IndexReaderFactory">
			<directoryPath>${stemnet.search.index.path}</directoryPath>
		</invoke-factory>
	</service-point>
			
	<service-point id="QueryDisambiguationService" interface="de.julielab.stemnet.query.IQueryDisambiguationService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.query.QueryDisambiguationService">
				 <service>StopWords</service>  
				 <set-service property="searcher" service-id="TermIndexSearcher"></set-service>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="QueryDictionaryBuilderService" interface="de.julielab.stemnet.query.IQueryDictionaryBuilderService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.query.QueryDictionaryBuilderService">
				 <set-service property="stopWords" service-id="StopWords"></set-service>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="QueryIndexBuilderService" interface="de.julielab.stemnet.query.IQueryIndexBuilderService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.query.QueryIndexBuilderService"/>
		</invoke-factory>
	</service-point>

	<service-point id="TermOccurrenceExtractorService" interface="de.julielab.stemnet.core.services.ITermOccurrenceExtractorService">	
		<invoke-factory	model="singleton">
			<construct class="de.julielab.stemnet.core.services.TermOccurrenceExtractorService"/>
		</invoke-factory>
	</service-point>

	<service-point id="DictionaryReaderService" interface="de.julielab.lingpipe.IDictionaryReaderService">	
		<invoke-factory	model="singleton">
			<construct class="de.julielab.lingpipe.DictionaryReaderService">
				 <string>${stemnet.query.dictionary.file}</string>  
			</construct>
						
		</invoke-factory>				
	</service-point>
	
	<service-point	id="DictionaryChunker"
					interface="com.aliasi.chunk.Chunker">
		<invoke-factory	service-id="ExactDictionaryChunkerFactory" model="singleton">
			<caseSensitive>false</caseSensitive>
		</invoke-factory>
	</service-point>

	<service-point	id="StopWords"
					interface="java.util.Set">
		<invoke-factory	service-id="FileReaderService" model="singleton">
			<filePath>${stemnet.search.stopwords.file}</filePath>
		</invoke-factory>
	</service-point>
	
	<service-point	id="FileReaderService"
					interface="org.apache.hivemind.ServiceImplementationFactory">

		<invoke-factory model="singleton">
			<construct class="de.julielab.util.PlainFileReaderService"/>
		</invoke-factory>

		<parameters-schema>
          <element name="filePath">
             <rules>
                 <push-content/>
                 <invoke-parent method="addElement"/>
             </rules>
          </element>		 
        </parameters-schema>		
	</service-point>

	<service-point id="FileObjectProvider" interface="org.apache.hivemind.service.ObjectProvider">
			
		<invoke-factory model="singleton">
			<construct class="de.julielab.util.FileObjectProvider"/>
		</invoke-factory>	
	</service-point>
	
	
	<contribution configuration-id="hivemind.ObjectProviders">
		<provider prefix="file" service-id="FileObjectProvider"/>	
	</contribution>
	 
	<service-point id="SpellingDictionary" interface="org.apache.lucene.search.spell.Dictionary">
		<invoke-factory model="singleton">
			<construct class="org.apache.lucene.search.spell.PlainTextDictionary">
				<object>file:${stemnet.spelling.dictionary.file}</object>
			</construct>
		</invoke-factory>			
	</service-point>
	
	<service-point id="LevensteinDistance" interface="org.apache.lucene.search.spell.StringDistance">
		<invoke-factory model="singleton">
			<construct class="org.apache.lucene.search.spell.LevensteinDistance"/>
		</invoke-factory>	
	</service-point>
	
	<service-point id="SpellCheckerService" interface="de.julielab.stemnet.spelling.ISpellCheckerService">
		
		<invoke-factory model="singleton">
			<construct class="de.julielab.stemnet.spelling.SpellCheckerService">
				<service>SpellingDictionary</service>
				<service>LevensteinDistance</service>
				<int>5</int>
			</construct>
		</invoke-factory>		
	</service-point>
	
	<service-point	id="ExactDictionaryChunkerFactory"
					interface="org.apache.hivemind.ServiceImplementationFactory">

		<invoke-factory model="singleton">
			<construct class="de.julielab.lingpipe.ExactDictionaryChunkerFactory">
				<set-service property="dictionaryReaderService" service-id="stemnet.core.DictionaryReaderService"/>
			</construct>
		</invoke-factory>

		<parameters-schema>
          <element name="caseSensitive" content-translator="boolean">
             <rules>
                 <push-content/>
                 <invoke-parent method="addElement"/>
             </rules>
          </element>		 
        </parameters-schema>		
	</service-point>
	
	<service-point	id="DataSource"
					interface="javax.sql.DataSource">
		Pooled DataSource that will be used by the ConnectionFactory to create
		JDBC Connections.
		It is eager-loaded so that the pool is ready at first request.

		<invoke-factory model="singleton">
			<construct class="org.postgresql.ds.PGPoolingDataSource">
				<set property="serverName" value="${stemnet.database.serverName}"/>
				<set property="databaseName" value="${stemnet.database.databaseName}"/>
				<set property="user" value="${stemnet.database.user}"/>
				<set property="password" value="${stemnet.database.password}"/>
				<set property="maxConnections"  value="${stemnet.database.maxConnections}"/>
				<set property="portNumber"  value="${stemnet.database.portNumber}"/>
				<set property="initialConnections" value="${stemnet.database.initialConnections}"/>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point	id="ConnectionService"
					interface="org.apache.hivemind.ServiceImplementationFactory">
		
		<parameters-schema>
               <element name="datasource">One unique datasource element defines the service-point id of 
			a pooled DataSource to be used to build JDBC Connections.
				<attribute name="id" required="true" translator="service"/>
                   <rules>
                       <push-attribute attribute="id"/>
                       <invoke-parent method="addElement"/>
                   </rules>
			</element>
           </parameters-schema>

           <invoke-factory model="primitive">
               <construct class="de.julielab.db.ConnectionService"/>
           </invoke-factory>
	</service-point>
	
	<service-point	id="Connection"
					interface="java.sql.Connection">
		JDBC Connection that will be used by the Entity services.
		
		<invoke-factory	service-id="ConnectionService" model="singleton">
			<datasource id="DataSource"/>
		</invoke-factory>
	</service-point>

	<service-point id="DocumentService" interface="de.julielab.stemnet.core.services.IDocumentService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.core.services.DocumentService">
				<!-- <set-service property="searcherWrapper" service-id="DocumentIndexSearcher"></set-service> -->
				<set-service property="searcher" service-id="SolrServer"></set-service>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="TermService" interface="de.julielab.stemnet.core.services.ITermService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.core.services.TermService">
				<service>FacetService</service>
				<service>Connection</service>
				<set-service property="documentIndexReader" service-id="DocumentIndexReader"></set-service>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="JournalService" interface="de.julielab.stemnet.core.services.IJournalService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.core.services.JournalService"/>
		</invoke-factory>
	</service-point>
	
	<service-point id="FacetService" interface="de.julielab.stemnet.core.services.IFacetService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.core.services.FacetService">
				<service>Connection</service>
			</construct>
		</invoke-factory>
	</service-point>
	
	<service-point id="ExternalLinkService" interface="de.julielab.stemnet.core.services.IExternalLinkService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.core.services.ExternalLinkService"/>
		</invoke-factory>
	</service-point>

	<service-point id="RelatedArticlesService" interface="de.julielab.stemnet.core.services.IRelatedArticlesService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.core.services.RelatedArticlesService"/>
		</invoke-factory>
	</service-point>
	
	<service-point id="TermFileReaderService" interface="de.julielab.stemnet.core.services.ITermFileReaderService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.core.services.TermFileReaderService">
				<service>FacetService</service>
				<string>${stemnet.import.termFile}</string>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="DocumentCacheService" interface="de.julielab.stemnet.core.services.IDocumentCacheService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.core.services.DocumentCacheService"/>
		</invoke-factory>
	</service-point>

	<service-point id="LabelCacheService" interface="de.julielab.stemnet.search.ILabelCacheService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.search.LabelCacheService"/>
		</invoke-factory>
	</service-point>
			
	<service-point id="DocumentSetLimitizerService" interface="de.julielab.stemnet.search.IDocumentSetLimitizerService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.search.DocumentSetLimitizerService"/>
		</invoke-factory>
	</service-point>
	
	<service-point id="FacettedSearchService" interface="de.julielab.stemnet.search.IFacettedSearchService">	
		<invoke-factory	model="pooled">
			<construct class="de.julielab.stemnet.search.FacettedSearchService">
				<int>${stemnet.core.search.maxFacettedDocuments}</int>
				<int>${stemnet.core.search.maxNumberOfDocumentHits}</int>
				<set-service property="searcher" service-id="SolrServer"></set-service>
			</construct>
		</invoke-factory>
	</service-point>
	
	<contribution configuration-id="hivemind.FactoryDefaults">
		<default symbol="stemnet.database.maxConnections" value="10"/>
		<default symbol="stemnet.database.initialConnections" value="1"/>
		<default symbol="stemnet.database.portNumber" value="5432"/>
		<default symbol="stemnet.terms.loadTermsAtStartUp" value="false"/>
	</contribution>
	
	<contribution configuration-id="hivemind.SymbolSources">
		<source name="properties-file" class="de.julielab.hivemind.PropertiesFileSymbolSource"/>
	</contribution>
</module>

