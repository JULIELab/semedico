Das ganze als script:

MATCH ()-[r]->(f:FACET {name:"Medical Subject Headings"}) delete(r);
MATCH (fgs:ROOT)-->(n),(f:FACET {name:"Medical Subject Headings"}) WHERE n.name = 'BioMed' CREATE n-[:HAS_FACET]->f return n,f;
MATCH ()-[r]->(f:FACET{acronym:"GO"}) delete(r);
MATCH (fgs:ROOT)-->(n),(f:FACET{acronym:"GO"}) WHERE n.name = 'BioMed' CREATE n-[:HAS_FACET]->f return n,f;
MATCH ()-[r]->(f:FACET{acronym:"GRO"}) delete(r);
MATCH (fgs:ROOT)-->(n),(f:FACET{acronym:"GRO"}) WHERE n.name = 'BioMed' CREATE n-[:HAS_FACET]->f return n,f;
MATCH (fgs:ROOT)-[r]->n WHERE n.name="BioPortal" delete(r);
curl -XPOST http://dawkins:7474/db/data/ext/TermManager/graphdb/include_terms &&
curl -XPOST http://dawkins:7474/db/data/ext/TermManager/graphdb/exclude_terms
&&
./runResourceTools.sh -ca INCLUDE &&
./runResourceTools.sh -cap

qualifier property für die Gene setzen:
match (t:TERM) where 'fid21' in t.facets with split(t.displayName, "[")[1] as species,t set t.qualifier=[] + split(species, "]")[0]

Styles für die BioPortal-Facetten, die wir schnell noch nach BioMed übernommen haben...


MATCH (f:FACET) where f.name='Gene Ontology' WITH f.id as fid MERGE (f:FACET{id:fid}) ON MATCH set f.cssId='analytical'
MATCH (f:FACET) where f.name='Medical Subject Headings' WITH f.id as fid MERGE (f:FACET{id:fid}) ON MATCH set f.cssId='healthCare'
MATCH (f:FACET) where f.name='Gene Regulation Ontology' WITH f.id as fid MERGE (f:FACET{id:fid}) ON MATCH set f.cssId='disciplines'



sonstige änderungen:
Änderung an der Event facette
    setze als searchFields abstract und title:
    MERGE (f:FACET {id:'fid395'}) ON MATCH set f.searchFieldNames=['text','title'] return f
    (ich glaube, das ist schon in den resources tools integriert)
Änderung an der BTerm facette, definiere facetEvents als zusätzliches feld, um bterme zu beziehen
    MERGE (f:FACET {id:'fid5'}) ON MATCH set f.aggregationFields=['facetEvents'] return f
Auf Grund des cuttens von BioPortal muss man auch noch das USE_FOR_BTERMS label von allen außer den übernommenen facetten wegnehmen

Änderung an den Event termen, damit man sie überhaupt down-drillen kann:
match (f:EVENTS)-->x  with x.id as tid,f.id as fid merge (t:TERM {id:tid}) on match set t.childrenInFacets= CASE t.childrenInFacets WHEN null THEN [fid] ELSE t.childrenInFacets + [fid] END
das muss auch noch in den semedico resources creation scripts mit rein


Um Labels von allen facetten auf nur die wirklich verwendeten umzuverteilen:
match (f:USE_FOR_SUGGESTIONS) remove f:USE_FOR_SUGGESTIONS
match (fgs:ROOT{name:'facetGroups'})-->fg-->f set f:USE_FOR_SUGGESTIONS



Erläuterte Version:

Check, dass MeSH einzigartig:
	MATCH (f:FACET {name:"Medical Subject Headings"}) return f
Check, dass BioMed einzigartig:
	MATCH (fgs:ROOT)-->(n) WHERE n.name = 'BioMed' return n
MESH nach BioMed verschieben
	MATCH ()-[r]->(f:FACET {name:"Medical Subject Headings"}) delete(r)
	MATCH (fgs:ROOT)-->(n),(f:FACET {name:"Medical Subject Headings"}) WHERE n.name = 'BioMed' CREATE n-[:HAS_FACET]->f return n,f
NCBI Tax nach BioMed verschieben
	MATCH ()-[r]->(f:FACET{acronym:"NCBITAXON"}) delete(r)
	MATCH (fgs:ROOT)-->(n),(f:FACET{acronym:"NCBITAXON"}) WHERE n.name = 'BioMed' CREATE n-[:HAS_FACET]->f return n,f
GO nach BioMed verschieben
	MATCH ()-[r]->(f:FACET{acronym:"GO"}) delete(r)
	MATCH (fgs:ROOT)-->(n),(f:FACET{acronym:"GO"}) WHERE n.name = 'BioMed' CREATE n-[:HAS_FACET]->f return n,f
GRO nach BioMed verschieben
	MATCH ()-[r]->(f:FACET{acronym:"GRO"}) delete(r)
	MATCH (fgs:ROOT)-->(n),(f:FACET{acronym:"GRO"}) WHERE n.name = 'BioMed' CREATE n-[:HAS_FACET]->f return n,f
BioPortal FacetGroup 'abkoppeln'
	MATCH (fgs:ROOT)-[r]->n WHERE n.name="BioPortal" delete(r)
allen verbleibenden Termen, die von "facetGroups" erreichbar sind ein "INCLUDE" label geben
	curl -XPOST http://dawkins:7474/db/data/ext/TermManager/graphdb/include_terms
allen nicht-INCLUDE-Termen ein EXCLUDE label geben und allen EXCLUDE-Termen die labels entfernen
	MAPPING_AGGREGATE
	AGGREGATE
	TERM
	curl -XPOST http://dawkins:7474/db/data/ext/TermManager/graphdb/exclude_terms